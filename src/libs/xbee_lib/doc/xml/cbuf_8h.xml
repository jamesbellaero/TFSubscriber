<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="cbuf_8h" kind="file" language="C++">
    <compoundname>cbuf.h</compoundname>
    <includes refid="platform_8h" local="yes">xbee/platform.h</includes>
    <includedby refid="xbee__serial__dos_8c" local="yes">src/dos/xbee_serial_dos.c</includedby>
    <includedby refid="xbee__serial__hcs08_8c" local="yes">src/hcs08/xbee_serial_hcs08.c</includedby>
    <includedby refid="xbee__cbuf_8c" local="yes">src/xbee/xbee_cbuf.c</includedby>
    <includedby refid="xbee__ota__client_8c" local="yes">src/xbee/xbee_ota_client.c</includedby>
    <includedby refid="ota__client_8h" local="yes">include/xbee/ota_client.h</includedby>
    <incdepgraph>
      <node id="202">
        <label>errno.h</label>
      </node>
      <node id="204">
        <label>xbee/jslong_glue.h</label>
        <link refid="jslong__glue_8h_source"/>
        <childnode refid="205" relation="include">
        </childnode>
      </node>
      <node id="203">
        <label>stddef.h</label>
      </node>
      <node id="201">
        <label>xbee/platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="202" relation="include">
        </childnode>
        <childnode refid="203" relation="include">
        </childnode>
        <childnode refid="204" relation="include">
        </childnode>
      </node>
      <node id="200">
        <label>include/xbee/cbuf.h</label>
        <link refid="cbuf_8h"/>
        <childnode refid="201" relation="include">
        </childnode>
      </node>
      <node id="205">
        <label>xbee/jslong.h</label>
        <link refid="jslong_8h_source"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="210">
        <label>src/xbee/xbee_ota_client.c</label>
        <link refid="xbee__ota__client_8c"/>
      </node>
      <node id="207">
        <label>src/dos/xbee_serial_dos.c</label>
        <link refid="xbee__serial__dos_8c"/>
      </node>
      <node id="209">
        <label>src/xbee/xbee_cbuf.c</label>
        <link refid="xbee__cbuf_8c"/>
      </node>
      <node id="211">
        <label>include/xbee/ota_client.h</label>
        <link refid="ota__client_8h"/>
        <childnode refid="210" relation="include">
        </childnode>
      </node>
      <node id="206">
        <label>include/xbee/cbuf.h</label>
        <link refid="cbuf_8h"/>
        <childnode refid="207" relation="include">
        </childnode>
        <childnode refid="208" relation="include">
        </childnode>
        <childnode refid="209" relation="include">
        </childnode>
        <childnode refid="210" relation="include">
        </childnode>
        <childnode refid="211" relation="include">
        </childnode>
      </node>
      <node id="208">
        <label>src/hcs08/xbee_serial_hcs08.c</label>
        <link refid="xbee__serial__hcs08_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structxbee__cbuf__t" prot="public">xbee_cbuf_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__util__cbuf_1ga6fb73f000c9aa3d2b26f3ae089676bfa" prot="public" static="no">
        <name>XBEE_CBUF_OVERHEAD</name>
        <initializer>sizeof(<ref refid="structxbee__cbuf__t" kindref="compound">xbee_cbuf_t</ref>)</initializer>
        <briefdescription>
<para>XBEE_CBUF_OVERHEAD is used when allocating memory for a circular buffer. </para>        </briefdescription>
        <detaileddescription>
<para>For a cbuf that can hold X bytes, you need (X + CBUF_OVERHEAD) bytes of memory.</para><para>XBEE_CBUF_OVERHEAD includes a 4-byte header, plus a separator byte in the buffered data.</para><para>For example, to set up a 31-byte circular buffer: <programlisting><codeline><highlight class="normal">#define<sp/>MY_BUF_SIZE<sp/>31<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>must<sp/>be<sp/>2^n<sp/>-1</highlight></codeline>
<codeline><highlight class="normal">char<sp/>my_buf_space[MY_BUF_SIZE<sp/>+<sp/>XBEE_CBUF_OVERHEAD];</highlight></codeline>
<codeline><highlight class="normal">xbee_cbuf_t<sp/>*my_buf;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">my_buf<sp/>=<sp/>(xbee_cbuf_t<sp/>*)my_buf_space;</highlight></codeline>
<codeline><highlight class="normal">xbee_cbuf_init(<sp/>my_buf,<sp/>MY_BUF_SIZE);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>or</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">struct<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>xbee_cbuf_t<sp/><sp/><sp/><sp/>cbuf;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>char<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf_space[MY_BUF_SIZE];</highlight></codeline>
<codeline><highlight class="normal">}<sp/>my_buf;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">xbee_cbuf_init(<sp/>&amp;my_buf.cbuf,<sp/>MY_BUF_SIZE);</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/xbee/cbuf.h" line="65" column="9" bodyfile="include/xbee/cbuf.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__util__cbuf_1gaa3f9edea3274c2d62f09768c38fe6a1d" prot="public" static="no">
        <name>xbee_cbuf_length</name>
        <param><defname>cbuf</defname></param>
        <initializer>((cbuf)-&gt;mask)</initializer>
        <briefdescription>
<para>Returns the capacity of the circular buffer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cbuf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to circular buffer.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0-255</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum number of bytes that can be stored in the circularbuffer.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__util__cbuf_1gaf3ac1a430fe9dbe3498e96c3b96bb0f7" kindref="member">xbee_cbuf_used</ref>, <ref refid="group__util__cbuf_1ga9a2eeedf642bdf31dba98aacdc5a7d75" kindref="member">xbee_cbuf_free</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/xbee/cbuf.h" line="134" column="9" bodyfile="include/xbee/cbuf.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__util__cbuf_1gabf58cafa9f3e989b433a14c23a94cebb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int xbee_cbuf_init</definition>
        <argsstring>(xbee_cbuf_t FAR *cbuf, uint_fast8_t datasize)</argsstring>
        <name>xbee_cbuf_init</name>
        <param>
          <type><ref refid="structxbee__cbuf__t" kindref="compound">xbee_cbuf_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>cbuf</declname>
        </param>
        <param>
          <type>uint_fast8_t</type>
          <declname>datasize</declname>
        </param>
        <briefdescription>
<para>Initialize the fields of the circular buffer. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>You must initialize the <ref refid="structxbee__cbuf__t" kindref="compound">xbee_cbuf_t</ref> structure before using it with any other xbee_cbuf_xxx() functions. If you have ISRs pushing data into the buffer, don&apos;t enable them until AFTER you&apos;ve called xbee_cbuf_init.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">cbuf</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of buffer to use for the circular buffer. This buffer must be (datasize + CBUF_OVEREAD) bytes long to hold the locks, head, tail, size and buffered bytes.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">datasize</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum number of bytes to store in the circular buffer. This size must be at least 3, no more than 255, and a power of 2 minus 1 (2^n - 1).</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>invalid parameter </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/xbee/xbee_cbuf.c" line="31" column="1" bodyfile="src/xbee/xbee_cbuf.c" bodystart="31" bodyend="42"/>
        <references refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" compoundref="platform_8h" startline="95">EINVAL</references>
        <referencedby refid="group__xbee__ota__client_1ga4805b029d840b86133ef62d64866c6af" compoundref="xbee__ota__client_8c" startline="157" endline="211">xbee_ota_init</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__util__cbuf_1gaab9462b172fea45fc3e5ce2b3a5cca10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int xbee_cbuf_putch</definition>
        <argsstring>(xbee_cbuf_t FAR *cbuf, uint_fast8_t ch)</argsstring>
        <name>xbee_cbuf_putch</name>
        <param>
          <type><ref refid="structxbee__cbuf__t" kindref="compound">xbee_cbuf_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>cbuf</declname>
        </param>
        <param>
          <type>uint_fast8_t</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
<para>Append a single byte to the circular buffer (if not full). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">cbuf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to circular buffer.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch</parametername>
</parameternamelist>
<parameterdescription>
<para>Byte to append.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer is full </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>the byte was appended</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__util__cbuf_1gaf78d1608008ebde71b57a6bf34e6a3e1" kindref="member">xbee_cbuf_getch</ref>, <ref refid="group__util__cbuf_1ga98b2d80239319b2a9875772c28a7630a" kindref="member">xbee_cbuf_get</ref>, <ref refid="group__util__cbuf_1gad3d314f23c6c7c6fc31c9b65ce61eee1" kindref="member">xbee_cbuf_put</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/xbee/xbee_cbuf.c" line="46" column="1" bodyfile="src/xbee/xbee_cbuf.c" bodystart="46" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="group__util__cbuf_1gaf78d1608008ebde71b57a6bf34e6a3e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int xbee_cbuf_getch</definition>
        <argsstring>(xbee_cbuf_t FAR *cbuf)</argsstring>
        <name>xbee_cbuf_getch</name>
        <param>
          <type><ref refid="structxbee__cbuf__t" kindref="compound">xbee_cbuf_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>cbuf</declname>
        </param>
        <briefdescription>
<para>Remove and return the first byte of the circular buffer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cbuf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to circular buffer.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer is empty </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>0-255</parametername>
</parameternamelist>
<parameterdescription>
<para>byte removed from the head of the buffer</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__util__cbuf_1gaab9462b172fea45fc3e5ce2b3a5cca10" kindref="member">xbee_cbuf_putch</ref>, <ref refid="group__util__cbuf_1ga98b2d80239319b2a9875772c28a7630a" kindref="member">xbee_cbuf_get</ref>, <ref refid="group__util__cbuf_1gad3d314f23c6c7c6fc31c9b65ce61eee1" kindref="member">xbee_cbuf_put</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/xbee/xbee_cbuf.c" line="63" column="1" bodyfile="src/xbee/xbee_cbuf.c" bodystart="63" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="group__util__cbuf_1gaf3ac1a430fe9dbe3498e96c3b96bb0f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint_fast8_t</type>
        <definition>uint_fast8_t xbee_cbuf_used</definition>
        <argsstring>(xbee_cbuf_t FAR *cbuf)</argsstring>
        <name>xbee_cbuf_used</name>
        <param>
          <type><ref refid="structxbee__cbuf__t" kindref="compound">xbee_cbuf_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>cbuf</declname>
        </param>
        <briefdescription>
<para>Returns the number of bytes stored in the circular buffer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cbuf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to circular buffer.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0-255</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes stored in the circular buffer.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__util__cbuf_1gaa3f9edea3274c2d62f09768c38fe6a1d" kindref="member">xbee_cbuf_length</ref>, <ref refid="group__util__cbuf_1ga9a2eeedf642bdf31dba98aacdc5a7d75" kindref="member">xbee_cbuf_free</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/xbee/xbee_cbuf.c" line="81" column="1" bodyfile="src/xbee/xbee_cbuf.c" bodystart="81" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="group__util__cbuf_1ga9a2eeedf642bdf31dba98aacdc5a7d75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint_fast8_t</type>
        <definition>uint_fast8_t xbee_cbuf_free</definition>
        <argsstring>(xbee_cbuf_t FAR *cbuf)</argsstring>
        <name>xbee_cbuf_free</name>
        <param>
          <type><ref refid="structxbee__cbuf__t" kindref="compound">xbee_cbuf_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>cbuf</declname>
        </param>
        <briefdescription>
<para>Returns the number of additional bytes that can be stored in the circular buffer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cbuf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to circular buffer.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0-255</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of unused bytes in the circular buffer.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__util__cbuf_1gaa3f9edea3274c2d62f09768c38fe6a1d" kindref="member">xbee_cbuf_length</ref>, <ref refid="group__util__cbuf_1ga9a2eeedf642bdf31dba98aacdc5a7d75" kindref="member">xbee_cbuf_free</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/xbee/xbee_cbuf.c" line="88" column="1" bodyfile="src/xbee/xbee_cbuf.c" bodystart="88" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="group__util__cbuf_1gaf0cf797a0e4ee8c9e518e0d8b9554b10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xbee_cbuf_flush</definition>
        <argsstring>(xbee_cbuf_t FAR *cbuf)</argsstring>
        <name>xbee_cbuf_flush</name>
        <param>
          <type><ref refid="structxbee__cbuf__t" kindref="compound">xbee_cbuf_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>cbuf</declname>
        </param>
        <briefdescription>
<para>Flush the contents of the circular buffer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">cbuf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to circular buffer. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/xbee/xbee_cbuf.c" line="95" column="1" bodyfile="src/xbee/xbee_cbuf.c" bodystart="95" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="group__util__cbuf_1gad3d314f23c6c7c6fc31c9b65ce61eee1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint_fast8_t</type>
        <definition>uint_fast8_t xbee_cbuf_put</definition>
        <argsstring>(xbee_cbuf_t FAR *cbuf, const void FAR *buffer, uint_fast8_t length)</argsstring>
        <name>xbee_cbuf_put</name>
        <param>
          <type><ref refid="structxbee__cbuf__t" kindref="compound">xbee_cbuf_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>cbuf</declname>
        </param>
        <param>
          <type>const void <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>uint_fast8_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Append multiple bytes to the end of a circular buffer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">cbuf</parametername>
</parameternamelist>
<parameterdescription>
<para>circular buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>data to copy into circular buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes to copy</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0-255</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes copied (may be less than length if buffer is full) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/xbee/xbee_cbuf.c" line="102" column="1" bodyfile="src/xbee/xbee_cbuf.c" bodystart="102" bodyend="127"/>
        <references refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" compoundref="platform_8h" startline="370">FAR</references>
      </memberdef>
      <memberdef kind="function" id="group__util__cbuf_1ga98b2d80239319b2a9875772c28a7630a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint_fast8_t</type>
        <definition>uint_fast8_t xbee_cbuf_get</definition>
        <argsstring>(xbee_cbuf_t *cbuf, void FAR *buffer, uint_fast8_t length)</argsstring>
        <name>xbee_cbuf_get</name>
        <param>
          <type><ref refid="structxbee__cbuf__t" kindref="compound">xbee_cbuf_t</ref> *</type>
          <declname>cbuf</declname>
        </param>
        <param>
          <type>void <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>uint_fast8_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Read (and remove) multiple bytes from circular buffer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">cbuf</parametername>
</parameternamelist>
<parameterdescription>
<para>circular buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>destination to copy data from circular buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes to copy</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0-255</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes copied (may be less than length if buffer is empty) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/xbee/xbee_cbuf.c" line="131" column="1" bodyfile="src/xbee/xbee_cbuf.c" bodystart="131" bodyend="154"/>
        <references refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" compoundref="platform_8h" startline="370">FAR</references>
        <referencedby refid="group__xbee__ota__client_1ga1e29a78ac03e3450859847d4a5e3b73b" compoundref="xbee__ota__client_8c" startline="90" endline="103">_xbee_ota_xmodem_read</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Circular buffer data type used by the OTA (Over-The-Air) firmware update client and transparent serial cluster. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2010-2012<sp/>Digi<sp/>International<sp/>Inc.,</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>not<sp/>expressly<sp/>granted<sp/>are<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>Source<sp/>Code<sp/>Form<sp/>is<sp/>subject<sp/>to<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>Mozilla<sp/>Public</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>License,<sp/>v.<sp/>2.0.<sp/>If<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>MPL<sp/>was<sp/>not<sp/>distributed<sp/>with<sp/>this<sp/>file,</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>You<sp/>can<sp/>obtain<sp/>one<sp/>at<sp/>http://mozilla.org/MPL/2.0/.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>Digi<sp/>International<sp/>Inc.<sp/>11001<sp/>Bren<sp/>Road<sp/>East,<sp/>Minnetonka,<sp/>MN<sp/>55343</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>=======================================================================</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor">#ifndef<sp/>XBEE_CBUF_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>XBEE_CBUF_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="platform_8h" kindref="compound">xbee/platform.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><ref refid="group__hal_1ga336bff4f4a6012aacc4468132bbd3d7f" kindref="member">XBEE_BEGIN_DECLS</ref></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="structxbee__cbuf__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structxbee__cbuf__t" kindref="compound">xbee_cbuf_t</ref><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lock;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>front,<sp/>or<sp/>head<sp/>index<sp/>of<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tail;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>back,<sp/>or<sp/>tail<sp/>index<sp/>of<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2^n<sp/>-<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[1];<sp/></highlight><highlight class="comment">//<sp/>variable<sp/>length<sp/>(&lt;mask&gt;<sp/>bytes<sp/>+<sp/>1<sp/>separator<sp/>byte)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">}<sp/><ref refid="structxbee__cbuf__t" kindref="compound">xbee_cbuf_t</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="group__util__cbuf_1ga6fb73f000c9aa3d2b26f3ae089676bfa" refkind="member"><highlight class="preprocessor">#define<sp/>XBEE_CBUF_OVERHEAD<sp/>sizeof(xbee_cbuf_t)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__util__cbuf_1gabf58cafa9f3e989b433a14c23a94cebb" kindref="member">xbee_cbuf_init</ref>(<sp/><ref refid="structxbee__cbuf__t" kindref="compound">xbee_cbuf_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*cbuf,<sp/>uint_fast8_t<sp/>datasize);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__hal__hcs08_1gac4c834cc0ad3ee43af562f658833a6d5" kindref="member">xbee_cbuf_putch</ref>(<sp/><ref refid="structxbee__cbuf__t" kindref="compound">xbee_cbuf_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*cbuf,<sp/>uint_fast8_t<sp/>ch);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__util__cbuf_1gaf78d1608008ebde71b57a6bf34e6a3e1" kindref="member">xbee_cbuf_getch</ref>(<sp/><ref refid="structxbee__cbuf__t" kindref="compound">xbee_cbuf_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*cbuf);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="group__util__cbuf_1gaa3f9edea3274c2d62f09768c38fe6a1d" refkind="member"><highlight class="preprocessor">#define<sp/>xbee_cbuf_length(cbuf)<sp/><sp/><sp/>((cbuf)-&gt;mask)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal">uint_fast8_t<sp/><ref refid="group__util__cbuf_1gaf3ac1a430fe9dbe3498e96c3b96bb0f7" kindref="member">xbee_cbuf_used</ref>(<sp/><ref refid="structxbee__cbuf__t" kindref="compound">xbee_cbuf_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*cbuf);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal">uint_fast8_t<sp/><ref refid="group__util__cbuf_1ga9a2eeedf642bdf31dba98aacdc5a7d75" kindref="member">xbee_cbuf_free</ref>(<sp/><ref refid="structxbee__cbuf__t" kindref="compound">xbee_cbuf_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*cbuf);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__util__cbuf_1gaf0cf797a0e4ee8c9e518e0d8b9554b10" kindref="member">xbee_cbuf_flush</ref>(<sp/><ref refid="structxbee__cbuf__t" kindref="compound">xbee_cbuf_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*cbuf);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal">uint_fast8_t<sp/><ref refid="group__util__cbuf_1gad3d314f23c6c7c6fc31c9b65ce61eee1" kindref="member">xbee_cbuf_put</ref>(<sp/><ref refid="structxbee__cbuf__t" kindref="compound">xbee_cbuf_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*cbuf,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*buffer,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint_fast8_t<sp/><ref refid="group__zdo_1gab2b3adeb2a67e656ff030b56727fd0ac" kindref="member">length</ref>);</highlight></codeline>
<codeline lineno="200"><highlight class="normal">uint_fast8_t<sp/><ref refid="group__util__cbuf_1ga98b2d80239319b2a9875772c28a7630a" kindref="member">xbee_cbuf_get</ref>(<sp/><ref refid="structxbee__cbuf__t" kindref="compound">xbee_cbuf_t</ref><sp/>*cbuf,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*buffer,</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint_fast8_t<sp/><ref refid="group__zdo_1gab2b3adeb2a67e656ff030b56727fd0ac" kindref="member">length</ref>);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><ref refid="group__hal_1ga8d7f5a691878e9ffb7da396899581062" kindref="member">XBEE_END_DECLS</ref></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>compiling<sp/>in<sp/>Dynamic<sp/>C,<sp/>automatically<sp/>#use<sp/>the<sp/>appropriate<sp/>C<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__DC__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#use<sp/>&quot;xbee_cbuf.c&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>XBEE_CBUF_H<sp/>defined</highlight></codeline>
    </programlisting>
    <location file="include/xbee/cbuf.h"/>
  </compounddef>
</doxygen>
