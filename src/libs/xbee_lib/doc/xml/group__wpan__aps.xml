<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__wpan__aps" kind="group">
    <compoundname>wpan_aps</compoundname>
    <title>Cluster/Endpoint layer</title>
    <innerfile refid="wpan__aps_8c">wpan_aps.c</innerfile>
    <innerfile refid="aps_8h">aps.h</innerfile>
    <innerclass refid="structwpan__envelope__t" prot="public">wpan_envelope_t</innerclass>
    <innerclass refid="structwpan__cluster__table__entry__t" prot="public">wpan_cluster_table_entry_t</innerclass>
    <innerclass refid="structwpan__endpoint__table__entry__t" prot="public">wpan_endpoint_table_entry_t</innerclass>
    <innerclass refid="structwpan__dev__t" prot="public">wpan_dev_t</innerclass>
    <innerclass refid="structwpan__conversation__t" prot="public">wpan_conversation_t</innerclass>
    <innerclass refid="structwpan__ep__state__t" prot="public">wpan_ep_state_t</innerclass>
      <sectiondef kind="user-defined">
      <header>ZigBee Stack Profile IDs</header>
      <description><para>4-bit values used in ZigBee beacons </para></description>
      <memberdef kind="define" id="group__wpan__aps_1ga6c74dccd9d25158e8fae5f405708a412" prot="public" static="no">
        <name>WPAN_STACK_PROFILE_PROPRIETARY</name>
        <initializer>0x0</initializer>
        <briefdescription>
<para>Network Specific. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="70" column="9" bodyfile="include/wpan/aps.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__wpan__aps_1ga7836a9ee2baaed24f5f4f8368aee7ef4" prot="public" static="no">
        <name>WPAN_STACK_PROFILE_ZIGBEE</name>
        <initializer>0x1</initializer>
        <briefdescription>
<para>ZigBee (2006) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="72" column="9" bodyfile="include/wpan/aps.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__wpan__aps_1ga9f0ebaaaa46a7bdaa646050b927d5dbb" prot="public" static="no">
        <name>WPAN_STACK_PROFILE_ZIGBEE_PRO</name>
        <initializer>0x2</initializer>
        <briefdescription>
<para>ZigBee PRO (2007) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="74" column="9" bodyfile="include/wpan/aps.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="define" id="group__wpan__aps_1gabdbce33bdd976b65877a241842b73a20" prot="public" static="no">
        <name>WPAN_PROFILE_ZDO</name>
        <initializer>0x0000</initializer>
        <briefdescription>
<para>ZigBee Device Object (aka ZigBee Device Profile) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="80" column="9" bodyfile="include/wpan/aps.h" bodystart="80" bodyend="-1"/>
        <referencedby refid="group__zdo_1gab405baf051b6c2b3c85bc4e80aa5c2bb" compoundref="zigbee__zdo_8c" startline="65" endline="68">_zdo_endpoint_of</referencedby>
        <referencedby refid="group__zdo_1gae4b6736d215caf2a10790761ed52443d" compoundref="zigbee__zdo_8c" startline="110" endline="139">_zdo_envelope_create</referencedby>
        <referencedby refid="group__zdo_1gafbbece379bc09af360099d1e0825d507" compoundref="zigbee__zdo_8c" startline="422" endline="464">zdo_simple_desc_request</referencedby>
        <referencedby refid="group__zdo_1gac842062e5e1a60d25cddf16ec22ef601" compoundref="zigbee__zdo_8c" startline="925" endline="969">zdo_send_descriptor_req</referencedby>
      </memberdef>
      <memberdef kind="define" id="group__wpan__aps_1ga7cc56763cce2df7785d8d5e75f9e1a40" prot="public" static="no">
        <name>WPAN_PROFILE_SMART_ENERGY</name>
        <initializer>0x0109</initializer>
        <briefdescription>
<para>Smart Energy Profile. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="83" column="9" bodyfile="include/wpan/aps.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__wpan__aps_1gaa90d7d1301c7de503f39113eb83e93e5" prot="public" static="no">
        <name>WPAN_PROFILE_DIGI</name>
        <initializer>0xC105</initializer>
        <briefdescription>
<para>Digi International, mfg-specific. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="86" column="9" bodyfile="include/wpan/aps.h" bodystart="86" bodyend="-1"/>
        <referencedby refid="group__xbee__ota__client_1ga4805b029d840b86133ef62d64866c6af" compoundref="xbee__ota__client_8c" startline="157" endline="211">xbee_ota_init</referencedby>
        <referencedby refid="group__xbee__transparent_1gafbf9e5ccdb17be373012bd690a76e570" compoundref="xbee__transparent__serial_8c" startline="32" endline="41">xbee_transparent_serial</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Manufacturer IDs</header>
      <description><para>Contact the ZigBee Alliance to have a Manufacturer ID assigned to your company.</para><para>DO NOT use the Digi Manufacturer ID for your own manufacturer-specific profiles/clusters/attributes. </para></description>
      <memberdef kind="define" id="group__wpan__aps_1gaa70d29d210f9c88ba4d98192da5fe49e" prot="public" static="no">
        <name>WPAN_MANUFACTURER_DIGI</name>
        <initializer>0x101E</initializer>
        <briefdescription>
<para>Digi International (MaxStream) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="96" column="9" bodyfile="include/wpan/aps.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__wpan__aps_1ga1ead60857a680665668ceefcc848476f" prot="public" static="no">
        <name>WPAN_MANUFACTURER_DIGI2</name>
        <initializer>0x1087</initializer>
        <briefdescription>
<para>Digi International. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="98" column="9" bodyfile="include/wpan/aps.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__wpan__aps_1ga5c6e0e7a7b405359bceb6d8ccb95ea87" prot="public" static="no">
        <name>WPAN_MANUFACTURER_TEST1</name>
        <initializer>0xFFF1</initializer>
        <briefdescription>
<para>Test Vendor #1. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="101" column="9" bodyfile="include/wpan/aps.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__wpan__aps_1ga45102d99f16b30fb8773a2c8d1a03865" prot="public" static="no">
        <name>WPAN_MANUFACTURER_TEST2</name>
        <initializer>0xFFF2</initializer>
        <briefdescription>
<para>Test Vendor #2. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="103" column="9" bodyfile="include/wpan/aps.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__wpan__aps_1ga688f8334e635eccefb38df9ae08d8689" prot="public" static="no">
        <name>WPAN_MANUFACTURER_TEST3</name>
        <initializer>0xFFF3</initializer>
        <briefdescription>
<para>Test Vendor #3. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="105" column="9" bodyfile="include/wpan/aps.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="define" id="group__wpan__aps_1ga860a08927c4e6d7656281713186c43dd" prot="public" static="no">
        <name>WPAN_ENDPOINT_ZDO</name>
        <initializer>0x00</initializer>
        <briefdescription>
<para>ZigBee Device Object/Profile. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="111" column="9" bodyfile="include/wpan/aps.h" bodystart="111" bodyend="-1"/>
        <referencedby refid="group__zdo_1gab405baf051b6c2b3c85bc4e80aa5c2bb" compoundref="zigbee__zdo_8c" startline="65" endline="68">_zdo_endpoint_of</referencedby>
        <referencedby refid="group__zdo_1gae4b6736d215caf2a10790761ed52443d" compoundref="zigbee__zdo_8c" startline="110" endline="139">_zdo_envelope_create</referencedby>
        <referencedby refid="group__zdo_1gafbbece379bc09af360099d1e0825d507" compoundref="zigbee__zdo_8c" startline="422" endline="464">zdo_simple_desc_request</referencedby>
        <referencedby refid="group__zdo_1gac842062e5e1a60d25cddf16ec22ef601" compoundref="zigbee__zdo_8c" startline="925" endline="969">zdo_send_descriptor_req</referencedby>
      </memberdef>
      <memberdef kind="define" id="group__wpan__aps_1ga0c664cef1ec55fd759b5ec9d4bea2618" prot="public" static="no">
        <name>WPAN_ENDPOINT_DIGI_SE</name>
        <initializer>0x5E</initializer>
        <briefdescription>
<para>Digi Smart Energy. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="113" column="9" bodyfile="include/wpan/aps.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__wpan__aps_1ga97ce39dc7f8bc63ac9d874b1c807158d" prot="public" static="no">
        <name>WPAN_ENDPOINT_DDO</name>
        <initializer>0xE6</initializer>
        <briefdescription>
<para>Digi Device Objects. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="115" column="9" bodyfile="include/wpan/aps.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__wpan__aps_1ga7a19c414fd3b7386a205d5150c604ef5" prot="public" static="no">
        <name>WPAN_ENDPOINT_DIGI_DEVICE</name>
        <initializer><ref refid="group__wpan__aps_1ga97ce39dc7f8bc63ac9d874b1c807158d" kindref="member">WPAN_ENDPOINT_DDO</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="116" column="9" bodyfile="include/wpan/aps.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__wpan__aps_1ga83cb85a2a1e374554f9ad735c9c06e7b" prot="public" static="no">
        <name>WPAN_ENDPOINT_DIGI_DATA</name>
        <initializer>0xE8</initializer>
        <briefdescription>
<para>Digi Data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="118" column="9" bodyfile="include/wpan/aps.h" bodystart="118" bodyend="-1"/>
        <referencedby refid="group__xbee__ota__client_1ga4805b029d840b86133ef62d64866c6af" compoundref="xbee__ota__client_8c" startline="157" endline="211">xbee_ota_init</referencedby>
        <referencedby refid="group__xbee__transparent_1gafbf9e5ccdb17be373012bd690a76e570" compoundref="xbee__transparent__serial_8c" startline="32" endline="41">xbee_transparent_serial</referencedby>
      </memberdef>
      <memberdef kind="define" id="group__wpan__aps_1ga1a2c2bd5eb7dcb276d89e7f7e9d66d32" prot="public" static="no">
        <name>WPAN_ENDPOINT_BROADCAST</name>
        <initializer>0xFF</initializer>
        <briefdescription>
<para>Broadcast Endpoint. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="120" column="9" bodyfile="include/wpan/aps.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <description><para>Bitfields for <computeroutput>flags</computeroutput> parameter to a <ref refid="group__wpan__aps_1ga505477d0257efe527747c6d1f561cd6c" kindref="member">wpan_endpoint_send_fn()</ref>. </para></description>
      <memberdef kind="define" id="group__wpan__aps_1ga527d35044842aa4e58eb3c4134eb968d" prot="public" static="no">
        <name>WPAN_SEND_FLAG_NONE</name>
        <initializer>0x0000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="322" column="9" bodyfile="include/wpan/aps.h" bodystart="322" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__wpan__aps_1ga5b0b8ed1c327d9da8beb9dec38d3117a" prot="public" static="no">
        <name>WPAN_SEND_FLAG_ENCRYPTED</name>
        <initializer>0x0001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="323" column="9" bodyfile="include/wpan/aps.h" bodystart="323" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <description><para>Values for <computeroutput>flags</computeroutput> field of <ref refid="structwpan__cluster__table__entry__t" kindref="compound">wpan_cluster_table_entry_t</ref>. </para></description>
      <memberdef kind="define" id="group__wpan__aps_1ga738343e3e3392f22d0a5d7615648ba53" prot="public" static="no">
        <name>WPAN_CLUST_FLAG_NONE</name>
        <initializer>0x00</initializer>
        <briefdescription>
<para>no flags </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="222" column="11" bodyfile="include/wpan/aps.h" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__wpan__aps_1ga2024b5d21c6f8c2f151cc2b0576c08f4" prot="public" static="no">
        <name>WPAN_CLUST_FLAG_INPUT</name>
        <initializer>0x01</initializer>
        <briefdescription>
<para>input/server cluster (typically receives requests) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="224" column="11" bodyfile="include/wpan/aps.h" bodystart="224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__wpan__aps_1ga0456c33bdaa673f37f9285a3f5ca0172" prot="public" static="no">
        <name>WPAN_CLUST_FLAG_OUTPUT</name>
        <initializer>0x02</initializer>
        <briefdescription>
<para>output/client cluster (typically receives responses) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="226" column="11" bodyfile="include/wpan/aps.h" bodystart="226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__wpan__aps_1gaf1185ec162a18803e11a83491bf57d3d" prot="public" static="no">
        <name>WPAN_CLUST_FLAG_INOUT</name>
        <initializer>0x03</initializer>
        <briefdescription>
<para>both client and server cluster </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="228" column="11" bodyfile="include/wpan/aps.h" bodystart="228" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__wpan__aps_1ga9e0a1a0abf5594d8fa5a38b1ca40b3bc" prot="public" static="no">
        <name>WPAN_CLUST_FLAG_SERVER</name>
        <initializer><ref refid="group__wpan__aps_1ga2024b5d21c6f8c2f151cc2b0576c08f4" kindref="member">WPAN_CLUST_FLAG_INPUT</ref></initializer>
        <briefdescription>
<para>alias name for input cluster (uses ZCL terminology) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="230" column="11" bodyfile="include/wpan/aps.h" bodystart="230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__wpan__aps_1ga9aae0646b212af63cbb07c98a33cd986" prot="public" static="no">
        <name>WPAN_CLUST_FLAG_CLIENT</name>
        <initializer><ref refid="group__wpan__aps_1ga0456c33bdaa673f37f9285a3f5ca0172" kindref="member">WPAN_CLUST_FLAG_OUTPUT</ref></initializer>
        <briefdescription>
<para>alias name for output cluster (uses ZCL terminology) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="232" column="11" bodyfile="include/wpan/aps.h" bodystart="232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__wpan__aps_1ga1eafd87038a2134da7a1f72e6801d23b" prot="public" static="no">
        <name>WPAN_CLUST_FLAG_ENCRYPT</name>
        <initializer>0x10</initializer>
        <briefdescription>
<para>Data sent or received by this cluster must be encrypted. </para>        </briefdescription>
        <detaileddescription>
<para>Do not accept unencrypted broadcast messages. If using this flag on a non-ZCL cluster, be sure to set WPAN_CLUST_FLAG_NOT_ZCL as well. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="237" column="11" bodyfile="include/wpan/aps.h" bodystart="237" bodyend="-1"/>
        <referencedby refid="group__xbee__ota__client_1ga88905a78517417dd42f6356038717d01" compoundref="xbee__ota__client_8c" startline="119" endline="154">_xbee_ota_xmodem_write</referencedby>
        <referencedby refid="group__xbee__ota__client_1ga4805b029d840b86133ef62d64866c6af" compoundref="xbee__ota__client_8c" startline="157" endline="211">xbee_ota_init</referencedby>
        <referencedby refid="group__xbee__ota__server_1ga22cb77be06faba4020a4f5e0daf48f4f" compoundref="xbee__ota__server_8c" startline="30" endline="77">xbee_ota_server_cmd</referencedby>
      </memberdef>
      <memberdef kind="define" id="group__wpan__aps_1ga1ccfd85378afaa02de5c3f9c71c17df4" prot="public" static="no">
        <name>WPAN_CLUST_FLAG_ENCRYPT_UNICAST</name>
        <initializer>0x20</initializer>
        <briefdescription>
<para>Unicast data sent or received by this cluster must be encrypted, but unencrypted broadcast frames are OK. </para>        </briefdescription>
        <detaileddescription>
<para>If using this flag on a non-ZCL cluster, be sure to set WPAN_CLUST_FLAG_NOT_ZCL as well. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="242" column="11" bodyfile="include/wpan/aps.h" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__wpan__aps_1gacb0e365a8c5e72ee90be503513e7e630" prot="public" static="no">
        <name>WPAN_CLUST_FLAG_NOT_ZCL</name>
        <initializer>0x80</initializer>
        <briefdescription>
<para>this cluster is NOT using the ZigBee Cluster Library (ZCL) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="244" column="11" bodyfile="include/wpan/aps.h" bodystart="244" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__wpan__aps_1ga1227ab13b41d82d9c9c9080662f74cf7" prot="public" static="no">
        <name>wpan_clust_digi</name>
        <enumvalue id="group__wpan__aps_1gga1227ab13b41d82d9c9c9080662f74cf7ac46c70b2d273c05acf42fd4a19583187" prot="public">
          <name>DIGI_CLUST_SLEEP_SYNC</name>
          <initializer>= 0x0009</initializer>
          <briefdescription>
<para>DigiMesh Sleeping Router Sync. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__wpan__aps_1gga1227ab13b41d82d9c9c9080662f74cf7a8208e143b452d11140e487d7d29eb38f" prot="public">
          <name>DIGI_CLUST_SERIAL</name>
          <initializer>= 0x0011</initializer>
          <briefdescription>
<para>Serial data. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__wpan__aps_1gga1227ab13b41d82d9c9c9080662f74cf7a378346cc570b606ab6984ade7e1ff01d" prot="public">
          <name>DIGI_CLUST_LOOPBACK</name>
          <initializer>= 0x0012</initializer>
          <briefdescription>
<para>Serial loopback transmit. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__wpan__aps_1gga1227ab13b41d82d9c9c9080662f74cf7ae94c438b8e786806a840eb6cae8603fd" prot="public">
          <name>DIGI_CLUST_ND_COMMAND</name>
          <initializer>= 0x0015</initializer>
          <briefdescription>
<para>Digi ND Command. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__wpan__aps_1gga1227ab13b41d82d9c9c9080662f74cf7a6606012ac5ed20a518f28ff156be7652" prot="public">
          <name>DIGI_CLUST_DN_COMMAND</name>
          <initializer>= 0x0016</initializer>
          <briefdescription>
<para>Digi DN Command. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__wpan__aps_1gga1227ab13b41d82d9c9c9080662f74cf7aa637ec5b1224724b075a36eefa351126" prot="public">
          <name>DIGI_CLUST_REMOTE_COMMAND</name>
          <initializer>= 0x0021</initializer>
          <briefdescription>
<para>Remote Command Request. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__wpan__aps_1gga1227ab13b41d82d9c9c9080662f74cf7ae81533aa4490e5001cc0866c0572fc2e" prot="public">
          <name>DIGI_CLUST_NR_COMMAND</name>
          <initializer>= 0x0022</initializer>
          <briefdescription>
<para>Digi NR Command. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__wpan__aps_1gga1227ab13b41d82d9c9c9080662f74cf7a66527ddc0653858888ce47c469c95349" prot="public">
          <name>DIGI_CLUST_IODATA</name>
          <initializer>= 0x0092</initializer>
          <briefdescription>
<para>Unsolicited I/O data sample. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__wpan__aps_1gga1227ab13b41d82d9c9c9080662f74cf7a8d4df2bd5e335f87df0e038e803796ef" prot="public">
          <name>DIGI_CLUST_WATCHPORT</name>
          <initializer>= 0x0094</initializer>
          <briefdescription>
<para>Unsolicited Watchport sensor. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__wpan__aps_1gga1227ab13b41d82d9c9c9080662f74cf7ad19431fd18576cc8463e8ac362a8579c" prot="public">
          <name>DIGI_CLUST_NODEID_MESSAGE</name>
          <initializer>= 0x0095</initializer>
          <briefdescription>
<para>Node ID Message. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__wpan__aps_1gga1227ab13b41d82d9c9c9080662f74cf7a1705862df524f4ecaab07a18a0b3f0d1" prot="public">
          <name>DIGI_CLUST_DN_RESPONSE</name>
          <initializer>= 0x0096</initializer>
          <briefdescription>
<para>Digi DN Response. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__wpan__aps_1gga1227ab13b41d82d9c9c9080662f74cf7a84486276a61e57d2d2ff9a85d052fdb5" prot="public">
          <name>DIGI_CLUST_REMOTE_RESPONSE</name>
          <initializer>= 0x00A1</initializer>
          <briefdescription>
<para>Digi Remote Command Response. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__wpan__aps_1gga1227ab13b41d82d9c9c9080662f74cf7a29b2b3f9713deb027140197f2ef499fa" prot="public">
          <name>DIGI_CLUST_NR_RESPONSE</name>
          <initializer>= 0x00A2</initializer>
          <briefdescription>
<para>Digi NR Response. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__wpan__aps_1gga1227ab13b41d82d9c9c9080662f74cf7a0da3cc1e291aeaaff4492bb1cec504fa" prot="public">
          <name>DIGI_CLUST_INDIRECT_ROUTE_ERR</name>
          <initializer>= 0x00B0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__wpan__aps_1gga1227ab13b41d82d9c9c9080662f74cf7aedb825ada66b8c7bbfbeaee6d9dfba0a" prot="public">
          <name>DIGI_CLUST_PROG_XBEE_OTA_UPD</name>
          <initializer>= 0x1000</initializer>
          <briefdescription>
<para>Start OTA update of PXBee App. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__wpan__aps_1gga1227ab13b41d82d9c9c9080662f74cf7a95c58dbf91ce9b915abdc1fdbc236ebe" prot="public">
          <name>DIGI_CLUST_NBRFWUPDATE</name>
          <initializer>= 0x71FE</initializer>
          <briefdescription>
<para>Neighbor FW update. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__wpan__aps_1gga1227ab13b41d82d9c9c9080662f74cf7a378e1e715bf4f25284c4739dccdc8c79" prot="public">
          <name>DIGI_CLUST_REMFWUPDATE</name>
          <initializer>= 0x71FF</initializer>
          <briefdescription>
<para>Remote FW update. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__wpan__aps_1gga1227ab13b41d82d9c9c9080662f74cf7abc3b7a2d5a20c8f541dce60eb523694f" prot="public">
          <name>DIGI_CLUST_FWUPDATERESP</name>
          <initializer>= (int)0xF1FF</initializer>
          <briefdescription>
<para>FW update response. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Digi Data cluster IDs (endpoint <ref refid="group__wpan__aps_1ga83cb85a2a1e374554f9ad735c9c06e7b" kindref="member">WPAN_ENDPOINT_DIGI_DATA</ref>) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="126" column="1" bodyfile="include/wpan/aps.h" bodystart="125" bodyend="147"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__wpan__aps_1ga8575b0db762a5fbb858d4994c9b657e3" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* wpan_aps_handler_fn) (const wpan_envelope_t FAR *envelope, void FAR *context)</definition>
        <argsstring>)(const wpan_envelope_t FAR *envelope, void FAR *context)</argsstring>
        <name>wpan_aps_handler_fn</name>
        <briefdescription>
<para>General handler used in the cluster table. </para>        </briefdescription>
        <detaileddescription>
<para>Dispatcher searches an endpoint&apos;s cluster table for a matching cluster, and hands the frame off to the cluster&apos;s handler.</para><para>If the cluster&apos;s handler is set to <computeroutput>NULL</computeroutput>, or the frame is for a cluster ID that does not appear in the table, the dispatcher hands the frame off to the endpoint&apos;s handler.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">envelope</parametername>
</parameternamelist>
<parameterdescription>
<para>information about the frame (addresses, endpoint, profile, cluster, etc.) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">context</parametername>
</parameternamelist>
<parameterdescription>
<para>user context (from cluster table)</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>handled data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!0</parametername>
</parameternamelist>
<parameterdescription>
<para>some sort of error processing data </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="167" column="1" bodyfile="include/wpan/aps.h" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__wpan__aps_1ga23d4e0e2f2137c75700dfec73b2cc80f" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* wpan_ep_handler_fn) (const wpan_envelope_t FAR *envelope, struct wpan_ep_state_t FAR *ep_state)</definition>
        <argsstring>)(const wpan_envelope_t FAR *envelope, struct wpan_ep_state_t FAR *ep_state)</argsstring>
        <name>wpan_ep_handler_fn</name>
        <briefdescription>
<para>General handler used in the endpoint table. </para>        </briefdescription>
        <detaileddescription>
<para>If a cluster&apos;s handler is set to <computeroutput>NULL</computeroutput>, or the frame is for a cluster ID that does not appear in the table, the dispatcher hands the frame off to the endpoint&apos;s handler.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">envelope</parametername>
</parameternamelist>
<parameterdescription>
<para>information about the frame (addresses, endpoint, profile, cluster, etc.) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">ep_state</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to endpoint state structure</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>handled data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!0</parametername>
</parameternamelist>
<parameterdescription>
<para>some sort of error processing data </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="191" column="1" bodyfile="include/wpan/aps.h" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__wpan__aps_1ga505477d0257efe527747c6d1f561cd6c" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* wpan_endpoint_send_fn) (const wpan_envelope_t FAR *envelope, uint16_t flags)</definition>
        <argsstring>)(const wpan_envelope_t FAR *envelope, uint16_t flags)</argsstring>
        <name>wpan_endpoint_send_fn</name>
        <briefdescription>
<para>Function called by the WPAN APS layer to send a frame out on the network. </para>        </briefdescription>
        <detaileddescription>
<para>This is part of the glue that links the XBee layer with the WPAN/ZigBee layers.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">envelope</parametername>
</parameternamelist>
<parameterdescription>
<para>information about the frame (addresses, endpoint, profile, cluster, payload, etc.) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>flags related to sending, see WPAN_SEND_FLAG_* macros<itemizedlist>
<listitem><para>#WPAN_SEND_FLAG_NONE: no special behavior</para></listitem><listitem><para>#WPAN_SEND_FLAG_ENCRYPTED: use APS layer encryption</para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>frame sent </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!0</parametername>
</parameternamelist>
<parameterdescription>
<para>error sending frame </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EMSGSIZE</parametername>
</parameternamelist>
<parameterdescription>
<para>payload is too large</para></parameterdescription>
</parameteritem>
</parameterlist>
<xrefsect id="todo_1_todo000024"><xreftitle>Todo</xreftitle><xrefdescription><para>Add support for a broadcast radius? Don&apos;t send Tx Status? Use frame ID 0?</para></xrefdescription></xrefsect></para><para><xrefsect id="todo_1_todo000025"><xreftitle>Todo</xreftitle><xrefdescription><para>come up with standard error codes for the following possible errors? outbound frame buffer is full, invalid data in envelope, payload is too big </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="315" column="1" bodyfile="include/wpan/aps.h" bodystart="315" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__wpan__aps_1ga9287e4838cc6dc51febe18acab6738ce" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* _wpan_config_fn) (struct wpan_dev_t *dev,...)</definition>
        <argsstring>)(struct wpan_dev_t *dev,...)</argsstring>
        <name>_wpan_config_fn</name>
        <briefdescription>
<para>Function called by the WPAN APS layer to configure the underlying network device. </para>        </briefdescription>
        <detaileddescription>
<internal><para>Exact implementation is currently undefined, but this entry exists for future expansion of the API.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>device to configure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para>variable arguments to the function</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>configuration request processed successfully </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>&gt;0</parametername>
</parameternamelist>
<parameterdescription>
<para>error parsing parameter #<computeroutput>retval</computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="341" column="1" bodyfile="include/wpan/aps.h" bodystart="341" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__wpan__aps_1gafed1542f6becf2d81fd84ef2f0ae2833" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* wpan_tick_fn) (struct wpan_dev_t *dev)</definition>
        <argsstring>)(struct wpan_dev_t *dev)</argsstring>
        <name>wpan_tick_fn</name>
        <briefdescription>
<para>Function called by the WPAN APS layer to have the underlying device read and dispatch frames. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>device to tick</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of frames processed during the tick </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="352" column="1" bodyfile="include/wpan/aps.h" bodystart="352" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__wpan__aps_1ga4239e4654962f88f42a53abae18e7827" prot="public" static="no">
        <type>const <ref refid="structwpan__endpoint__table__entry__t" kindref="compound">wpan_endpoint_table_entry_t</ref> *(*</type>
        <definition>typedef const wpan_endpoint_table_entry_t*(* wpan_endpoint_get_next_fn) (struct wpan_dev_t *dev, const wpan_endpoint_table_entry_t *ep)</definition>
        <argsstring>)(struct wpan_dev_t *dev, const wpan_endpoint_table_entry_t *ep)</argsstring>
        <name>wpan_endpoint_get_next_fn</name>
        <briefdescription>
<para>Custom function for walking the endpoint table. </para>        </briefdescription>
        <detaileddescription>
<para>The application can define its own function to walk the endpoint table, possibly to support a dynamic table or a table where endpoints aren&apos;t always visible.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>device with endpoint table to walk </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ep</parametername>
</parameternamelist>
<parameterdescription>
<para>NULL to return first entry in table, or a pointer previously returned by this function to get the next entry</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>NULL</parametername>
</parameternamelist>
<parameterdescription>
<para><emphasis>dev</emphasis> is invalid or reached end of table </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!NULL</parametername>
</parameternamelist>
<parameterdescription>
<para>next entry from table</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__wpan__aps_1ga0a88c1b17d1f9a42a53668b14f15e205" kindref="member">wpan_endpoint_match()</ref>, <ref refid="group__wpan__aps_1ga1c725384b21faf5953683d7b028c7be3" kindref="member">wpan_cluster_match()</ref>, <ref refid="group__wpan__aps_1gaca3b72047ea4e156ce9a977c13624b5c" kindref="member">wpan_endpoint_get_next()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="372" column="1" bodyfile="include/wpan/aps.h" bodystart="372" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__wpan__aps_1gabf0a6b85c9ff3ff9104c8b58c1436d72" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* wpan_response_fn) (struct wpan_conversation_t FAR *conversation, const wpan_envelope_t FAR *envelope)</definition>
        <argsstring>)(struct wpan_conversation_t FAR *conversation, const wpan_envelope_t FAR *envelope)</argsstring>
        <name>wpan_response_fn</name>
        <briefdescription>
<para>Handler registered with <ref refid="group__wpan__aps_1gae5f88ed40bd334d963e261947b77b980" kindref="member">wpan_conversation_register()</ref> to process responses to outstanding requests. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">conversation</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to entry in conversation table. Handler can use the pointer to access the context and transaction ID from the conversation, or request deletion of the conversation via <ref refid="group__wpan__aps_1gad36c04a3f2741f52710ab7768d1fcda8" kindref="member">wpan_conversation_delete()</ref>. Never NULL. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">envelope</parametername>
</parameternamelist>
<parameterdescription>
<para>envelope with response or NULL if there was a timeout</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>WPAN_CONVERSATION_END</parametername>
</parameternamelist>
<parameterdescription>
<para>end of conversation, no more responses expected </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>WPAN_CONVERSATION_CONTINUE</parametername>
</parameternamelist>
<parameterdescription>
<para>leave conversation open, more responses are expected </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="489" column="1" bodyfile="include/wpan/aps.h" bodystart="489" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group__wpan__aps_1ga7f9a38312b9025348d42a4ed0042ce37" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structwpan__dev__t" kindref="compound">wpan_dev_t</ref> *</type>
        <definition>struct wpan_dev_t* dev</definition>
        <argsstring></argsstring>
        <name>dev</name>
        <briefdescription>
<para>interface received on/to send to </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="42" column="1" bodyfile="include/wpan/aps.h" bodystart="42" bodyend="-1"/>
        <referencedby refid="group__wpan__aps_1gab448ec18a47178272336da5eacfa2290" compoundref="wpan__aps_8c" startline="204" endline="211">wpan_endpoint_of_envelope</referencedby>
        <referencedby refid="group__wpan__aps_1ga95e2bb4e4c546191c059f54179064fc3" compoundref="wpan__aps_8c" startline="712" endline="723">wpan_envelope_create</referencedby>
        <referencedby refid="group__xbee__ota__client_1ga88905a78517417dd42f6356038717d01" compoundref="xbee__ota__client_8c" startline="119" endline="154">_xbee_ota_xmodem_write</referencedby>
        <referencedby refid="group__xbee__wpan_1ga8cb1973677412a2c5627a77009a8f283" compoundref="xbee__wpan_8c" startline="54" endline="93">_xbee_handle_receive_explicit</referencedby>
        <referencedby refid="group__zcl__client_1ga4c75937cc0fa5c70c63f30b59a4ddebc" compoundref="zcl__client_8c" startline="334" endline="402">zdo_send_match_desc</referencedby>
        <referencedby refid="group__zdo_1gafbbece379bc09af360099d1e0825d507" compoundref="zigbee__zdo_8c" startline="422" endline="464">zdo_simple_desc_request</referencedby>
        <referencedby refid="group__zdo_1gab02e4c1584594c0a96d05399bd69bffa" compoundref="zigbee__zdo_8c" startline="839" endline="885">zdo_send_bind_req</referencedby>
        <referencedby refid="group__zdo_1gac842062e5e1a60d25cddf16ec22ef601" compoundref="zigbee__zdo_8c" startline="925" endline="969">zdo_send_descriptor_req</referencedby>
      </memberdef>
      <memberdef kind="variable" id="group__wpan__aps_1ga2549f921e25a72dfa05a2154a792e2bf" prot="public" static="no" mutable="no">
        <type><ref refid="unionaddr64" kindref="compound">addr64</ref></type>
        <definition>addr64 ieee_address</definition>
        <argsstring></argsstring>
        <name>ieee_address</name>
        <briefdescription>
<para>remote 64-bit address </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="43" column="1" bodyfile="include/wpan/aps.h" bodystart="43" bodyend="-1"/>
        <referencedby refid="group__wpan__aps_1ga95e2bb4e4c546191c059f54179064fc3" compoundref="wpan__aps_8c" startline="712" endline="723">wpan_envelope_create</referencedby>
        <referencedby refid="group__xbee__wpan_1ga8cb1973677412a2c5627a77009a8f283" compoundref="xbee__wpan_8c" startline="54" endline="93">_xbee_handle_receive_explicit</referencedby>
        <referencedby refid="group__zcl__client_1ga4c75937cc0fa5c70c63f30b59a4ddebc" compoundref="zcl__client_8c" startline="334" endline="402">zdo_send_match_desc</referencedby>
        <referencedby refid="group__zdo_1gab02e4c1584594c0a96d05399bd69bffa" compoundref="zigbee__zdo_8c" startline="839" endline="885">zdo_send_bind_req</referencedby>
      </memberdef>
      <memberdef kind="variable" id="group__wpan__aps_1ga30948a7f8d096191895f50b80d81ca12" prot="public" static="no" mutable="no">
        <type><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref></type>
        <definition>uint16_t network_address</definition>
        <argsstring></argsstring>
        <name>network_address</name>
        <briefdescription>
<para>remote 16-bit address </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="44" column="1" bodyfile="include/wpan/aps.h" bodystart="44" bodyend="-1"/>
        <referencedby refid="group__wpan__aps_1ga95e2bb4e4c546191c059f54179064fc3" compoundref="wpan__aps_8c" startline="712" endline="723">wpan_envelope_create</referencedby>
        <referencedby refid="group__xbee__wpan_1ga8cb1973677412a2c5627a77009a8f283" compoundref="xbee__wpan_8c" startline="54" endline="93">_xbee_handle_receive_explicit</referencedby>
        <referencedby refid="group__zcl__client_1ga4c75937cc0fa5c70c63f30b59a4ddebc" compoundref="zcl__client_8c" startline="334" endline="402">zdo_send_match_desc</referencedby>
        <referencedby refid="group__zdo_1gab02e4c1584594c0a96d05399bd69bffa" compoundref="zigbee__zdo_8c" startline="839" endline="885">zdo_send_bind_req</referencedby>
      </memberdef>
      <memberdef kind="variable" id="group__wpan__aps_1ga5ca7f19e5697de2baf0e2147a41a5792" prot="public" static="no" mutable="no">
        <type><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref></type>
        <definition>uint16_t profile_id</definition>
        <argsstring></argsstring>
        <name>profile_id</name>
        <briefdescription>
<para>Profile ID. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="45" column="1" bodyfile="include/wpan/aps.h" bodystart="45" bodyend="-1"/>
        <referencedby refid="group__wpan__aps_1gab448ec18a47178272336da5eacfa2290" compoundref="wpan__aps_8c" startline="204" endline="211">wpan_endpoint_of_envelope</referencedby>
        <referencedby refid="group__xbee__ota__client_1ga4805b029d840b86133ef62d64866c6af" compoundref="xbee__ota__client_8c" startline="157" endline="211">xbee_ota_init</referencedby>
        <referencedby refid="group__xbee__transparent_1gafbf9e5ccdb17be373012bd690a76e570" compoundref="xbee__transparent__serial_8c" startline="32" endline="41">xbee_transparent_serial</referencedby>
        <referencedby refid="group__xbee__wpan_1ga8cb1973677412a2c5627a77009a8f283" compoundref="xbee__wpan_8c" startline="54" endline="93">_xbee_handle_receive_explicit</referencedby>
        <referencedby refid="group__zdo_1gae4b6736d215caf2a10790761ed52443d" compoundref="zigbee__zdo_8c" startline="110" endline="139">_zdo_envelope_create</referencedby>
        <referencedby refid="group__zdo_1gafbbece379bc09af360099d1e0825d507" compoundref="zigbee__zdo_8c" startline="422" endline="464">zdo_simple_desc_request</referencedby>
        <referencedby refid="group__zdo_1gac842062e5e1a60d25cddf16ec22ef601" compoundref="zigbee__zdo_8c" startline="925" endline="969">zdo_send_descriptor_req</referencedby>
      </memberdef>
      <memberdef kind="variable" id="group__wpan__aps_1ga262a92f94287e77cb56350951893bae2" prot="public" static="no" mutable="no">
        <type><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref></type>
        <definition>uint16_t cluster_id</definition>
        <argsstring></argsstring>
        <name>cluster_id</name>
        <briefdescription>
<para>Cluster ID. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="46" column="1" bodyfile="include/wpan/aps.h" bodystart="46" bodyend="-1"/>
        <referencedby refid="group__xbee__ota__client_1ga4805b029d840b86133ef62d64866c6af" compoundref="xbee__ota__client_8c" startline="157" endline="211">xbee_ota_init</referencedby>
        <referencedby refid="group__xbee__transparent_1gafbf9e5ccdb17be373012bd690a76e570" compoundref="xbee__transparent__serial_8c" startline="32" endline="41">xbee_transparent_serial</referencedby>
        <referencedby refid="group__xbee__wpan_1ga8cb1973677412a2c5627a77009a8f283" compoundref="xbee__wpan_8c" startline="54" endline="93">_xbee_handle_receive_explicit</referencedby>
        <referencedby refid="group__zcl__client_1ga4c75937cc0fa5c70c63f30b59a4ddebc" compoundref="zcl__client_8c" startline="334" endline="402">zdo_send_match_desc</referencedby>
        <referencedby refid="group__zdo_1gafbbece379bc09af360099d1e0825d507" compoundref="zigbee__zdo_8c" startline="422" endline="464">zdo_simple_desc_request</referencedby>
        <referencedby refid="group__zdo_1gab02e4c1584594c0a96d05399bd69bffa" compoundref="zigbee__zdo_8c" startline="839" endline="885">zdo_send_bind_req</referencedby>
        <referencedby refid="group__zdo_1gac842062e5e1a60d25cddf16ec22ef601" compoundref="zigbee__zdo_8c" startline="925" endline="969">zdo_send_descriptor_req</referencedby>
        <referencedby refid="group__zdo_1ga40f076c190ab2390836687b8e1f705eb" compoundref="zigbee__zdo_8c" startline="1028" endline="1070">zdo_send_nwk_addr_req</referencedby>
        <referencedby refid="group__zdo_1ga4af5f8d70054f7883dbc1305e3a3f181" compoundref="zigbee__zdo_8c" startline="1134" endline="1173">zdo_send_ieee_addr_req</referencedby>
      </memberdef>
      <memberdef kind="variable" id="group__wpan__aps_1ga9781a5a281ee97f7f67d8ebe2c4f54db" prot="public" static="no" mutable="no">
        <type><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref></type>
        <definition>uint8_t source_endpoint</definition>
        <argsstring></argsstring>
        <name>source_endpoint</name>
        <briefdescription>
<para>endpoint on sender (source) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="49" column="1" bodyfile="include/wpan/aps.h" bodystart="49" bodyend="-1"/>
        <referencedby refid="group__wpan__aps_1gab448ec18a47178272336da5eacfa2290" compoundref="wpan__aps_8c" startline="204" endline="211">wpan_endpoint_of_envelope</referencedby>
        <referencedby refid="group__xbee__ota__client_1ga4805b029d840b86133ef62d64866c6af" compoundref="xbee__ota__client_8c" startline="157" endline="211">xbee_ota_init</referencedby>
        <referencedby refid="group__xbee__transparent_1gafbf9e5ccdb17be373012bd690a76e570" compoundref="xbee__transparent__serial_8c" startline="32" endline="41">xbee_transparent_serial</referencedby>
        <referencedby refid="group__xbee__wpan_1ga8cb1973677412a2c5627a77009a8f283" compoundref="xbee__wpan_8c" startline="54" endline="93">_xbee_handle_receive_explicit</referencedby>
        <referencedby refid="group__zdo_1gae4b6736d215caf2a10790761ed52443d" compoundref="zigbee__zdo_8c" startline="110" endline="139">_zdo_envelope_create</referencedby>
        <referencedby refid="group__zdo_1gafbbece379bc09af360099d1e0825d507" compoundref="zigbee__zdo_8c" startline="422" endline="464">zdo_simple_desc_request</referencedby>
        <referencedby refid="group__zdo_1gac842062e5e1a60d25cddf16ec22ef601" compoundref="zigbee__zdo_8c" startline="925" endline="969">zdo_send_descriptor_req</referencedby>
      </memberdef>
      <memberdef kind="variable" id="group__wpan__aps_1ga0992896b3999455a300e8ba25c368ae8" prot="public" static="no" mutable="no">
        <type><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref></type>
        <definition>uint8_t dest_endpoint</definition>
        <argsstring></argsstring>
        <name>dest_endpoint</name>
        <briefdescription>
<para>endpoint on recipient (dest) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="50" column="1" bodyfile="include/wpan/aps.h" bodystart="50" bodyend="-1"/>
        <referencedby refid="group__xbee__ota__client_1ga4805b029d840b86133ef62d64866c6af" compoundref="xbee__ota__client_8c" startline="157" endline="211">xbee_ota_init</referencedby>
        <referencedby refid="group__xbee__transparent_1gafbf9e5ccdb17be373012bd690a76e570" compoundref="xbee__transparent__serial_8c" startline="32" endline="41">xbee_transparent_serial</referencedby>
        <referencedby refid="group__xbee__wpan_1ga8cb1973677412a2c5627a77009a8f283" compoundref="xbee__wpan_8c" startline="54" endline="93">_xbee_handle_receive_explicit</referencedby>
        <referencedby refid="group__zdo_1gae4b6736d215caf2a10790761ed52443d" compoundref="zigbee__zdo_8c" startline="110" endline="139">_zdo_envelope_create</referencedby>
        <referencedby refid="group__zdo_1gafbbece379bc09af360099d1e0825d507" compoundref="zigbee__zdo_8c" startline="422" endline="464">zdo_simple_desc_request</referencedby>
        <referencedby refid="group__zdo_1gac842062e5e1a60d25cddf16ec22ef601" compoundref="zigbee__zdo_8c" startline="925" endline="969">zdo_send_descriptor_req</referencedby>
      </memberdef>
      <memberdef kind="variable" id="group__wpan__aps_1gaf86bc430f5b8c737809e0e3baae4ecea" prot="public" static="no" mutable="no">
        <type><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref></type>
        <definition>uint16_t options</definition>
        <argsstring></argsstring>
        <name>options</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="51" column="1" bodyfile="include/wpan/aps.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__wpan__aps_1ga8737375e27cb391ff381fff10dc0c132" prot="public" static="no" mutable="no">
        <type>const void <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
        <definition>const void FAR* payload</definition>
        <argsstring></argsstring>
        <name>payload</name>
        <briefdescription>
<para>contents of message </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="61" column="1" bodyfile="include/wpan/aps.h" bodystart="61" bodyend="-1"/>
        <referencedby refid="group__xbee__ota__client_1ga88905a78517417dd42f6356038717d01" compoundref="xbee__ota__client_8c" startline="119" endline="154">_xbee_ota_xmodem_write</referencedby>
        <referencedby refid="group__xbee__ota__server_1ga22cb77be06faba4020a4f5e0daf48f4f" compoundref="xbee__ota__server_8c" startline="30" endline="77">xbee_ota_server_cmd</referencedby>
        <referencedby refid="group__xbee__transparent_1ga93c58cb71320437497c8aa9b3fca3f35" compoundref="xbee__transparent__serial_8c" startline="46" endline="53">xbee_transparent_serial_str</referencedby>
        <referencedby refid="group__xbee__wpan_1ga8cb1973677412a2c5627a77009a8f283" compoundref="xbee__wpan_8c" startline="54" endline="93">_xbee_handle_receive_explicit</referencedby>
        <referencedby refid="group__zcl__commissioning_1ga57f9aaf3da6dc9b513f7f9ccbb473a0b" compoundref="zcl__commissioning_8c" startline="265" endline="295">zcl_comm_response</referencedby>
        <referencedby refid="group__zdo_1gafbbece379bc09af360099d1e0825d507" compoundref="zigbee__zdo_8c" startline="422" endline="464">zdo_simple_desc_request</referencedby>
        <referencedby refid="group__zdo_1gab02e4c1584594c0a96d05399bd69bffa" compoundref="zigbee__zdo_8c" startline="839" endline="885">zdo_send_bind_req</referencedby>
        <referencedby refid="group__zdo_1gac842062e5e1a60d25cddf16ec22ef601" compoundref="zigbee__zdo_8c" startline="925" endline="969">zdo_send_descriptor_req</referencedby>
        <referencedby refid="group__zdo_1ga40f076c190ab2390836687b8e1f705eb" compoundref="zigbee__zdo_8c" startline="1028" endline="1070">zdo_send_nwk_addr_req</referencedby>
        <referencedby refid="group__zdo_1ga4af5f8d70054f7883dbc1305e3a3f181" compoundref="zigbee__zdo_8c" startline="1134" endline="1173">zdo_send_ieee_addr_req</referencedby>
      </memberdef>
      <memberdef kind="variable" id="group__wpan__aps_1ga1892eba2086d12ac2b09005aeb09ea3b" prot="public" static="no" mutable="no">
        <type><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref></type>
        <definition>uint16_t length</definition>
        <argsstring></argsstring>
        <name>length</name>
        <briefdescription>
<para>number of bytes in payload </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="62" column="1" bodyfile="include/wpan/aps.h" bodystart="62" bodyend="-1"/>
        <referencedby refid="group__xbee__ota__client_1ga88905a78517417dd42f6356038717d01" compoundref="xbee__ota__client_8c" startline="119" endline="154">_xbee_ota_xmodem_write</referencedby>
        <referencedby refid="group__xbee__ota__server_1ga22cb77be06faba4020a4f5e0daf48f4f" compoundref="xbee__ota__server_8c" startline="30" endline="77">xbee_ota_server_cmd</referencedby>
        <referencedby refid="group__xbee__transparent_1ga93c58cb71320437497c8aa9b3fca3f35" compoundref="xbee__transparent__serial_8c" startline="46" endline="53">xbee_transparent_serial_str</referencedby>
        <referencedby refid="group__xbee__wpan_1ga8cb1973677412a2c5627a77009a8f283" compoundref="xbee__wpan_8c" startline="54" endline="93">_xbee_handle_receive_explicit</referencedby>
        <referencedby refid="group__zcl__commissioning_1ga57f9aaf3da6dc9b513f7f9ccbb473a0b" compoundref="zcl__commissioning_8c" startline="265" endline="295">zcl_comm_response</referencedby>
        <referencedby refid="group__zdo_1gafbbece379bc09af360099d1e0825d507" compoundref="zigbee__zdo_8c" startline="422" endline="464">zdo_simple_desc_request</referencedby>
        <referencedby refid="group__zdo_1gab02e4c1584594c0a96d05399bd69bffa" compoundref="zigbee__zdo_8c" startline="839" endline="885">zdo_send_bind_req</referencedby>
        <referencedby refid="group__zdo_1gac842062e5e1a60d25cddf16ec22ef601" compoundref="zigbee__zdo_8c" startline="925" endline="969">zdo_send_descriptor_req</referencedby>
        <referencedby refid="group__zdo_1ga40f076c190ab2390836687b8e1f705eb" compoundref="zigbee__zdo_8c" startline="1028" endline="1070">zdo_send_nwk_addr_req</referencedby>
        <referencedby refid="group__zdo_1ga4af5f8d70054f7883dbc1305e3a3f181" compoundref="zigbee__zdo_8c" startline="1134" endline="1173">zdo_send_ieee_addr_req</referencedby>
      </memberdef>
      <memberdef kind="variable" id="group__wpan__aps_1ga262a92f94287e77cb56350951893bae2" prot="public" static="no" mutable="no">
        <type><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref></type>
        <definition>uint16_t cluster_id</definition>
        <argsstring></argsstring>
        <name>cluster_id</name>
        <briefdescription>
<para>16-bit cluster id, in host byte order. </para>        </briefdescription>
        <detaileddescription>
<para>WPAN_CLUSTER_END_OF_LIST (0xFFFF) marks the end of the list. Clusters 0x0000 to 0x7FFF are Standard ZigBee clusters, 0x8000 to 0xFBFF are reserved and 0xFC00 to 0xFFFF are manufacturer-specific (with a standard ZigBee profile). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="203" column="1" bodyfile="include/wpan/aps.h" bodystart="203" bodyend="-1"/>
        <referencedby refid="group__zdo_1ga558539813d6a9c8813eeae855e77385f" compoundref="zigbee__zdo_8c" startline="483" endline="509">_simple_desc_cluster_list</referencedby>
        <referencedby refid="group__wpan__aps_1ga1c725384b21faf5953683d7b028c7be3" compoundref="wpan__aps_8c" startline="62" endline="80">wpan_cluster_match</referencedby>
      </memberdef>
      <memberdef kind="variable" id="group__wpan__aps_1gab0c5e32241c4c2860c728aeab4b6f253" prot="public" static="no" mutable="no">
        <type><ref refid="group__wpan__aps_1ga8575b0db762a5fbb858d4994c9b657e3" kindref="member">wpan_aps_handler_fn</ref></type>
        <definition>wpan_aps_handler_fn handler</definition>
        <argsstring></argsstring>
        <name>handler</name>
        <briefdescription>
<para>Function to receive all frames for this cluster, or NULL to have endpoint&apos;s handler process the frame. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="207" column="1" bodyfile="include/wpan/aps.h" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__wpan__aps_1gad58378484a15ab673f5eb1613114330e" prot="public" static="no" mutable="no">
        <type>const void <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
        <definition>const void FAR* context</definition>
        <argsstring></argsstring>
        <name>context</name>
        <briefdescription>
<para>Declared <computeroutput>const</computeroutput> so initializers can use <computeroutput>const</computeroutput> or non-<computeroutput>const</computeroutput> pointers. </para>        </briefdescription>
        <detaileddescription>
<para>The <computeroutput>const</computeroutput> is discarded before passing the context on to <ref refid="group__wpan__aps_1ga8575b0db762a5fbb858d4994c9b657e3" kindref="member">wpan_aps_handler_fn()</ref>. For a ZCL endpoint, <computeroutput>context</computeroutput> points to an attribute tree (<ref refid="structzcl__attribute__tree__t" kindref="compound">zcl_attribute_tree_t</ref>). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="213" column="1" bodyfile="include/wpan/aps.h" bodystart="213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__wpan__aps_1gaa2585d779da0ab21273a8d92de9a0ebe" prot="public" static="no" mutable="no">
        <type><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref></type>
        <definition>uint8_t flags</definition>
        <argsstring></argsstring>
        <name>flags</name>
        <briefdescription>
<para>flags that apply to this cluster, see WPAN_CLUST_FLAG_* macros </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="216" column="1" bodyfile="include/wpan/aps.h" bodystart="216" bodyend="-1"/>
        <referencedby refid="group__wpan__aps_1ga1c725384b21faf5953683d7b028c7be3" compoundref="wpan__aps_8c" startline="62" endline="80">wpan_cluster_match</referencedby>
        <referencedby refid="group__zdo_1ga558539813d6a9c8813eeae855e77385f" compoundref="zigbee__zdo_8c" startline="483" endline="509">_simple_desc_cluster_list</referencedby>
      </memberdef>
      <memberdef kind="variable" id="group__wpan__aps_1ga7d397493728da2bca8d55b2d61c4ec5d" prot="public" static="no" mutable="no">
        <type><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref></type>
        <definition>uint8_t endpoint</definition>
        <argsstring></argsstring>
        <name>endpoint</name>
        <briefdescription>
<para>Endpoint ID, 0 to 254. 255 (0xFF) is used as an end-of-table marker. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="252" column="1" bodyfile="include/wpan/aps.h" bodystart="252" bodyend="-1"/>
        <referencedby refid="group__wpan__aps_1gaca3b72047ea4e156ce9a977c13624b5c" compoundref="wpan__aps_8c" startline="105" endline="132">wpan_endpoint_get_next</referencedby>
      </memberdef>
      <memberdef kind="variable" id="group__wpan__aps_1ga5ca7f19e5697de2baf0e2147a41a5792" prot="public" static="no" mutable="no">
        <type><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref></type>
        <definition>uint16_t profile_id</definition>
        <argsstring></argsstring>
        <name>profile_id</name>
        <briefdescription>
<para>This endpoint&apos;s profile ID. </para>        </briefdescription>
        <detaileddescription>
<para>See WPAN_PROFILE_* macros for some known profile IDs. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="256" column="1" bodyfile="include/wpan/aps.h" bodystart="256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__wpan__aps_1ga4835da0b636ce07eedbf92aa2779a761" prot="public" static="no" mutable="no">
        <type><ref refid="group__wpan__aps_1ga23d4e0e2f2137c75700dfec73b2cc80f" kindref="member">wpan_ep_handler_fn</ref></type>
        <definition>wpan_ep_handler_fn handler</definition>
        <argsstring></argsstring>
        <name>handler</name>
        <briefdescription>
<para>Function to receive all frames for invalid clusters, or clusters with a <computeroutput>NULL</computeroutput> handler. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="260" column="1" bodyfile="include/wpan/aps.h" bodystart="260" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__wpan__aps_1ga389966cb276b33004b14ee698c270347" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structwpan__ep__state__t" kindref="compound">wpan_ep_state_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
        <definition>struct wpan_ep_state_t FAR* ep_state</definition>
        <argsstring></argsstring>
        <name>ep_state</name>
        <briefdescription>
<para>Structure used to track transactions and conversations on ZDO/ZDP and ZCL endpoints. </para>        </briefdescription>
        <detaileddescription>
<para>Should be NULL for other types of endpoints. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="264" column="1" bodyfile="include/wpan/aps.h" bodystart="264" bodyend="-1"/>
        <referencedby refid="group__wpan__aps_1gaf56e4d0e52462b5cf41c5fa5f23ea952" compoundref="wpan__aps_8c" startline="427" endline="481">wpan_conversation_response</referencedby>
        <referencedby refid="group__wpan__aps_1gaab1c77ccbd237270f11499fb6411599c" compoundref="wpan__aps_8c" startline="493" endline="500">wpan_endpoint_next_trans</referencedby>
        <referencedby refid="group__wpan__aps_1ga1254464011d2d98c13db7b0b3d41c25b" compoundref="wpan__aps_8c" startline="860" endline="881">wpan_tick</referencedby>
        <referencedby refid="group__zdo_1gaaf992619b06595291c2aead8a3d4dba1" compoundref="zigbee__zdo_8c" startline="82" endline="89">zdo_endpoint_state</referencedby>
      </memberdef>
      <memberdef kind="variable" id="group__wpan__aps_1gadc401e0e7465eda38f9444eeb6169a10" prot="public" static="no" mutable="no">
        <type><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref></type>
        <definition>uint16_t device_id</definition>
        <argsstring></argsstring>
        <name>device_id</name>
        <briefdescription>
<para>This endpoint&apos;s device ID. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="267" column="1" bodyfile="include/wpan/aps.h" bodystart="267" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__wpan__aps_1ga0b8f4e315b56b3e3c53dea801ce92104" prot="public" static="no" mutable="no">
        <type><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref></type>
        <definition>uint8_t device_version</definition>
        <argsstring></argsstring>
        <name>device_version</name>
        <briefdescription>
<para>Lower 4 bits are used, upper 4 are reserved and should be 0. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="270" column="1" bodyfile="include/wpan/aps.h" bodystart="270" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__wpan__aps_1gac7944498524739a9becec626bf9bcb15" prot="public" static="no" mutable="no">
        <type>const <ref refid="structwpan__cluster__table__entry__t" kindref="compound">wpan_cluster_table_entry_t</ref> *</type>
        <definition>const wpan_cluster_table_entry_t* cluster_table</definition>
        <argsstring></argsstring>
        <name>cluster_table</name>
        <briefdescription>
<para>Pointers to a list of clusters that ends with WPAN_CLUST_ENTRY_LIST_END. </para>        </briefdescription>
        <detaileddescription>
<para>Maximum of 255 input and 255 output clusters (Simple Descriptor uses 8-bit fields for input cluster count and output cluster count). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="275" column="1" bodyfile="include/wpan/aps.h" bodystart="275" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__wpan__aps_1gab472632c6a95d7856d1ea137441ec6a2" prot="public" static="no" mutable="no">
        <type><ref refid="group__wpan__aps_1gafed1542f6becf2d81fd84ef2f0ae2833" kindref="member">wpan_tick_fn</ref></type>
        <definition>wpan_tick_fn tick</definition>
        <argsstring></argsstring>
        <name>tick</name>
        <briefdescription>
<para>read and dispatch frames </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="388" column="1" bodyfile="include/wpan/aps.h" bodystart="388" bodyend="-1"/>
        <referencedby refid="group__wpan__aps_1ga1254464011d2d98c13db7b0b3d41c25b" compoundref="wpan__aps_8c" startline="860" endline="881">wpan_tick</referencedby>
        <referencedby refid="group__xbee__wpan_1ga6b3d55dddb48e31d3f975f2afb4c9977" compoundref="xbee__wpan_8c" startline="182" endline="196">xbee_wpan_init</referencedby>
      </memberdef>
      <memberdef kind="variable" id="group__wpan__aps_1ga363ce09a97ec0b7a2dbff5b815fc3fbc" prot="public" static="no" mutable="no">
        <type><ref refid="group__wpan__aps_1ga505477d0257efe527747c6d1f561cd6c" kindref="member">wpan_endpoint_send_fn</ref></type>
        <definition>wpan_endpoint_send_fn endpoint_send</definition>
        <argsstring></argsstring>
        <name>endpoint_send</name>
        <briefdescription>
<para>send frame to an endpoint </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="389" column="1" bodyfile="include/wpan/aps.h" bodystart="389" bodyend="-1"/>
        <referencedby refid="group__xbee__wpan_1ga6b3d55dddb48e31d3f975f2afb4c9977" compoundref="xbee__wpan_8c" startline="182" endline="196">xbee_wpan_init</referencedby>
      </memberdef>
      <memberdef kind="variable" id="group__wpan__aps_1ga249b57f4a0559c0adb038f68d9b5c443" prot="public" static="no" mutable="no">
        <type><ref refid="group__wpan__aps_1ga4239e4654962f88f42a53abae18e7827" kindref="member">wpan_endpoint_get_next_fn</ref></type>
        <definition>wpan_endpoint_get_next_fn endpoint_get_next</definition>
        <argsstring></argsstring>
        <name>endpoint_get_next</name>
        <briefdescription>
<para>walk endpoint table </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="390" column="1" bodyfile="include/wpan/aps.h" bodystart="390" bodyend="-1"/>
        <referencedby refid="group__wpan__aps_1gaca3b72047ea4e156ce9a977c13624b5c" compoundref="wpan__aps_8c" startline="105" endline="132">wpan_endpoint_get_next</referencedby>
      </memberdef>
      <memberdef kind="variable" id="group__wpan__aps_1ga66a58a737aee9733019399e2eceabf4a" prot="public" static="no" mutable="no">
        <type><ref refid="structwpan__address__t" kindref="compound">wpan_address_t</ref></type>
        <definition>wpan_address_t address</definition>
        <argsstring></argsstring>
        <name>address</name>
        <briefdescription>
<para>IEEE/MAC and network addresses. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="392" column="1" bodyfile="include/wpan/aps.h" bodystart="392" bodyend="-1"/>
        <referencedby refid="group__zdo_1gae4b6736d215caf2a10790761ed52443d" compoundref="zigbee__zdo_8c" startline="110" endline="139">_zdo_envelope_create</referencedby>
      </memberdef>
      <memberdef kind="variable" id="group__wpan__aps_1ga27ab4ae0aba390adfd9907aeebd88b9c" prot="public" static="no" mutable="no">
        <type><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref></type>
        <definition>uint16_t payload</definition>
        <argsstring></argsstring>
        <name>payload</name>
        <briefdescription>
<para>max bytes in RF payload, need to refresh if encryption enabled/disabled </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="395" column="1" bodyfile="include/wpan/aps.h" bodystart="395" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__wpan__aps_1ga1e87af3c18a2fd36c61faf89949bdc3f" prot="public" static="no" mutable="no">
        <type><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref></type>
        <definition>uint16_t flags</definition>
        <argsstring></argsstring>
        <name>flags</name>
        <briefdescription>
<para>Bitfield describing the device&apos;s capabilities (maybe CAN_SLEEP, nodetype, etc.) and state. </para>        </briefdescription>
        <detaileddescription>
<para>Only valid if <ref refid="group__xbee__atcmd_1ga1cc803f821ed44e27e404d38349f53c7" kindref="member">xbee_cmd_init_device()</ref> is used or ALL Modem Status messages are received from radio. User code should not access this directly, but use WPAN_DEV_IS_* macros instead. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="402" column="1" bodyfile="include/wpan/aps.h" bodystart="402" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__wpan__aps_1gad7c834ea25a2f008caaf40ec08aa5a86" prot="public" static="no" mutable="no">
        <type>const <ref refid="structwpan__endpoint__table__entry__t" kindref="compound">wpan_endpoint_table_entry_t</ref> *</type>
        <definition>const wpan_endpoint_table_entry_t* endpoint_table</definition>
        <argsstring></argsstring>
        <name>endpoint_table</name>
        <briefdescription>
<para>Pointer to a table of the device&apos;s endpoints, ending with <ref refid="group__wpan__aps_1gaac571cafa96f8201c714feb0634afa92" kindref="member">WPAN_ENDPOINT_TABLE_END</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Do not reference directly! Use <ref refid="group__wpan__aps_1gaca3b72047ea4e156ce9a977c13624b5c" kindref="member">wpan_endpoint_get_next()</ref> to walk the table. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="414" column="1" bodyfile="include/wpan/aps.h" bodystart="414" bodyend="-1"/>
        <referencedby refid="group__wpan__aps_1gaca3b72047ea4e156ce9a977c13624b5c" compoundref="wpan__aps_8c" startline="105" endline="132">wpan_endpoint_get_next</referencedby>
        <referencedby refid="group__xbee__wpan_1ga6b3d55dddb48e31d3f975f2afb4c9977" compoundref="xbee__wpan_8c" startline="182" endline="196">xbee_wpan_init</referencedby>
      </memberdef>
      <memberdef kind="variable" id="group__wpan__aps_1ga3f721807b5c6f0b5c39977390b5bf408" prot="public" static="no" mutable="no">
        <type><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref></type>
        <definition>uint8_t transaction_id</definition>
        <argsstring></argsstring>
        <name>transaction_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="500" column="1" bodyfile="include/wpan/aps.h" bodystart="500" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__wpan__aps_1gaa91f8e864e06077c354e5f5216547758" prot="public" static="no" mutable="no">
        <type>void <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
        <definition>void FAR* context</definition>
        <argsstring></argsstring>
        <name>context</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="501" column="1" bodyfile="include/wpan/aps.h" bodystart="501" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__wpan__aps_1ga7f1ad43d3bf79b40bc39dbb5a6c3a5ae" prot="public" static="no" mutable="no">
        <type><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref></type>
        <definition>uint16_t timeout</definition>
        <argsstring></argsstring>
        <name>timeout</name>
        <briefdescription>
<para>Time to expire conversation (0 for never or lower 16 bits of xbee_seconds_timer) <ndash/> limited to 9 hours (32,768 seconds). </para>        </briefdescription>
        <detaileddescription>
<para>We could save another byte if it&apos;s ok to limit to 2 minutes and we&apos;ll check for expirations at least every 7 seconds. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="506" column="1" bodyfile="include/wpan/aps.h" bodystart="506" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__wpan__aps_1gabc22a182e7dcbd60a04e8a4eb648aaa2" prot="public" static="no" mutable="no">
        <type><ref refid="group__wpan__aps_1gabf0a6b85c9ff3ff9104c8b58c1436d72" kindref="member">wpan_response_fn</ref></type>
        <definition>wpan_response_fn handler</definition>
        <argsstring></argsstring>
        <name>handler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="507" column="1" bodyfile="include/wpan/aps.h" bodystart="507" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__wpan__aps_1ga9e18c6583d7c94f03b10fc1e99187939" prot="public" static="no" mutable="no">
        <type><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref></type>
        <definition>uint8_t last_transaction</definition>
        <argsstring></argsstring>
        <name>last_transaction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="524" column="1" bodyfile="include/wpan/aps.h" bodystart="524" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__wpan__aps_1gaf9565ebe099d08e3f9f26783a4f89826" prot="public" static="no" mutable="no">
        <type><ref refid="structwpan__conversation__t" kindref="compound">wpan_conversation_t</ref></type>
        <definition>wpan_conversation_t conversations[WPAN_MAX_CONVERSATIONS]</definition>
        <argsstring>[WPAN_MAX_CONVERSATIONS]</argsstring>
        <name>conversations</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="525" column="1" bodyfile="include/wpan/aps.h" bodystart="525" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="">
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__wpan__aps_1ga1c725384b21faf5953683d7b028c7be3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wpan_aps_debug const <ref refid="structwpan__cluster__table__entry__t" kindref="compound">wpan_cluster_table_entry_t</ref> *</type>
        <definition>const wpan_cluster_table_entry_t * wpan_cluster_match</definition>
        <argsstring>(uint16_t match, uint8_t mask, const wpan_cluster_table_entry_t *entry)</argsstring>
        <name>wpan_cluster_match</name>
        <param>
          <type><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref></type>
          <declname>match</declname>
        </param>
        <param>
          <type><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref></type>
          <declname>mask</declname>
        </param>
        <param>
          <type>const <ref refid="structwpan__cluster__table__entry__t" kindref="compound">wpan_cluster_table_entry_t</ref> *</type>
          <declname>entry</declname>
        </param>
        <briefdescription>
<para>Search a cluster table for a matching cluster ID. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">match</parametername>
</parameternamelist>
<parameterdescription>
<para>ID to match </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Flags to match against the <computeroutput>flags</computeroutput> member of the <ref refid="structwpan__cluster__table__entry__t" kindref="compound">wpan_cluster_table_entry_t</ref> structure. If any flags match, the entry is returned. Typically one of<itemizedlist>
<listitem><para><ref refid="group__wpan__aps_1ga2024b5d21c6f8c2f151cc2b0576c08f4" kindref="member">WPAN_CLUST_FLAG_INPUT</ref> (or <ref refid="group__wpan__aps_1ga9e0a1a0abf5594d8fa5a38b1ca40b3bc" kindref="member">WPAN_CLUST_FLAG_SERVER</ref>)</para></listitem><listitem><para><ref refid="group__wpan__aps_1ga0456c33bdaa673f37f9285a3f5ca0172" kindref="member">WPAN_CLUST_FLAG_OUTPUT</ref> (or <ref refid="group__wpan__aps_1ga9aae0646b212af63cbb07c98a33cd986" kindref="member">WPAN_CLUST_FLAG_CLIENT</ref>) </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">entry</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to list of entries to search</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>NULL</parametername>
</parameternamelist>
<parameterdescription>
<para><emphasis>entry</emphasis> is invalid or search reached <ref refid="group__wpan__aps_1gacbfdff1cef70167f178c4e05b69f65fe" kindref="member">WPAN_CLUSTER_END_OF_LIST</ref> without finding a match. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!NULL</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to matching entry from table.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__wpan__aps_1gaca3b72047ea4e156ce9a977c13624b5c" kindref="member">wpan_endpoint_get_next()</ref>, <ref refid="group__wpan__aps_1ga0a88c1b17d1f9a42a53668b14f15e205" kindref="member">wpan_endpoint_match()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wpan/wpan_aps.c" line="62" column="1" bodyfile="src/wpan/wpan_aps.c" bodystart="62" bodyend="80"/>
        <references refid="group__wpan__aps_1ga262a92f94287e77cb56350951893bae2" compoundref="aps_8h" startline="203">wpan_cluster_table_entry_t::cluster_id</references>
        <references refid="group__wpan__aps_1gaa2585d779da0ab21273a8d92de9a0ebe" compoundref="aps_8h" startline="216">wpan_cluster_table_entry_t::flags</references>
        <references refid="group__wpan__aps_1gacbfdff1cef70167f178c4e05b69f65fe" compoundref="aps_8h" startline="280">WPAN_CLUSTER_END_OF_LIST</references>
      </memberdef>
      <memberdef kind="function" id="group__wpan__aps_1gaca3b72047ea4e156ce9a977c13624b5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wpan_aps_debug const <ref refid="structwpan__endpoint__table__entry__t" kindref="compound">wpan_endpoint_table_entry_t</ref> *</type>
        <definition>const wpan_endpoint_table_entry_t * wpan_endpoint_get_next</definition>
        <argsstring>(wpan_dev_t *dev, const wpan_endpoint_table_entry_t *ep)</argsstring>
        <name>wpan_endpoint_get_next</name>
        <param>
          <type><ref refid="structwpan__dev__t" kindref="compound">wpan_dev_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>const <ref refid="structwpan__endpoint__table__entry__t" kindref="compound">wpan_endpoint_table_entry_t</ref> *</type>
          <declname>ep</declname>
        </param>
        <briefdescription>
<para>Function used to walk a device&apos;s endpoint table. </para>        </briefdescription>
        <detaileddescription>
<para>For most devices, this will just walk the entries in dev-&gt;endpoint_table. For custom applications a function may dynamically return entries.</para><para>Use of this function is the only way to walk the endpoint table.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>device with endpoint table to walk </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ep</parametername>
</parameternamelist>
<parameterdescription>
<para>NULL to return first entry in table, or a pointer previously returned by this function to get the next entry</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>NULL</parametername>
</parameternamelist>
<parameterdescription>
<para><emphasis>dev</emphasis> is invalid or reached end of table </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!NULL</parametername>
</parameternamelist>
<parameterdescription>
<para>next entry from table</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__wpan__aps_1ga0a88c1b17d1f9a42a53668b14f15e205" kindref="member">wpan_endpoint_match()</ref>, <ref refid="group__wpan__aps_1ga1c725384b21faf5953683d7b028c7be3" kindref="member">wpan_cluster_match()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wpan/wpan_aps.c" line="105" column="1" bodyfile="src/wpan/wpan_aps.c" bodystart="105" bodyend="132"/>
        <references refid="group__wpan__aps_1ga7d397493728da2bca8d55b2d61c4ec5d" compoundref="aps_8h" startline="252">wpan_endpoint_table_entry_t::endpoint</references>
        <references refid="group__wpan__aps_1ga249b57f4a0559c0adb038f68d9b5c443" compoundref="aps_8h" startline="390">wpan_dev_t::endpoint_get_next</references>
        <references refid="group__wpan__aps_1gad7c834ea25a2f008caaf40ec08aa5a86" compoundref="aps_8h" startline="414">wpan_dev_t::endpoint_table</references>
        <references refid="group__wpan__aps_1ga0ca55f0e8039df7fba03c041e4cf5a79" compoundref="aps_8h" startline="431">WPAN_ENDPOINT_END_OF_LIST</references>
        <referencedby refid="group__wpan__aps_1ga1254464011d2d98c13db7b0b3d41c25b" compoundref="wpan__aps_8c" startline="860" endline="881">wpan_tick</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__wpan__aps_1ga0a88c1b17d1f9a42a53668b14f15e205" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wpan_aps_debug const <ref refid="structwpan__endpoint__table__entry__t" kindref="compound">wpan_endpoint_table_entry_t</ref> *</type>
        <definition>const wpan_endpoint_table_entry_t * wpan_endpoint_match</definition>
        <argsstring>(wpan_dev_t *dev, uint8_t endpoint, uint16_t profile_id)</argsstring>
        <name>wpan_endpoint_match</name>
        <param>
          <type><ref refid="structwpan__dev__t" kindref="compound">wpan_dev_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref></type>
          <declname>endpoint</declname>
        </param>
        <param>
          <type><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref></type>
          <declname>profile_id</declname>
        </param>
        <briefdescription>
<para>Walk a device&apos;s endpoint table looking for a matching endpoint ID and profile ID. </para>        </briefdescription>
        <detaileddescription>
<para>Used by the endpoint dispatcher and ZDO layer to describe available endpoints on this device.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Device with endpoint table to search. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">endpoint</parametername>
</parameternamelist>
<parameterdescription>
<para>Endpoint number to search for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">profile_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Profile to match or WPAN_APS_PROFILE_ANY to search on endpoint number only.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>NULL</parametername>
</parameternamelist>
<parameterdescription>
<para><emphasis>dev</emphasis> is invalid or reached end of table without finding a match </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!NULL</parametername>
</parameternamelist>
<parameterdescription>
<para>next entry from table</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__wpan__aps_1ga2cc975231963e0eb75c449c11b1d95de" kindref="member">wpan_endpoint_of_cluster()</ref>, <ref refid="group__wpan__aps_1gaca3b72047ea4e156ce9a977c13624b5c" kindref="member">wpan_endpoint_get_next()</ref>, <ref refid="group__wpan__aps_1ga1c725384b21faf5953683d7b028c7be3" kindref="member">wpan_cluster_match()</ref>, <ref refid="group__wpan__aps_1gab448ec18a47178272336da5eacfa2290" kindref="member">wpan_endpoint_of_envelope()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wpan/wpan_aps.c" line="160" column="1" bodyfile="src/wpan/wpan_aps.c" bodystart="160" bodyend="179"/>
        <referencedby refid="group__zdo_1gab405baf051b6c2b3c85bc4e80aa5c2bb" compoundref="zigbee__zdo_8c" startline="65" endline="68">_zdo_endpoint_of</referencedby>
        <referencedby refid="group__wpan__aps_1gaf56e4d0e52462b5cf41c5fa5f23ea952" compoundref="wpan__aps_8c" startline="427" endline="481">wpan_conversation_response</referencedby>
        <referencedby refid="group__wpan__aps_1gab448ec18a47178272336da5eacfa2290" compoundref="wpan__aps_8c" startline="204" endline="211">wpan_endpoint_of_envelope</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__wpan__aps_1gab448ec18a47178272336da5eacfa2290" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wpan_aps_debug const <ref refid="structwpan__endpoint__table__entry__t" kindref="compound">wpan_endpoint_table_entry_t</ref> *</type>
        <definition>const wpan_endpoint_table_entry_t * wpan_endpoint_of_envelope</definition>
        <argsstring>(const wpan_envelope_t *env)</argsstring>
        <name>wpan_endpoint_of_envelope</name>
        <param>
          <type>const <ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref> *</type>
          <declname>env</declname>
        </param>
        <briefdescription>
<para>Look up the endpoint table entry for the source endpoint of an envelope. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">env</parametername>
</parameternamelist>
<parameterdescription>
<para>Envelope for lookup. Uses <emphasis>env-&gt;source_endpoint</emphasis> and <emphasis>env-&gt;profile_id</emphasis> to find the endpoint table entry for <emphasis>env-&gt;dev</emphasis>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>NULL</parametername>
</parameternamelist>
<parameterdescription>
<para>invalid parameter, or reached end of table without finding a match </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!NULL</parametername>
</parameternamelist>
<parameterdescription>
<para>entry from table</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__wpan__aps_1ga2cc975231963e0eb75c449c11b1d95de" kindref="member">wpan_endpoint_of_cluster()</ref>, <ref refid="group__wpan__aps_1gaca3b72047ea4e156ce9a977c13624b5c" kindref="member">wpan_endpoint_get_next()</ref>, <ref refid="group__wpan__aps_1ga1c725384b21faf5953683d7b028c7be3" kindref="member">wpan_cluster_match()</ref>, <ref refid="group__wpan__aps_1ga0a88c1b17d1f9a42a53668b14f15e205" kindref="member">wpan_endpoint_match()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wpan/wpan_aps.c" line="204" column="1" bodyfile="src/wpan/wpan_aps.c" bodystart="204" bodyend="211"/>
        <references refid="group__wpan__aps_1ga7f9a38312b9025348d42a4ed0042ce37" compoundref="aps_8h" startline="42">wpan_envelope_t::dev</references>
        <references refid="group__wpan__aps_1ga5ca7f19e5697de2baf0e2147a41a5792" compoundref="aps_8h" startline="45">wpan_envelope_t::profile_id</references>
        <references refid="group__wpan__aps_1ga9781a5a281ee97f7f67d8ebe2c4f54db" compoundref="aps_8h" startline="49">wpan_envelope_t::source_endpoint</references>
        <references refid="group__wpan__aps_1ga0a88c1b17d1f9a42a53668b14f15e205" compoundref="wpan__aps_8c" startline="160" endline="179">wpan_endpoint_match</references>
      </memberdef>
      <memberdef kind="function" id="group__wpan__aps_1ga2cc975231963e0eb75c449c11b1d95de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wpan_aps_debug const <ref refid="structwpan__endpoint__table__entry__t" kindref="compound">wpan_endpoint_table_entry_t</ref> *</type>
        <definition>const wpan_endpoint_table_entry_t * wpan_endpoint_of_cluster</definition>
        <argsstring>(wpan_dev_t *dev, uint16_t profile_id, uint16_t cluster_id, uint8_t mask)</argsstring>
        <name>wpan_endpoint_of_cluster</name>
        <param>
          <type><ref refid="structwpan__dev__t" kindref="compound">wpan_dev_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref></type>
          <declname>profile_id</declname>
        </param>
        <param>
          <type><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref></type>
          <declname>cluster_id</declname>
        </param>
        <param>
          <type><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref></type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Walk a device&apos;s endpoint table looking for a matching profile ID and cluster ID. </para>        </briefdescription>
        <detaileddescription>
<para>Used to find the correct endpoint to use for sending ZCL client requests.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Device with endpoint table to search. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">profile_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Profile to match or WPAN_APS_PROFILE_ANY to search on cluster ID only. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cluster_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Cluster ID to search for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Flags to match against the <computeroutput>flags</computeroutput> member of the <ref refid="structwpan__cluster__table__entry__t" kindref="compound">wpan_cluster_table_entry_t</ref> structure. If any flags match, the entry is returned. Typically one of<itemizedlist>
<listitem><para><ref refid="group__wpan__aps_1ga2024b5d21c6f8c2f151cc2b0576c08f4" kindref="member">WPAN_CLUST_FLAG_INPUT</ref> (or <ref refid="group__wpan__aps_1ga9e0a1a0abf5594d8fa5a38b1ca40b3bc" kindref="member">WPAN_CLUST_FLAG_SERVER</ref>)</para></listitem><listitem><para><ref refid="group__wpan__aps_1ga0456c33bdaa673f37f9285a3f5ca0172" kindref="member">WPAN_CLUST_FLAG_OUTPUT</ref> (or <ref refid="group__wpan__aps_1ga9aae0646b212af63cbb07c98a33cd986" kindref="member">WPAN_CLUST_FLAG_CLIENT</ref>)</para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>NULL</parametername>
</parameternamelist>
<parameterdescription>
<para><emphasis>dev</emphasis> is invalid or reached end of table without finding a match </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!NULL</parametername>
</parameternamelist>
<parameterdescription>
<para>matching entry from table</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__wpan__aps_1ga0a88c1b17d1f9a42a53668b14f15e205" kindref="member">wpan_endpoint_match()</ref>, <ref refid="group__wpan__aps_1gaca3b72047ea4e156ce9a977c13624b5c" kindref="member">wpan_endpoint_get_next()</ref>, <ref refid="group__wpan__aps_1ga1c725384b21faf5953683d7b028c7be3" kindref="member">wpan_cluster_match()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wpan/wpan_aps.c" line="243" column="1" bodyfile="src/wpan/wpan_aps.c" bodystart="243" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="group__wpan__aps_1gae5f88ed40bd334d963e261947b77b980" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wpan_aps_debug int</type>
        <definition>int wpan_conversation_register</definition>
        <argsstring>(wpan_ep_state_t FAR *state, wpan_response_fn handler, const void FAR *context, uint16_t timeout)</argsstring>
        <name>wpan_conversation_register</name>
        <param>
          <type><ref refid="structwpan__ep__state__t" kindref="compound">wpan_ep_state_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type><ref refid="group__wpan__aps_1gabf0a6b85c9ff3ff9104c8b58c1436d72" kindref="member">wpan_response_fn</ref></type>
          <declname>handler</declname>
        </param>
        <param>
          <type>const void <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref></type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Add a conversation to the table of tracked conversations. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">state</parametername>
</parameternamelist>
<parameterdescription>
<para>endpoint state associated with sending endpoint </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">handler</parametername>
</parameternamelist>
<parameterdescription>
<para>handler to call when responses come back, or <computeroutput>NULL</computeroutput> to increment and return the endpoint&apos;s transaction ID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">context</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer stored in conversation table and passed to callback handler </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>number of seconds before generating timeout, or 0 for none</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0-255</parametername>
</parameternamelist>
<parameterdescription>
<para>transaction ID to use in sent frame </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>state is invalid (NULL) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOSPC</parametername>
</parameternamelist>
<parameterdescription>
<para>table is full</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__wpan__aps_1gaab1c77ccbd237270f11499fb6411599c" kindref="member">wpan_endpoint_next_trans</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wpan/wpan_aps.c" line="299" column="1" bodyfile="src/wpan/wpan_aps.c" bodystart="299" bodyend="339"/>
        <references refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" compoundref="platform_8h" startline="95">EINVAL</references>
        <references refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" compoundref="platform_8h" startline="370">FAR</references>
        <references refid="group__wpan__aps_1gae34b1efc8ba99add17fcd767852197d4" compoundref="aps_8h" startline="513">WPAN_MAX_CONVERSATIONS</references>
        <referencedby refid="group__zdo_1gab02e4c1584594c0a96d05399bd69bffa" compoundref="zigbee__zdo_8c" startline="839" endline="885">zdo_send_bind_req</referencedby>
        <referencedby refid="group__zdo_1gac842062e5e1a60d25cddf16ec22ef601" compoundref="zigbee__zdo_8c" startline="925" endline="969">zdo_send_descriptor_req</referencedby>
        <referencedby refid="group__zdo_1ga4af5f8d70054f7883dbc1305e3a3f181" compoundref="zigbee__zdo_8c" startline="1134" endline="1173">zdo_send_ieee_addr_req</referencedby>
        <referencedby refid="group__zdo_1ga40f076c190ab2390836687b8e1f705eb" compoundref="zigbee__zdo_8c" startline="1028" endline="1070">zdo_send_nwk_addr_req</referencedby>
        <referencedby refid="group__zdo_1gafbbece379bc09af360099d1e0825d507" compoundref="zigbee__zdo_8c" startline="422" endline="464">zdo_simple_desc_request</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__wpan__aps_1gad36c04a3f2741f52710ab7768d1fcda8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wpan_aps_debug void</type>
        <definition>void wpan_conversation_delete</definition>
        <argsstring>(wpan_conversation_t FAR *conversation)</argsstring>
        <name>wpan_conversation_delete</name>
        <param>
          <type><ref refid="structwpan__conversation__t" kindref="compound">wpan_conversation_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>conversation</declname>
        </param>
        <briefdescription>
<para>Delete a conversation from an endpoint&apos;s conversation table. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">conversation</parametername>
</parameternamelist>
<parameterdescription>
<para>conversation to delete </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wpan/wpan_aps.c" line="349" column="1" bodyfile="src/wpan/wpan_aps.c" bodystart="349" bodyend="355"/>
      </memberdef>
      <memberdef kind="function" id="group__wpan__aps_1gad55133545fcf6ebc2d630057abf5ad48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>wpan_aps_debug void _wpan_endpoint_expire_conversations</definition>
        <argsstring>(wpan_ep_state_t FAR *state)</argsstring>
        <name>_wpan_endpoint_expire_conversations</name>
        <param>
          <type><ref refid="structwpan__ep__state__t" kindref="compound">wpan_ep_state_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Walk an endpoint&apos;s conversation table and expire any conversations that have timed out. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">state</parametername>
</parameternamelist>
<parameterdescription>
<para>endpoint state (from endpoint table) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wpan/wpan_aps.c" line="358" column="1" bodyfile="src/wpan/wpan_aps.c" bodystart="368" bodyend="400"/>
        <references refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" compoundref="platform_8h" startline="370">FAR</references>
        <referencedby refid="group__wpan__aps_1ga1254464011d2d98c13db7b0b3d41c25b" compoundref="wpan__aps_8c" startline="860" endline="881">wpan_tick</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__wpan__aps_1gaf56e4d0e52462b5cf41c5fa5f23ea952" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wpan_aps_debug int</type>
        <definition>int wpan_conversation_response</definition>
        <argsstring>(wpan_ep_state_t FAR *state, uint8_t transaction_id, const wpan_envelope_t FAR *envelope)</argsstring>
        <name>wpan_conversation_response</name>
        <param>
          <type><ref refid="structwpan__ep__state__t" kindref="compound">wpan_ep_state_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref></type>
          <declname>transaction_id</declname>
        </param>
        <param>
          <type>const <ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>envelope</declname>
        </param>
        <briefdescription>
<para>Searches the endpoint&apos;s table of active conversations (outstanding requests waiting for responses) for a given transaction. </para>        </briefdescription>
        <detaileddescription>
<para>Hands the response frame off to the handler registered to the conversation with <ref refid="group__wpan__aps_1gae5f88ed40bd334d963e261947b77b980" kindref="member">wpan_conversation_register()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">state</parametername>
</parameternamelist>
<parameterdescription>
<para>endpoint state (from endpoint table) or NULL to look it up using the envelope </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">transaction_id</parametername>
</parameternamelist>
<parameterdescription>
<para>transaction ID from frame payload, used to look up conversation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">envelope</parametername>
</parameternamelist>
<parameterdescription>
<para>envelope from response frame, passed to conversation&apos;s handler</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>invalid parameter passed to function, or conversation not found in table </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>handler processed response </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!0</parametername>
</parameternamelist>
<parameterdescription>
<para>handler reported an error while processing response </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wpan/wpan_aps.c" line="427" column="1" bodyfile="src/wpan/wpan_aps.c" bodystart="427" bodyend="481"/>
        <references refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" compoundref="platform_8h" startline="95">EINVAL</references>
        <references refid="group__wpan__aps_1ga389966cb276b33004b14ee698c270347" compoundref="aps_8h" startline="264">wpan_endpoint_table_entry_t::ep_state</references>
        <references refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" compoundref="platform_8h" startline="370">FAR</references>
        <references refid="group__wpan__aps_1ga0a88c1b17d1f9a42a53668b14f15e205" compoundref="wpan__aps_8c" startline="160" endline="179">wpan_endpoint_match</references>
        <references refid="group__wpan__aps_1gae34b1efc8ba99add17fcd767852197d4" compoundref="aps_8h" startline="513">WPAN_MAX_CONVERSATIONS</references>
      </memberdef>
      <memberdef kind="function" id="group__wpan__aps_1gaab1c77ccbd237270f11499fb6411599c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wpan_aps_debug <ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref></type>
        <definition>uint8_t wpan_endpoint_next_trans</definition>
        <argsstring>(const wpan_endpoint_table_entry_t *ep)</argsstring>
        <name>wpan_endpoint_next_trans</name>
        <param>
          <type>const <ref refid="structwpan__endpoint__table__entry__t" kindref="compound">wpan_endpoint_table_entry_t</ref> *</type>
          <declname>ep</declname>
        </param>
        <briefdescription>
<para>Increment and return the endpoint&apos;s transaction ID counter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ep</parametername>
</parameternamelist>
<parameterdescription>
<para>entry from endpoint table</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0-255</parametername>
</parameternamelist>
<parameterdescription>
<para>current transaction ID for endpoint </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wpan/wpan_aps.c" line="493" column="1" bodyfile="src/wpan/wpan_aps.c" bodystart="493" bodyend="500"/>
        <references refid="group__wpan__aps_1ga389966cb276b33004b14ee698c270347" compoundref="aps_8h" startline="264">wpan_endpoint_table_entry_t::ep_state</references>
      </memberdef>
      <memberdef kind="function" id="group__wpan__aps_1gaea487a9cccf8d5a2c592324678f13b4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wpan_aps_debug int</type>
        <definition>wpan_aps_debug int _wpan_endpoint_dispatch</definition>
        <argsstring>(wpan_envelope_t *envelope, const wpan_endpoint_table_entry_t *ep)</argsstring>
        <name>_wpan_endpoint_dispatch</name>
        <param>
          <type><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref> *</type>
          <declname>envelope</declname>
        </param>
        <param>
          <type>const <ref refid="structwpan__endpoint__table__entry__t" kindref="compound">wpan_endpoint_table_entry_t</ref> *</type>
          <declname>ep</declname>
        </param>
        <briefdescription>
<para>Dispatch a message for a given endpoint. </para>        </briefdescription>
        <detaileddescription>
<internal><para>Should only be called from wpan_envelope_dispatch.</para><para>Looks up the cluster ID in the endpoint&apos;s cluster table and passes <computeroutput>envelope</computeroutput> off to the cluster handler (if a matching cluster was found) or the endpoint handler.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">envelope</parametername>
</parameternamelist>
<parameterdescription>
<para>structure containing all necessary information about message (endpoints, cluster, profile, etc.) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ep</parametername>
</parameternamelist>
<parameterdescription>
<para>endpoint to dispatch envelope to</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>successfully dispatched message </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOENT</parametername>
</parameternamelist>
<parameterdescription>
<para>no handler for this endpoint/cluster </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!0</parametername>
</parameternamelist>
<parameterdescription>
<para>error dispatching messages </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wpan/wpan_aps.c" line="523" column="1" bodyfile="src/wpan/wpan_aps.c" bodystart="523" bodyend="598"/>
      </memberdef>
      <memberdef kind="function" id="group__wpan__aps_1gae84eafd10f51de6cdac4732b8948606d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wpan_aps_debug int</type>
        <definition>int wpan_envelope_dispatch</definition>
        <argsstring>(wpan_envelope_t *envelope)</argsstring>
        <name>wpan_envelope_dispatch</name>
        <param>
          <type><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref> *</type>
          <declname>envelope</declname>
        </param>
        <briefdescription>
<para>Find the matching endpoint for the provided <computeroutput>envelope</computeroutput> and have it process the frame. </para>        </briefdescription>
        <detaileddescription>
<para>In the case of the broadcast endpoint (255), dispatches the frame to all endpoints matching the envelope&apos;s profile ID.</para><para>Looks up the destination endpoint and cluster ID in the device&apos;s endpoint table and passes <computeroutput>envelope</computeroutput> off to the cluster handler (if a matching cluster was found) or the endpoint handler.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">envelope</parametername>
</parameternamelist>
<parameterdescription>
<para>structure containing all necessary information about message (endpoints, cluster, profile, etc.)</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>successfully dispatched message </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOENT</parametername>
</parameternamelist>
<parameterdescription>
<para>no handler for this endpoint/cluster </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!0</parametername>
</parameternamelist>
<parameterdescription>
<para>error dispatching messages </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wpan/wpan_aps.c" line="622" column="1" bodyfile="src/wpan/wpan_aps.c" bodystart="622" bodyend="676"/>
        <references refid="group__hal_1ga03e689f378f643d16ea7537918528a48" compoundref="platform_8h" startline="110">ENOENT</references>
        <referencedby refid="group__xbee__wpan_1ga8cb1973677412a2c5627a77009a8f283" compoundref="xbee__wpan_8c" startline="54" endline="93">_xbee_handle_receive_explicit</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__wpan__aps_1ga95e2bb4e4c546191c059f54179064fc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wpan_aps_debug void</type>
        <definition>void wpan_envelope_create</definition>
        <argsstring>(wpan_envelope_t *envelope, wpan_dev_t *dev, const addr64 FAR *ieee, uint16_t network_addr)</argsstring>
        <name>wpan_envelope_create</name>
        <param>
          <type><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref> *</type>
          <declname>envelope</declname>
        </param>
        <param>
          <type><ref refid="structwpan__dev__t" kindref="compound">wpan_dev_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>const <ref refid="unionaddr64" kindref="compound">addr64</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>ieee</declname>
        </param>
        <param>
          <type><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref></type>
          <declname>network_addr</declname>
        </param>
        <briefdescription>
<para>Starting with a blank envelope, fill in the device, 64-bit IEEE address and 16-bit network address of the destination. </para>        </briefdescription>
        <detaileddescription>
<para>The profile ID, cluster ID, source/destination endpoints and envelope options are all be set to zero.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">envelope</parametername>
</parameternamelist>
<parameterdescription>
<para>envelope to populate </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>device that will send this envelope </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ieee</parametername>
</parameternamelist>
<parameterdescription>
<para>64-bit IEEE/MAC address of recipient or one of<itemizedlist>
<listitem><para><ref refid="group__wpan__types_1ga816199ef85ef801e07ae48350664034d" kindref="member">WPAN_IEEE_ADDR_COORDINATOR</ref> (send to coordinator)</para></listitem><listitem><para><ref refid="group__wpan__types_1gaced36f5538c5bb2da4f60a90313f1674" kindref="member">WPAN_IEEE_ADDR_BROADCAST</ref> (broadcast packet)</para></listitem><listitem><para><ref refid="group__wpan__types_1ga09e965ef6cfbfd48312d86bb011f125b" kindref="member">WPAN_IEEE_ADDR_UNDEFINED</ref> (use network address only) </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">network_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>16-bit network address of recipient or one of<itemizedlist>
<listitem><para><ref refid="group__wpan__types_1ga5158cbab6c4139bd77d1d3f80d9071b2" kindref="member">WPAN_NET_ADDR_COORDINATOR</ref> for the coordinator (use the coordinator&apos;s actual IEEE address for the <emphasis>ieee</emphasis> parameter).</para></listitem><listitem><para><ref refid="group__wpan__types_1ga6865088a83d5dbd67d9185fbe0d25063" kindref="member">WPAN_NET_ADDR_BCAST_ALL_NODES</ref> (broadcast to all nodes)</para></listitem><listitem><para><ref refid="group__wpan__types_1ga08ec03f67d0d74ba6f98da543baee129" kindref="member">WPAN_NET_ADDR_BCAST_NOT_ASLEEP</ref> (broadcast to awake nodes)</para></listitem><listitem><para><ref refid="group__wpan__types_1gabc1252917f345a50aa97f991bb7a3685" kindref="member">WPAN_NET_ADDR_BCAST_ROUTERS</ref> (broadcast to routers/coordinator)</para></listitem><listitem><para><ref refid="group__wpan__types_1ga1674d7b825e528a482725d1c06b02c10" kindref="member">WPAN_NET_ADDR_UNDEFINED</ref> (use 64-bit address only)</para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
When sending broadcast packets, use WPAN_IEEE_ADDR_BROADCAST and WPAN_NET_ADDR_UNDEFINED. Don&apos;t set both addresses to broadcast.</para><para>When using DigiMesh protocol, always set the <computeroutput>network_addr</computeroutput> to WPAN_NET_ADDR_UNDEFINED.</para><para><simplesect kind="see"><para><ref refid="group__wpan__aps_1gaaaee02ff456d4f6103a5e94c2ba106c5" kindref="member">wpan_envelope_reply()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wpan/wpan_aps.c" line="712" column="1" bodyfile="src/wpan/wpan_aps.c" bodystart="712" bodyend="723"/>
        <references refid="group__wpan__aps_1ga7f9a38312b9025348d42a4ed0042ce37" compoundref="aps_8h" startline="42">wpan_envelope_t::dev</references>
        <references refid="group__wpan__aps_1ga2549f921e25a72dfa05a2154a792e2bf" compoundref="aps_8h" startline="43">wpan_envelope_t::ieee_address</references>
        <references refid="group__wpan__aps_1ga30948a7f8d096191895f50b80d81ca12" compoundref="aps_8h" startline="44">wpan_envelope_t::network_address</references>
        <referencedby refid="group__xbee__ota__client_1ga88905a78517417dd42f6356038717d01" compoundref="xbee__ota__client_8c" startline="119" endline="154">_xbee_ota_xmodem_write</referencedby>
        <referencedby refid="group__zdo_1gae4b6736d215caf2a10790761ed52443d" compoundref="zigbee__zdo_8c" startline="110" endline="139">_zdo_envelope_create</referencedby>
        <referencedby refid="group__xbee__ota__client_1ga4805b029d840b86133ef62d64866c6af" compoundref="xbee__ota__client_8c" startline="157" endline="211">xbee_ota_init</referencedby>
        <referencedby refid="group__zdo_1ga4af5f8d70054f7883dbc1305e3a3f181" compoundref="zigbee__zdo_8c" startline="1134" endline="1173">zdo_send_ieee_addr_req</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__wpan__aps_1gaaaee02ff456d4f6103a5e94c2ba106c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wpan_aps_debug int</type>
        <definition>int wpan_envelope_reply</definition>
        <argsstring>(wpan_envelope_t FAR *reply, const wpan_envelope_t FAR *original)</argsstring>
        <name>wpan_envelope_reply</name>
        <param>
          <type><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>reply</declname>
        </param>
        <param>
          <type>const <ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>original</declname>
        </param>
        <briefdescription>
<para>Create a reply envelope based on the envelope received from a remote node. </para>        </briefdescription>
        <detaileddescription>
<para>Copies the interface, addresses, profile and cluster from the original envelope, and then swaps the source and destination endpoints.</para><para>Note that it may be necessary for the caller to change the <emphasis>cluster_id</emphasis> as well, after building the reply envelope. For example, ZDO responses set the high bit of the request&apos;s cluster ID.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">reply</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer for storing the reply envelope.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">original</parametername>
</parameternamelist>
<parameterdescription>
<para>Original envelope, received from a remote node, to base the reply on.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>addressed reply envelope </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>either parameter is <computeroutput>NULL</computeroutput> or they point to the same address</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__wpan__aps_1ga95e2bb4e4c546191c059f54179064fc3" kindref="member">wpan_envelope_create()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wpan/wpan_aps.c" line="752" column="1" bodyfile="src/wpan/wpan_aps.c" bodystart="752" bodyend="776"/>
        <references refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" compoundref="platform_8h" startline="95">EINVAL</references>
        <referencedby refid="group__xbee__ota__server_1ga22cb77be06faba4020a4f5e0daf48f4f" compoundref="xbee__ota__server_8c" startline="30" endline="77">xbee_ota_server_cmd</referencedby>
        <referencedby refid="group__zcl__commissioning_1ga57f9aaf3da6dc9b513f7f9ccbb473a0b" compoundref="zcl__commissioning_8c" startline="265" endline="295">zcl_comm_response</referencedby>
        <referencedby refid="group__zdo_1ga1d645805a731e1419b5012a5c8a09bf8" compoundref="zigbee__zdo_8c" startline="160" endline="182">zdo_send_response</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__wpan__aps_1ga06f1e9e86b74ef807ded44b79b13e283" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wpan_aps_debug int</type>
        <definition>int wpan_envelope_send</definition>
        <argsstring>(const wpan_envelope_t FAR *envelope)</argsstring>
        <name>wpan_envelope_send</name>
        <param>
          <type>const <ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>envelope</declname>
        </param>
        <briefdescription>
<para>Send a message to an endpoint using address and payload information stored in a <ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref> structure. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">envelope</parametername>
</parameternamelist>
<parameterdescription>
<para>envelope of request to send</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>request sent </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!0</parametername>
</parameternamelist>
<parameterdescription>
<para>error trying to send request </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wpan/wpan_aps.c" line="790" column="1" bodyfile="src/wpan/wpan_aps.c" bodystart="790" bodyend="810"/>
        <referencedby refid="group__zcl__commissioning_1gab653d2ac290d96d3131c894f7330fbb6" compoundref="zcl__commissioning_8c" startline="370" endline="381">_zcl_comm_command_send</referencedby>
        <referencedby refid="group__xbee__ota__server_1ga22cb77be06faba4020a4f5e0daf48f4f" compoundref="xbee__ota__server_8c" startline="30" endline="77">xbee_ota_server_cmd</referencedby>
        <referencedby refid="group__xbee__transparent_1gafbf9e5ccdb17be373012bd690a76e570" compoundref="xbee__transparent__serial_8c" startline="32" endline="41">xbee_transparent_serial</referencedby>
        <referencedby refid="group__zcl__commissioning_1ga57f9aaf3da6dc9b513f7f9ccbb473a0b" compoundref="zcl__commissioning_8c" startline="265" endline="295">zcl_comm_response</referencedby>
        <referencedby refid="group__zdo_1gac842062e5e1a60d25cddf16ec22ef601" compoundref="zigbee__zdo_8c" startline="925" endline="969">zdo_send_descriptor_req</referencedby>
        <referencedby refid="group__zdo_1gafbbece379bc09af360099d1e0825d507" compoundref="zigbee__zdo_8c" startline="422" endline="464">zdo_simple_desc_request</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__wpan__aps_1ga2a4e8b3e2022e55e6607243a5feb25cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wpan_aps_debug void</type>
        <definition>void wpan_envelope_dump</definition>
        <argsstring>(const wpan_envelope_t FAR *envelope)</argsstring>
        <name>wpan_envelope_dump</name>
        <param>
          <type>const <ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>envelope</declname>
        </param>
        <briefdescription>
<para>Debugging function to dump the contents of an envelope to stdout. </para>        </briefdescription>
        <detaileddescription>
<para>Displays all fields from the envelope, plus the contents of the payload</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">envelope</parametername>
</parameternamelist>
<parameterdescription>
<para>envelope to dump </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wpan/wpan_aps.c" line="823" column="1" bodyfile="src/wpan/wpan_aps.c" bodystart="823" bodyend="841"/>
        <references refid="group__wpan__types_1ga448782f4aed0821758969b47221417ed" compoundref="wpan__types_8c" startline="77" endline="111">addr64_format</references>
        <references refid="group__wpan__types_1gac468b40b060897498f923923654c3d4a" compoundref="types_8h" startline="49">ADDR64_STRING_LENGTH</references>
        <references refid="group__util_1gaa321236a0cb6f4e0dad592fdf1b550d2" compoundref="hexdump_8c" startline="28" endline="91">hex_dump</references>
        <references refid="group__hal_1gaec79525addd1a70fda55b1ea11534832" compoundref="platform_8h" startline="547">HEX_DUMP_FLAG_OFFSET</references>
        <references refid="group__hal_1ga379022d2cd3136d8f3500c88658056b7" compoundref="platform_8h" startline="406">PRIsFAR</references>
      </memberdef>
      <memberdef kind="function" id="group__wpan__aps_1ga1254464011d2d98c13db7b0b3d41c25b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wpan_aps_debug int</type>
        <definition>int wpan_tick</definition>
        <argsstring>(wpan_dev_t *dev)</argsstring>
        <name>wpan_tick</name>
        <param>
          <type><ref refid="structwpan__dev__t" kindref="compound">wpan_dev_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
<para>Calls the underlying hardware tick function to process received frames, and times out expired conversations. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>WPAN device to tick</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>&gt;=0</parametername>
</parameternamelist>
<parameterdescription>
<para>number of frames processed during the tick </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>device does not have a <computeroutput>tick</computeroutput> function assigned to it </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>&lt;0</parametername>
</parameternamelist>
<parameterdescription>
<para>some other error encountered during the tick </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wpan/wpan_aps.c" line="860" column="1" bodyfile="src/wpan/wpan_aps.c" bodystart="860" bodyend="881"/>
        <references refid="group__wpan__aps_1gad55133545fcf6ebc2d630057abf5ad48" compoundref="wpan__aps_8c" startline="368" endline="400">_wpan_endpoint_expire_conversations</references>
        <references refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" compoundref="platform_8h" startline="95">EINVAL</references>
        <references refid="group__wpan__aps_1ga389966cb276b33004b14ee698c270347" compoundref="aps_8h" startline="264">wpan_endpoint_table_entry_t::ep_state</references>
        <references refid="group__wpan__aps_1gab472632c6a95d7856d1ea137441ec6a2" compoundref="aps_8h" startline="388">wpan_dev_t::tick</references>
        <references refid="group__wpan__aps_1gaca3b72047ea4e156ce9a977c13624b5c" compoundref="wpan__aps_8c" startline="105" endline="132">wpan_endpoint_get_next</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__wpan__aps_1gabb1c4414656c0126916692f8c93495bc" prot="public" static="no">
        <name>wpan_aps_debug</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wpan/wpan_aps.c" line="32" column="10" bodyfile="src/wpan/wpan_aps.c" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__wpan__aps_1ga6a6e8a32dc7117f44bdca2802a1e54aa" prot="public" static="no">
        <name>WPAN_ENVELOPE_CLUSTER_FLAGS</name>
        <initializer>0x00FF</initializer>
        <briefdescription>
<para>mask of WPAN_CLUST_FLAG_* flags for the cluster tied to this envelope </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="53" column="11" bodyfile="include/wpan/aps.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__wpan__aps_1ga92a0f27267b04aa691e184b428e8f7c6" prot="public" static="no">
        <name>WPAN_ENVELOPE_BROADCAST_ADDR</name>
        <initializer>0x0100</initializer>
        <briefdescription>
<para>frame was received on a broadcast address </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="55" column="11" bodyfile="include/wpan/aps.h" bodystart="55" bodyend="-1"/>
        <referencedby refid="group__xbee__wpan_1ga8cb1973677412a2c5627a77009a8f283" compoundref="xbee__wpan_8c" startline="54" endline="93">_xbee_handle_receive_explicit</referencedby>
      </memberdef>
      <memberdef kind="define" id="group__wpan__aps_1ga9572c340b083c6a51b0473fee184ea2c" prot="public" static="no">
        <name>WPAN_ENVELOPE_BROADCAST_EP</name>
        <initializer>0x0200</initializer>
        <briefdescription>
<para>frame was received on the broadcast endpoint (0xFF) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="57" column="11" bodyfile="include/wpan/aps.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__wpan__aps_1ga3bf12c3b9fd0afac2c9f58de8e7c38e9" prot="public" static="no">
        <name>WPAN_ENVELOPE_RX_APS_ENCRYPT</name>
        <initializer>0x0400</initializer>
        <briefdescription>
<para>frame was received with APS encryption </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="59" column="11" bodyfile="include/wpan/aps.h" bodystart="59" bodyend="-1"/>
        <referencedby refid="group__xbee__ota__server_1ga22cb77be06faba4020a4f5e0daf48f4f" compoundref="xbee__ota__server_8c" startline="30" endline="77">xbee_ota_server_cmd</referencedby>
        <referencedby refid="group__xbee__wpan_1ga8cb1973677412a2c5627a77009a8f283" compoundref="xbee__wpan_8c" startline="54" endline="93">_xbee_handle_receive_explicit</referencedby>
      </memberdef>
      <memberdef kind="define" id="group__wpan__aps_1gacbfdff1cef70167f178c4e05b69f65fe" prot="public" static="no">
        <name>WPAN_CLUSTER_END_OF_LIST</name>
        <initializer>0xFFFF</initializer>
        <briefdescription>
<para>Cluster ID used to mark the end of <computeroutput>cluster_table</computeroutput> in <ref refid="structwpan__endpoint__table__entry__t" kindref="compound">wpan_endpoint_table_entry_t</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="280" column="9" bodyfile="include/wpan/aps.h" bodystart="280" bodyend="-1"/>
        <referencedby refid="group__zdo_1ga1a65d88af9f0c9906d548aa1ff2586f7" compoundref="zigbee__zdo_8c" startline="199" endline="221">_match_desc_cluster_list</referencedby>
        <referencedby refid="group__zdo_1ga558539813d6a9c8813eeae855e77385f" compoundref="zigbee__zdo_8c" startline="483" endline="509">_simple_desc_cluster_list</referencedby>
        <referencedby refid="group__wpan__aps_1ga1c725384b21faf5953683d7b028c7be3" compoundref="wpan__aps_8c" startline="62" endline="80">wpan_cluster_match</referencedby>
      </memberdef>
      <memberdef kind="define" id="group__wpan__aps_1ga55a7fbd8adf019d268f17b6ede90fe0f" prot="public" static="no">
        <name>WPAN_CLUST_ENTRY_LIST_END</name>
        <initializer>{ <ref refid="group__wpan__aps_1gacbfdff1cef70167f178c4e05b69f65fe" kindref="member">WPAN_CLUSTER_END_OF_LIST</ref> }</initializer>
        <briefdescription>
<para>Macro for a <ref refid="structwpan__cluster__table__entry__t" kindref="compound">wpan_cluster_table_entry_t</ref> that can be used to mark the end of the table. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="284" column="9" bodyfile="include/wpan/aps.h" bodystart="284" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__wpan__aps_1ga550a679be9209ba69cdc3d6a0846b86d" prot="public" static="no">
        <name>WPAN_FLAG_NONE</name>
        <initializer>0x0000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="403" column="11" bodyfile="include/wpan/aps.h" bodystart="403" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__wpan__aps_1gaa06c0d38b4a130f9657abf26c73b49dd" prot="public" static="no">
        <name>WPAN_FLAG_JOINED</name>
        <initializer>0x0001</initializer>
        <briefdescription>
<para>device has joined a network (but not necessarily authenticated) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="405" column="11" bodyfile="include/wpan/aps.h" bodystart="405" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__wpan__aps_1ga6508b417838fc0a043f5570b65e3f24b" prot="public" static="no">
        <name>WPAN_FLAG_AUTHENTICATED</name>
        <initializer>0x0002</initializer>
        <briefdescription>
<para>device completed Key Establishment and can send APS encrypted frames </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="407" column="11" bodyfile="include/wpan/aps.h" bodystart="407" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__wpan__aps_1gab7d95fae8b625fd39ae3b6f168a5511f" prot="public" static="no">
        <name>WPAN_FLAG_AUTHENTICATION_ENABLED</name>
        <initializer>0x0004</initializer>
        <briefdescription>
<para>device has encryption enabled (EO non-zero) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="409" column="11" bodyfile="include/wpan/aps.h" bodystart="409" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__wpan__aps_1gabe1e612e16ea40f970a7f160cae6de3a" prot="public" static="no">
        <name>WPAN_DEV_IS_JOINED</name>
        <param><defname>dev</defname></param>
        <initializer>((dev)-&gt;flags &amp; <ref refid="group__wpan__aps_1gaa06c0d38b4a130f9657abf26c73b49dd" kindref="member">WPAN_FLAG_JOINED</ref>)</initializer>
        <briefdescription>
<para>Macro to test whether a device has joined the network. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="structwpan__dev__t" kindref="compound">wpan_dev_t</ref> FAR *) to test </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>device has not joined the network </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!0</parametername>
</parameternamelist>
<parameterdescription>
<para>device has joined the network </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="422" column="9" bodyfile="include/wpan/aps.h" bodystart="422" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__wpan__aps_1ga5ba1c4d72eeac9bb8bd97ee811d7aa05" prot="public" static="no">
        <name>WPAN_DEV_IS_AUTHENTICATED</name>
        <param><defname>dev</defname></param>
        <initializer>((dev)-&gt;flags &amp; <ref refid="group__wpan__aps_1ga6508b417838fc0a043f5570b65e3f24b" kindref="member">WPAN_FLAG_AUTHENTICATED</ref>)</initializer>
        <briefdescription>
<para>Macro to test whether a device has authenticated with the trust center. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="structwpan__dev__t" kindref="compound">wpan_dev_t</ref> FAR *) to test </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>device has authenticated </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!0</parametername>
</parameternamelist>
<parameterdescription>
<para>device has not authenticated </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="428" column="9" bodyfile="include/wpan/aps.h" bodystart="428" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__wpan__aps_1ga0ca55f0e8039df7fba03c041e4cf5a79" prot="public" static="no">
        <name>WPAN_ENDPOINT_END_OF_LIST</name>
        <initializer>0xFF</initializer>
        <briefdescription>
<para>Endpoint ID used to mark the end of <computeroutput>endpoint_table</computeroutput> in <ref refid="structwpan__dev__t" kindref="compound">wpan_dev_t</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="431" column="9" bodyfile="include/wpan/aps.h" bodystart="431" bodyend="-1"/>
        <referencedby refid="group__wpan__aps_1gaca3b72047ea4e156ce9a977c13624b5c" compoundref="wpan__aps_8c" startline="105" endline="132">wpan_endpoint_get_next</referencedby>
      </memberdef>
      <memberdef kind="define" id="group__wpan__aps_1gaac571cafa96f8201c714feb0634afa92" prot="public" static="no">
        <name>WPAN_ENDPOINT_TABLE_END</name>
        <initializer>{ <ref refid="group__wpan__aps_1ga0ca55f0e8039df7fba03c041e4cf5a79" kindref="member">WPAN_ENDPOINT_END_OF_LIST</ref> }</initializer>
        <briefdescription>
<para>Macro for a <ref refid="structwpan__endpoint__table__entry__t" kindref="compound">wpan_endpoint_table_entry_t</ref> that can be used to mark the end of the table. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="435" column="9" bodyfile="include/wpan/aps.h" bodystart="435" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__wpan__aps_1ga05c007913497e9a6286b7b2cdcb3f37f" prot="public" static="no">
        <name>WPAN_APS_PROFILE_ANY</name>
        <initializer>0xFFFF</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="457" column="9" bodyfile="include/wpan/aps.h" bodystart="457" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__wpan__aps_1ga7f0128cee60f97e9f07bc95df3a0a1f1" prot="public" static="no">
        <name>WPAN_CONVERSATION_END</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="495" column="9" bodyfile="include/wpan/aps.h" bodystart="495" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__wpan__aps_1gaef235cbd4d3160abe5f856d86ad70555" prot="public" static="no">
        <name>WPAN_CONVERSATION_CONTINUE</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="496" column="9" bodyfile="include/wpan/aps.h" bodystart="496" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__wpan__aps_1gae34b1efc8ba99add17fcd767852197d4" prot="public" static="no">
        <name>WPAN_MAX_CONVERSATIONS</name>
        <initializer>3</initializer>
        <briefdescription>
<para>Number of outstanding requests to track in a <ref refid="structwpan__ep__state__t" kindref="compound">wpan_ep_state_t</ref> associated with an endpoint. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="513" column="10" bodyfile="include/wpan/aps.h" bodystart="513" bodyend="-1"/>
        <referencedby refid="group__wpan__aps_1gae5f88ed40bd334d963e261947b77b980" compoundref="wpan__aps_8c" startline="299" endline="339">wpan_conversation_register</referencedby>
        <referencedby refid="group__wpan__aps_1gaf56e4d0e52462b5cf41c5fa5f23ea952" compoundref="wpan__aps_8c" startline="427" endline="481">wpan_conversation_response</referencedby>
      </memberdef>
      <memberdef kind="define" id="group__wpan__aps_1gaaa330f432d7a6bccdb393a656ddfe4d3" prot="public" static="no">
        <name>WPAN_CONVERSATION_TIMEOUT</name>
        <initializer>30</initializer>
        <briefdescription>
<para>Default conversation recycle timeout (seconds) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/aps.h" line="518" column="10" bodyfile="include/wpan/aps.h" bodystart="518" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
