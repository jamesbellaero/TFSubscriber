<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="wpan__aps_8c" kind="file" language="C++">
    <compoundname>wpan_aps.c</compoundname>
    <includes local="no">errno.h</includes>
    <includes local="no">stddef.h</includes>
    <includes local="no">stdio.h</includes>
    <includes refid="platform_8h" local="yes">xbee/platform.h</includes>
    <includes refid="types_8h" local="yes">wpan/types.h</includes>
    <includes refid="aps_8h" local="yes">wpan/aps.h</includes>
    <includes refid="zdo_8h" local="yes">zigbee/zdo.h</includes>
    <includes refid="zcl_8h" local="yes">zigbee/zcl.h</includes>
    <incdepgraph>
      <node id="1259">
        <label>errno.h</label>
      </node>
      <node id="1263">
        <label>xbee/jslong_glue.h</label>
        <link refid="jslong__glue_8h_source"/>
        <childnode refid="1264" relation="include">
        </childnode>
      </node>
      <node id="1260">
        <label>stddef.h</label>
      </node>
      <node id="1266">
        <label>wpan/aps.h</label>
        <link refid="aps_8h"/>
        <childnode refid="1265" relation="include">
        </childnode>
      </node>
      <node id="1270">
        <label>xbee/byteorder.h</label>
        <link refid="byteorder_8h"/>
        <childnode refid="1271" relation="include">
        </childnode>
        <childnode refid="1262" relation="include">
        </childnode>
      </node>
      <node id="1268">
        <label>zigbee/zcl.h</label>
        <link refid="zcl_8h"/>
        <childnode refid="1262" relation="include">
        </childnode>
        <childnode refid="1266" relation="include">
        </childnode>
        <childnode refid="1269" relation="include">
        </childnode>
      </node>
      <node id="1271">
        <label>string.h</label>
      </node>
      <node id="1265">
        <label>wpan/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="1262" relation="include">
        </childnode>
      </node>
      <node id="1262">
        <label>xbee/platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="1259" relation="include">
        </childnode>
        <childnode refid="1260" relation="include">
        </childnode>
        <childnode refid="1263" relation="include">
        </childnode>
      </node>
      <node id="1269">
        <label>zigbee/zcl_types.h</label>
        <link refid="zcl__types_8h"/>
        <childnode refid="1262" relation="include">
        </childnode>
        <childnode refid="1270" relation="include">
        </childnode>
        <childnode refid="1272" relation="include">
        </childnode>
      </node>
      <node id="1272">
        <label>zigbee/zcl64.h</label>
        <link refid="zcl64_8h"/>
        <childnode refid="1262" relation="include">
        </childnode>
      </node>
      <node id="1258">
        <label>src/wpan/wpan_aps.c</label>
        <link refid="wpan__aps_8c"/>
        <childnode refid="1259" relation="include">
        </childnode>
        <childnode refid="1260" relation="include">
        </childnode>
        <childnode refid="1261" relation="include">
        </childnode>
        <childnode refid="1262" relation="include">
        </childnode>
        <childnode refid="1265" relation="include">
        </childnode>
        <childnode refid="1266" relation="include">
        </childnode>
        <childnode refid="1267" relation="include">
        </childnode>
        <childnode refid="1268" relation="include">
        </childnode>
      </node>
      <node id="1267">
        <label>zigbee/zdo.h</label>
        <link refid="zdo_8h"/>
        <childnode refid="1265" relation="include">
        </childnode>
        <childnode refid="1266" relation="include">
        </childnode>
      </node>
      <node id="1264">
        <label>xbee/jslong.h</label>
        <link refid="jslong_8h_source"/>
      </node>
      <node id="1261">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__wpan__aps_1gabb1c4414656c0126916692f8c93495bc" prot="public" static="no">
        <name>wpan_aps_debug</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wpan/wpan_aps.c" line="32" column="10" bodyfile="src/wpan/wpan_aps.c" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__wpan__aps_1ga1c725384b21faf5953683d7b028c7be3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wpan_aps_debug const <ref refid="structwpan__cluster__table__entry__t" kindref="compound">wpan_cluster_table_entry_t</ref> *</type>
        <definition>const wpan_cluster_table_entry_t * wpan_cluster_match</definition>
        <argsstring>(uint16_t match, uint8_t mask, const wpan_cluster_table_entry_t *entry)</argsstring>
        <name>wpan_cluster_match</name>
        <param>
          <type><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref></type>
          <declname>match</declname>
        </param>
        <param>
          <type><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref></type>
          <declname>mask</declname>
        </param>
        <param>
          <type>const <ref refid="structwpan__cluster__table__entry__t" kindref="compound">wpan_cluster_table_entry_t</ref> *</type>
          <declname>entry</declname>
        </param>
        <briefdescription>
<para>Search a cluster table for a matching cluster ID. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">match</parametername>
</parameternamelist>
<parameterdescription>
<para>ID to match </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Flags to match against the <computeroutput>flags</computeroutput> member of the <ref refid="structwpan__cluster__table__entry__t" kindref="compound">wpan_cluster_table_entry_t</ref> structure. If any flags match, the entry is returned. Typically one of<itemizedlist>
<listitem><para><ref refid="group__wpan__aps_1ga2024b5d21c6f8c2f151cc2b0576c08f4" kindref="member">WPAN_CLUST_FLAG_INPUT</ref> (or <ref refid="group__wpan__aps_1ga9e0a1a0abf5594d8fa5a38b1ca40b3bc" kindref="member">WPAN_CLUST_FLAG_SERVER</ref>)</para></listitem><listitem><para><ref refid="group__wpan__aps_1ga0456c33bdaa673f37f9285a3f5ca0172" kindref="member">WPAN_CLUST_FLAG_OUTPUT</ref> (or <ref refid="group__wpan__aps_1ga9aae0646b212af63cbb07c98a33cd986" kindref="member">WPAN_CLUST_FLAG_CLIENT</ref>) </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">entry</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to list of entries to search</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>NULL</parametername>
</parameternamelist>
<parameterdescription>
<para><emphasis>entry</emphasis> is invalid or search reached <ref refid="group__wpan__aps_1gacbfdff1cef70167f178c4e05b69f65fe" kindref="member">WPAN_CLUSTER_END_OF_LIST</ref> without finding a match. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!NULL</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to matching entry from table.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__wpan__aps_1gaca3b72047ea4e156ce9a977c13624b5c" kindref="member">wpan_endpoint_get_next()</ref>, <ref refid="group__wpan__aps_1ga0a88c1b17d1f9a42a53668b14f15e205" kindref="member">wpan_endpoint_match()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wpan/wpan_aps.c" line="62" column="1" bodyfile="src/wpan/wpan_aps.c" bodystart="62" bodyend="80"/>
        <references refid="group__wpan__aps_1ga262a92f94287e77cb56350951893bae2" compoundref="aps_8h" startline="203">wpan_cluster_table_entry_t::cluster_id</references>
        <references refid="group__wpan__aps_1gaa2585d779da0ab21273a8d92de9a0ebe" compoundref="aps_8h" startline="216">wpan_cluster_table_entry_t::flags</references>
        <references refid="group__wpan__aps_1gacbfdff1cef70167f178c4e05b69f65fe" compoundref="aps_8h" startline="280">WPAN_CLUSTER_END_OF_LIST</references>
      </memberdef>
      <memberdef kind="function" id="group__wpan__aps_1gaca3b72047ea4e156ce9a977c13624b5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wpan_aps_debug const <ref refid="structwpan__endpoint__table__entry__t" kindref="compound">wpan_endpoint_table_entry_t</ref> *</type>
        <definition>const wpan_endpoint_table_entry_t * wpan_endpoint_get_next</definition>
        <argsstring>(wpan_dev_t *dev, const wpan_endpoint_table_entry_t *ep)</argsstring>
        <name>wpan_endpoint_get_next</name>
        <param>
          <type><ref refid="structwpan__dev__t" kindref="compound">wpan_dev_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>const <ref refid="structwpan__endpoint__table__entry__t" kindref="compound">wpan_endpoint_table_entry_t</ref> *</type>
          <declname>ep</declname>
        </param>
        <briefdescription>
<para>Function used to walk a device&apos;s endpoint table. </para>        </briefdescription>
        <detaileddescription>
<para>For most devices, this will just walk the entries in dev-&gt;endpoint_table. For custom applications a function may dynamically return entries.</para><para>Use of this function is the only way to walk the endpoint table.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>device with endpoint table to walk </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ep</parametername>
</parameternamelist>
<parameterdescription>
<para>NULL to return first entry in table, or a pointer previously returned by this function to get the next entry</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>NULL</parametername>
</parameternamelist>
<parameterdescription>
<para><emphasis>dev</emphasis> is invalid or reached end of table </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!NULL</parametername>
</parameternamelist>
<parameterdescription>
<para>next entry from table</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__wpan__aps_1ga0a88c1b17d1f9a42a53668b14f15e205" kindref="member">wpan_endpoint_match()</ref>, <ref refid="group__wpan__aps_1ga1c725384b21faf5953683d7b028c7be3" kindref="member">wpan_cluster_match()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wpan/wpan_aps.c" line="105" column="1" bodyfile="src/wpan/wpan_aps.c" bodystart="105" bodyend="132"/>
        <references refid="group__wpan__aps_1ga7d397493728da2bca8d55b2d61c4ec5d" compoundref="aps_8h" startline="252">wpan_endpoint_table_entry_t::endpoint</references>
        <references refid="group__wpan__aps_1ga249b57f4a0559c0adb038f68d9b5c443" compoundref="aps_8h" startline="390">wpan_dev_t::endpoint_get_next</references>
        <references refid="group__wpan__aps_1gad7c834ea25a2f008caaf40ec08aa5a86" compoundref="aps_8h" startline="414">wpan_dev_t::endpoint_table</references>
        <references refid="group__wpan__aps_1ga0ca55f0e8039df7fba03c041e4cf5a79" compoundref="aps_8h" startline="431">WPAN_ENDPOINT_END_OF_LIST</references>
        <referencedby refid="group__wpan__aps_1ga1254464011d2d98c13db7b0b3d41c25b" compoundref="wpan__aps_8c" startline="860" endline="881">wpan_tick</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__wpan__aps_1ga0a88c1b17d1f9a42a53668b14f15e205" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wpan_aps_debug const <ref refid="structwpan__endpoint__table__entry__t" kindref="compound">wpan_endpoint_table_entry_t</ref> *</type>
        <definition>const wpan_endpoint_table_entry_t * wpan_endpoint_match</definition>
        <argsstring>(wpan_dev_t *dev, uint8_t endpoint, uint16_t profile_id)</argsstring>
        <name>wpan_endpoint_match</name>
        <param>
          <type><ref refid="structwpan__dev__t" kindref="compound">wpan_dev_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref></type>
          <declname>endpoint</declname>
        </param>
        <param>
          <type><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref></type>
          <declname>profile_id</declname>
        </param>
        <briefdescription>
<para>Walk a device&apos;s endpoint table looking for a matching endpoint ID and profile ID. </para>        </briefdescription>
        <detaileddescription>
<para>Used by the endpoint dispatcher and ZDO layer to describe available endpoints on this device.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Device with endpoint table to search. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">endpoint</parametername>
</parameternamelist>
<parameterdescription>
<para>Endpoint number to search for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">profile_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Profile to match or WPAN_APS_PROFILE_ANY to search on endpoint number only.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>NULL</parametername>
</parameternamelist>
<parameterdescription>
<para><emphasis>dev</emphasis> is invalid or reached end of table without finding a match </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!NULL</parametername>
</parameternamelist>
<parameterdescription>
<para>next entry from table</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__wpan__aps_1ga2cc975231963e0eb75c449c11b1d95de" kindref="member">wpan_endpoint_of_cluster()</ref>, <ref refid="group__wpan__aps_1gaca3b72047ea4e156ce9a977c13624b5c" kindref="member">wpan_endpoint_get_next()</ref>, <ref refid="group__wpan__aps_1ga1c725384b21faf5953683d7b028c7be3" kindref="member">wpan_cluster_match()</ref>, <ref refid="group__wpan__aps_1gab448ec18a47178272336da5eacfa2290" kindref="member">wpan_endpoint_of_envelope()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wpan/wpan_aps.c" line="160" column="1" bodyfile="src/wpan/wpan_aps.c" bodystart="160" bodyend="179"/>
        <referencedby refid="group__zdo_1gab405baf051b6c2b3c85bc4e80aa5c2bb" compoundref="zigbee__zdo_8c" startline="65" endline="68">_zdo_endpoint_of</referencedby>
        <referencedby refid="group__wpan__aps_1gaf56e4d0e52462b5cf41c5fa5f23ea952" compoundref="wpan__aps_8c" startline="427" endline="481">wpan_conversation_response</referencedby>
        <referencedby refid="group__wpan__aps_1gab448ec18a47178272336da5eacfa2290" compoundref="wpan__aps_8c" startline="204" endline="211">wpan_endpoint_of_envelope</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__wpan__aps_1gab448ec18a47178272336da5eacfa2290" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wpan_aps_debug const <ref refid="structwpan__endpoint__table__entry__t" kindref="compound">wpan_endpoint_table_entry_t</ref> *</type>
        <definition>const wpan_endpoint_table_entry_t * wpan_endpoint_of_envelope</definition>
        <argsstring>(const wpan_envelope_t *env)</argsstring>
        <name>wpan_endpoint_of_envelope</name>
        <param>
          <type>const <ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref> *</type>
          <declname>env</declname>
        </param>
        <briefdescription>
<para>Look up the endpoint table entry for the source endpoint of an envelope. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">env</parametername>
</parameternamelist>
<parameterdescription>
<para>Envelope for lookup. Uses <emphasis>env-&gt;source_endpoint</emphasis> and <emphasis>env-&gt;profile_id</emphasis> to find the endpoint table entry for <emphasis>env-&gt;dev</emphasis>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>NULL</parametername>
</parameternamelist>
<parameterdescription>
<para>invalid parameter, or reached end of table without finding a match </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!NULL</parametername>
</parameternamelist>
<parameterdescription>
<para>entry from table</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__wpan__aps_1ga2cc975231963e0eb75c449c11b1d95de" kindref="member">wpan_endpoint_of_cluster()</ref>, <ref refid="group__wpan__aps_1gaca3b72047ea4e156ce9a977c13624b5c" kindref="member">wpan_endpoint_get_next()</ref>, <ref refid="group__wpan__aps_1ga1c725384b21faf5953683d7b028c7be3" kindref="member">wpan_cluster_match()</ref>, <ref refid="group__wpan__aps_1ga0a88c1b17d1f9a42a53668b14f15e205" kindref="member">wpan_endpoint_match()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wpan/wpan_aps.c" line="204" column="1" bodyfile="src/wpan/wpan_aps.c" bodystart="204" bodyend="211"/>
        <references refid="group__wpan__aps_1ga7f9a38312b9025348d42a4ed0042ce37" compoundref="aps_8h" startline="42">wpan_envelope_t::dev</references>
        <references refid="group__wpan__aps_1ga5ca7f19e5697de2baf0e2147a41a5792" compoundref="aps_8h" startline="45">wpan_envelope_t::profile_id</references>
        <references refid="group__wpan__aps_1ga9781a5a281ee97f7f67d8ebe2c4f54db" compoundref="aps_8h" startline="49">wpan_envelope_t::source_endpoint</references>
        <references refid="group__wpan__aps_1ga0a88c1b17d1f9a42a53668b14f15e205" compoundref="wpan__aps_8c" startline="160" endline="179">wpan_endpoint_match</references>
      </memberdef>
      <memberdef kind="function" id="group__wpan__aps_1ga2cc975231963e0eb75c449c11b1d95de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wpan_aps_debug const <ref refid="structwpan__endpoint__table__entry__t" kindref="compound">wpan_endpoint_table_entry_t</ref> *</type>
        <definition>const wpan_endpoint_table_entry_t * wpan_endpoint_of_cluster</definition>
        <argsstring>(wpan_dev_t *dev, uint16_t profile_id, uint16_t cluster_id, uint8_t mask)</argsstring>
        <name>wpan_endpoint_of_cluster</name>
        <param>
          <type><ref refid="structwpan__dev__t" kindref="compound">wpan_dev_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref></type>
          <declname>profile_id</declname>
        </param>
        <param>
          <type><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref></type>
          <declname>cluster_id</declname>
        </param>
        <param>
          <type><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref></type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Walk a device&apos;s endpoint table looking for a matching profile ID and cluster ID. </para>        </briefdescription>
        <detaileddescription>
<para>Used to find the correct endpoint to use for sending ZCL client requests.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Device with endpoint table to search. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">profile_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Profile to match or WPAN_APS_PROFILE_ANY to search on cluster ID only. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cluster_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Cluster ID to search for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Flags to match against the <computeroutput>flags</computeroutput> member of the <ref refid="structwpan__cluster__table__entry__t" kindref="compound">wpan_cluster_table_entry_t</ref> structure. If any flags match, the entry is returned. Typically one of<itemizedlist>
<listitem><para><ref refid="group__wpan__aps_1ga2024b5d21c6f8c2f151cc2b0576c08f4" kindref="member">WPAN_CLUST_FLAG_INPUT</ref> (or <ref refid="group__wpan__aps_1ga9e0a1a0abf5594d8fa5a38b1ca40b3bc" kindref="member">WPAN_CLUST_FLAG_SERVER</ref>)</para></listitem><listitem><para><ref refid="group__wpan__aps_1ga0456c33bdaa673f37f9285a3f5ca0172" kindref="member">WPAN_CLUST_FLAG_OUTPUT</ref> (or <ref refid="group__wpan__aps_1ga9aae0646b212af63cbb07c98a33cd986" kindref="member">WPAN_CLUST_FLAG_CLIENT</ref>)</para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>NULL</parametername>
</parameternamelist>
<parameterdescription>
<para><emphasis>dev</emphasis> is invalid or reached end of table without finding a match </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!NULL</parametername>
</parameternamelist>
<parameterdescription>
<para>matching entry from table</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__wpan__aps_1ga0a88c1b17d1f9a42a53668b14f15e205" kindref="member">wpan_endpoint_match()</ref>, <ref refid="group__wpan__aps_1gaca3b72047ea4e156ce9a977c13624b5c" kindref="member">wpan_endpoint_get_next()</ref>, <ref refid="group__wpan__aps_1ga1c725384b21faf5953683d7b028c7be3" kindref="member">wpan_cluster_match()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wpan/wpan_aps.c" line="243" column="1" bodyfile="src/wpan/wpan_aps.c" bodystart="243" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="group__wpan__aps_1gae5f88ed40bd334d963e261947b77b980" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wpan_aps_debug int</type>
        <definition>int wpan_conversation_register</definition>
        <argsstring>(wpan_ep_state_t FAR *state, wpan_response_fn handler, const void FAR *context, uint16_t timeout)</argsstring>
        <name>wpan_conversation_register</name>
        <param>
          <type><ref refid="structwpan__ep__state__t" kindref="compound">wpan_ep_state_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type><ref refid="group__wpan__aps_1gabf0a6b85c9ff3ff9104c8b58c1436d72" kindref="member">wpan_response_fn</ref></type>
          <declname>handler</declname>
        </param>
        <param>
          <type>const void <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref></type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Add a conversation to the table of tracked conversations. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">state</parametername>
</parameternamelist>
<parameterdescription>
<para>endpoint state associated with sending endpoint </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">handler</parametername>
</parameternamelist>
<parameterdescription>
<para>handler to call when responses come back, or <computeroutput>NULL</computeroutput> to increment and return the endpoint&apos;s transaction ID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">context</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer stored in conversation table and passed to callback handler </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>number of seconds before generating timeout, or 0 for none</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0-255</parametername>
</parameternamelist>
<parameterdescription>
<para>transaction ID to use in sent frame </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>state is invalid (NULL) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOSPC</parametername>
</parameternamelist>
<parameterdescription>
<para>table is full</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__wpan__aps_1gaab1c77ccbd237270f11499fb6411599c" kindref="member">wpan_endpoint_next_trans</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wpan/wpan_aps.c" line="299" column="1" bodyfile="src/wpan/wpan_aps.c" bodystart="299" bodyend="339"/>
        <references refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" compoundref="platform_8h" startline="95">EINVAL</references>
        <references refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" compoundref="platform_8h" startline="370">FAR</references>
        <references refid="group__wpan__aps_1gae34b1efc8ba99add17fcd767852197d4" compoundref="aps_8h" startline="513">WPAN_MAX_CONVERSATIONS</references>
        <referencedby refid="group__zdo_1gab02e4c1584594c0a96d05399bd69bffa" compoundref="zigbee__zdo_8c" startline="839" endline="885">zdo_send_bind_req</referencedby>
        <referencedby refid="group__zdo_1gac842062e5e1a60d25cddf16ec22ef601" compoundref="zigbee__zdo_8c" startline="925" endline="969">zdo_send_descriptor_req</referencedby>
        <referencedby refid="group__zdo_1ga4af5f8d70054f7883dbc1305e3a3f181" compoundref="zigbee__zdo_8c" startline="1134" endline="1173">zdo_send_ieee_addr_req</referencedby>
        <referencedby refid="group__zdo_1ga40f076c190ab2390836687b8e1f705eb" compoundref="zigbee__zdo_8c" startline="1028" endline="1070">zdo_send_nwk_addr_req</referencedby>
        <referencedby refid="group__zdo_1gafbbece379bc09af360099d1e0825d507" compoundref="zigbee__zdo_8c" startline="422" endline="464">zdo_simple_desc_request</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__wpan__aps_1gad36c04a3f2741f52710ab7768d1fcda8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wpan_aps_debug void</type>
        <definition>void wpan_conversation_delete</definition>
        <argsstring>(wpan_conversation_t FAR *conversation)</argsstring>
        <name>wpan_conversation_delete</name>
        <param>
          <type><ref refid="structwpan__conversation__t" kindref="compound">wpan_conversation_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>conversation</declname>
        </param>
        <briefdescription>
<para>Delete a conversation from an endpoint&apos;s conversation table. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">conversation</parametername>
</parameternamelist>
<parameterdescription>
<para>conversation to delete </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wpan/wpan_aps.c" line="349" column="1" bodyfile="src/wpan/wpan_aps.c" bodystart="349" bodyend="355"/>
      </memberdef>
      <memberdef kind="function" id="group__wpan__aps_1gad55133545fcf6ebc2d630057abf5ad48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>wpan_aps_debug void _wpan_endpoint_expire_conversations</definition>
        <argsstring>(wpan_ep_state_t FAR *state)</argsstring>
        <name>_wpan_endpoint_expire_conversations</name>
        <param>
          <type><ref refid="structwpan__ep__state__t" kindref="compound">wpan_ep_state_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Walk an endpoint&apos;s conversation table and expire any conversations that have timed out. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">state</parametername>
</parameternamelist>
<parameterdescription>
<para>endpoint state (from endpoint table) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wpan/wpan_aps.c" line="358" column="1" bodyfile="src/wpan/wpan_aps.c" bodystart="368" bodyend="400"/>
        <references refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" compoundref="platform_8h" startline="370">FAR</references>
        <referencedby refid="group__wpan__aps_1ga1254464011d2d98c13db7b0b3d41c25b" compoundref="wpan__aps_8c" startline="860" endline="881">wpan_tick</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__wpan__aps_1gaf56e4d0e52462b5cf41c5fa5f23ea952" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wpan_aps_debug int</type>
        <definition>int wpan_conversation_response</definition>
        <argsstring>(wpan_ep_state_t FAR *state, uint8_t transaction_id, const wpan_envelope_t FAR *envelope)</argsstring>
        <name>wpan_conversation_response</name>
        <param>
          <type><ref refid="structwpan__ep__state__t" kindref="compound">wpan_ep_state_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref></type>
          <declname>transaction_id</declname>
        </param>
        <param>
          <type>const <ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>envelope</declname>
        </param>
        <briefdescription>
<para>Searches the endpoint&apos;s table of active conversations (outstanding requests waiting for responses) for a given transaction. </para>        </briefdescription>
        <detaileddescription>
<para>Hands the response frame off to the handler registered to the conversation with <ref refid="group__wpan__aps_1gae5f88ed40bd334d963e261947b77b980" kindref="member">wpan_conversation_register()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">state</parametername>
</parameternamelist>
<parameterdescription>
<para>endpoint state (from endpoint table) or NULL to look it up using the envelope </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">transaction_id</parametername>
</parameternamelist>
<parameterdescription>
<para>transaction ID from frame payload, used to look up conversation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">envelope</parametername>
</parameternamelist>
<parameterdescription>
<para>envelope from response frame, passed to conversation&apos;s handler</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>invalid parameter passed to function, or conversation not found in table </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>handler processed response </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!0</parametername>
</parameternamelist>
<parameterdescription>
<para>handler reported an error while processing response </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wpan/wpan_aps.c" line="427" column="1" bodyfile="src/wpan/wpan_aps.c" bodystart="427" bodyend="481"/>
        <references refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" compoundref="platform_8h" startline="95">EINVAL</references>
        <references refid="group__wpan__aps_1ga389966cb276b33004b14ee698c270347" compoundref="aps_8h" startline="264">wpan_endpoint_table_entry_t::ep_state</references>
        <references refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" compoundref="platform_8h" startline="370">FAR</references>
        <references refid="group__wpan__aps_1ga0a88c1b17d1f9a42a53668b14f15e205" compoundref="wpan__aps_8c" startline="160" endline="179">wpan_endpoint_match</references>
        <references refid="group__wpan__aps_1gae34b1efc8ba99add17fcd767852197d4" compoundref="aps_8h" startline="513">WPAN_MAX_CONVERSATIONS</references>
      </memberdef>
      <memberdef kind="function" id="group__wpan__aps_1gaab1c77ccbd237270f11499fb6411599c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wpan_aps_debug <ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref></type>
        <definition>uint8_t wpan_endpoint_next_trans</definition>
        <argsstring>(const wpan_endpoint_table_entry_t *ep)</argsstring>
        <name>wpan_endpoint_next_trans</name>
        <param>
          <type>const <ref refid="structwpan__endpoint__table__entry__t" kindref="compound">wpan_endpoint_table_entry_t</ref> *</type>
          <declname>ep</declname>
        </param>
        <briefdescription>
<para>Increment and return the endpoint&apos;s transaction ID counter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ep</parametername>
</parameternamelist>
<parameterdescription>
<para>entry from endpoint table</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0-255</parametername>
</parameternamelist>
<parameterdescription>
<para>current transaction ID for endpoint </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wpan/wpan_aps.c" line="493" column="1" bodyfile="src/wpan/wpan_aps.c" bodystart="493" bodyend="500"/>
        <references refid="group__wpan__aps_1ga389966cb276b33004b14ee698c270347" compoundref="aps_8h" startline="264">wpan_endpoint_table_entry_t::ep_state</references>
      </memberdef>
      <memberdef kind="function" id="group__wpan__aps_1gaea487a9cccf8d5a2c592324678f13b4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wpan_aps_debug int</type>
        <definition>wpan_aps_debug int _wpan_endpoint_dispatch</definition>
        <argsstring>(wpan_envelope_t *envelope, const wpan_endpoint_table_entry_t *ep)</argsstring>
        <name>_wpan_endpoint_dispatch</name>
        <param>
          <type><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref> *</type>
          <declname>envelope</declname>
        </param>
        <param>
          <type>const <ref refid="structwpan__endpoint__table__entry__t" kindref="compound">wpan_endpoint_table_entry_t</ref> *</type>
          <declname>ep</declname>
        </param>
        <briefdescription>
<para>Dispatch a message for a given endpoint. </para>        </briefdescription>
        <detaileddescription>
<internal><para>Should only be called from wpan_envelope_dispatch.</para><para>Looks up the cluster ID in the endpoint&apos;s cluster table and passes <computeroutput>envelope</computeroutput> off to the cluster handler (if a matching cluster was found) or the endpoint handler.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">envelope</parametername>
</parameternamelist>
<parameterdescription>
<para>structure containing all necessary information about message (endpoints, cluster, profile, etc.) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ep</parametername>
</parameternamelist>
<parameterdescription>
<para>endpoint to dispatch envelope to</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>successfully dispatched message </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOENT</parametername>
</parameternamelist>
<parameterdescription>
<para>no handler for this endpoint/cluster </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!0</parametername>
</parameternamelist>
<parameterdescription>
<para>error dispatching messages </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wpan/wpan_aps.c" line="523" column="1" bodyfile="src/wpan/wpan_aps.c" bodystart="523" bodyend="598"/>
      </memberdef>
      <memberdef kind="function" id="group__wpan__aps_1gae84eafd10f51de6cdac4732b8948606d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wpan_aps_debug int</type>
        <definition>int wpan_envelope_dispatch</definition>
        <argsstring>(wpan_envelope_t *envelope)</argsstring>
        <name>wpan_envelope_dispatch</name>
        <param>
          <type><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref> *</type>
          <declname>envelope</declname>
        </param>
        <briefdescription>
<para>Find the matching endpoint for the provided <computeroutput>envelope</computeroutput> and have it process the frame. </para>        </briefdescription>
        <detaileddescription>
<para>In the case of the broadcast endpoint (255), dispatches the frame to all endpoints matching the envelope&apos;s profile ID.</para><para>Looks up the destination endpoint and cluster ID in the device&apos;s endpoint table and passes <computeroutput>envelope</computeroutput> off to the cluster handler (if a matching cluster was found) or the endpoint handler.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">envelope</parametername>
</parameternamelist>
<parameterdescription>
<para>structure containing all necessary information about message (endpoints, cluster, profile, etc.)</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>successfully dispatched message </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOENT</parametername>
</parameternamelist>
<parameterdescription>
<para>no handler for this endpoint/cluster </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!0</parametername>
</parameternamelist>
<parameterdescription>
<para>error dispatching messages </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wpan/wpan_aps.c" line="622" column="1" bodyfile="src/wpan/wpan_aps.c" bodystart="622" bodyend="676"/>
        <references refid="group__hal_1ga03e689f378f643d16ea7537918528a48" compoundref="platform_8h" startline="110">ENOENT</references>
        <referencedby refid="group__xbee__wpan_1ga8cb1973677412a2c5627a77009a8f283" compoundref="xbee__wpan_8c" startline="54" endline="93">_xbee_handle_receive_explicit</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__wpan__aps_1ga95e2bb4e4c546191c059f54179064fc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wpan_aps_debug void</type>
        <definition>void wpan_envelope_create</definition>
        <argsstring>(wpan_envelope_t *envelope, wpan_dev_t *dev, const addr64 FAR *ieee, uint16_t network_addr)</argsstring>
        <name>wpan_envelope_create</name>
        <param>
          <type><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref> *</type>
          <declname>envelope</declname>
        </param>
        <param>
          <type><ref refid="structwpan__dev__t" kindref="compound">wpan_dev_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>const <ref refid="unionaddr64" kindref="compound">addr64</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>ieee</declname>
        </param>
        <param>
          <type><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref></type>
          <declname>network_addr</declname>
        </param>
        <briefdescription>
<para>Starting with a blank envelope, fill in the device, 64-bit IEEE address and 16-bit network address of the destination. </para>        </briefdescription>
        <detaileddescription>
<para>The profile ID, cluster ID, source/destination endpoints and envelope options are all be set to zero.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">envelope</parametername>
</parameternamelist>
<parameterdescription>
<para>envelope to populate </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>device that will send this envelope </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ieee</parametername>
</parameternamelist>
<parameterdescription>
<para>64-bit IEEE/MAC address of recipient or one of<itemizedlist>
<listitem><para><ref refid="group__wpan__types_1ga816199ef85ef801e07ae48350664034d" kindref="member">WPAN_IEEE_ADDR_COORDINATOR</ref> (send to coordinator)</para></listitem><listitem><para><ref refid="group__wpan__types_1gaced36f5538c5bb2da4f60a90313f1674" kindref="member">WPAN_IEEE_ADDR_BROADCAST</ref> (broadcast packet)</para></listitem><listitem><para><ref refid="group__wpan__types_1ga09e965ef6cfbfd48312d86bb011f125b" kindref="member">WPAN_IEEE_ADDR_UNDEFINED</ref> (use network address only) </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">network_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>16-bit network address of recipient or one of<itemizedlist>
<listitem><para><ref refid="group__wpan__types_1ga5158cbab6c4139bd77d1d3f80d9071b2" kindref="member">WPAN_NET_ADDR_COORDINATOR</ref> for the coordinator (use the coordinator&apos;s actual IEEE address for the <emphasis>ieee</emphasis> parameter).</para></listitem><listitem><para><ref refid="group__wpan__types_1ga6865088a83d5dbd67d9185fbe0d25063" kindref="member">WPAN_NET_ADDR_BCAST_ALL_NODES</ref> (broadcast to all nodes)</para></listitem><listitem><para><ref refid="group__wpan__types_1ga08ec03f67d0d74ba6f98da543baee129" kindref="member">WPAN_NET_ADDR_BCAST_NOT_ASLEEP</ref> (broadcast to awake nodes)</para></listitem><listitem><para><ref refid="group__wpan__types_1gabc1252917f345a50aa97f991bb7a3685" kindref="member">WPAN_NET_ADDR_BCAST_ROUTERS</ref> (broadcast to routers/coordinator)</para></listitem><listitem><para><ref refid="group__wpan__types_1ga1674d7b825e528a482725d1c06b02c10" kindref="member">WPAN_NET_ADDR_UNDEFINED</ref> (use 64-bit address only)</para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
When sending broadcast packets, use WPAN_IEEE_ADDR_BROADCAST and WPAN_NET_ADDR_UNDEFINED. Don&apos;t set both addresses to broadcast.</para><para>When using DigiMesh protocol, always set the <computeroutput>network_addr</computeroutput> to WPAN_NET_ADDR_UNDEFINED.</para><para><simplesect kind="see"><para><ref refid="group__wpan__aps_1gaaaee02ff456d4f6103a5e94c2ba106c5" kindref="member">wpan_envelope_reply()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wpan/wpan_aps.c" line="712" column="1" bodyfile="src/wpan/wpan_aps.c" bodystart="712" bodyend="723"/>
        <references refid="group__wpan__aps_1ga7f9a38312b9025348d42a4ed0042ce37" compoundref="aps_8h" startline="42">wpan_envelope_t::dev</references>
        <references refid="group__wpan__aps_1ga2549f921e25a72dfa05a2154a792e2bf" compoundref="aps_8h" startline="43">wpan_envelope_t::ieee_address</references>
        <references refid="group__wpan__aps_1ga30948a7f8d096191895f50b80d81ca12" compoundref="aps_8h" startline="44">wpan_envelope_t::network_address</references>
        <referencedby refid="group__xbee__ota__client_1ga88905a78517417dd42f6356038717d01" compoundref="xbee__ota__client_8c" startline="119" endline="154">_xbee_ota_xmodem_write</referencedby>
        <referencedby refid="group__zdo_1gae4b6736d215caf2a10790761ed52443d" compoundref="zigbee__zdo_8c" startline="110" endline="139">_zdo_envelope_create</referencedby>
        <referencedby refid="group__xbee__ota__client_1ga4805b029d840b86133ef62d64866c6af" compoundref="xbee__ota__client_8c" startline="157" endline="211">xbee_ota_init</referencedby>
        <referencedby refid="group__zdo_1ga4af5f8d70054f7883dbc1305e3a3f181" compoundref="zigbee__zdo_8c" startline="1134" endline="1173">zdo_send_ieee_addr_req</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__wpan__aps_1gaaaee02ff456d4f6103a5e94c2ba106c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wpan_aps_debug int</type>
        <definition>int wpan_envelope_reply</definition>
        <argsstring>(wpan_envelope_t FAR *reply, const wpan_envelope_t FAR *original)</argsstring>
        <name>wpan_envelope_reply</name>
        <param>
          <type><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>reply</declname>
        </param>
        <param>
          <type>const <ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>original</declname>
        </param>
        <briefdescription>
<para>Create a reply envelope based on the envelope received from a remote node. </para>        </briefdescription>
        <detaileddescription>
<para>Copies the interface, addresses, profile and cluster from the original envelope, and then swaps the source and destination endpoints.</para><para>Note that it may be necessary for the caller to change the <emphasis>cluster_id</emphasis> as well, after building the reply envelope. For example, ZDO responses set the high bit of the request&apos;s cluster ID.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">reply</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer for storing the reply envelope.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">original</parametername>
</parameternamelist>
<parameterdescription>
<para>Original envelope, received from a remote node, to base the reply on.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>addressed reply envelope </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>either parameter is <computeroutput>NULL</computeroutput> or they point to the same address</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__wpan__aps_1ga95e2bb4e4c546191c059f54179064fc3" kindref="member">wpan_envelope_create()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wpan/wpan_aps.c" line="752" column="1" bodyfile="src/wpan/wpan_aps.c" bodystart="752" bodyend="776"/>
        <references refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" compoundref="platform_8h" startline="95">EINVAL</references>
        <referencedby refid="group__xbee__ota__server_1ga22cb77be06faba4020a4f5e0daf48f4f" compoundref="xbee__ota__server_8c" startline="30" endline="77">xbee_ota_server_cmd</referencedby>
        <referencedby refid="group__zcl__commissioning_1ga57f9aaf3da6dc9b513f7f9ccbb473a0b" compoundref="zcl__commissioning_8c" startline="265" endline="295">zcl_comm_response</referencedby>
        <referencedby refid="group__zdo_1ga1d645805a731e1419b5012a5c8a09bf8" compoundref="zigbee__zdo_8c" startline="160" endline="182">zdo_send_response</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__wpan__aps_1ga06f1e9e86b74ef807ded44b79b13e283" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wpan_aps_debug int</type>
        <definition>int wpan_envelope_send</definition>
        <argsstring>(const wpan_envelope_t FAR *envelope)</argsstring>
        <name>wpan_envelope_send</name>
        <param>
          <type>const <ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>envelope</declname>
        </param>
        <briefdescription>
<para>Send a message to an endpoint using address and payload information stored in a <ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref> structure. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">envelope</parametername>
</parameternamelist>
<parameterdescription>
<para>envelope of request to send</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>request sent </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!0</parametername>
</parameternamelist>
<parameterdescription>
<para>error trying to send request </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wpan/wpan_aps.c" line="790" column="1" bodyfile="src/wpan/wpan_aps.c" bodystart="790" bodyend="810"/>
        <referencedby refid="group__zcl__commissioning_1gab653d2ac290d96d3131c894f7330fbb6" compoundref="zcl__commissioning_8c" startline="370" endline="381">_zcl_comm_command_send</referencedby>
        <referencedby refid="group__xbee__ota__server_1ga22cb77be06faba4020a4f5e0daf48f4f" compoundref="xbee__ota__server_8c" startline="30" endline="77">xbee_ota_server_cmd</referencedby>
        <referencedby refid="group__xbee__transparent_1gafbf9e5ccdb17be373012bd690a76e570" compoundref="xbee__transparent__serial_8c" startline="32" endline="41">xbee_transparent_serial</referencedby>
        <referencedby refid="group__zcl__commissioning_1ga57f9aaf3da6dc9b513f7f9ccbb473a0b" compoundref="zcl__commissioning_8c" startline="265" endline="295">zcl_comm_response</referencedby>
        <referencedby refid="group__zdo_1gac842062e5e1a60d25cddf16ec22ef601" compoundref="zigbee__zdo_8c" startline="925" endline="969">zdo_send_descriptor_req</referencedby>
        <referencedby refid="group__zdo_1gafbbece379bc09af360099d1e0825d507" compoundref="zigbee__zdo_8c" startline="422" endline="464">zdo_simple_desc_request</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__wpan__aps_1ga2a4e8b3e2022e55e6607243a5feb25cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wpan_aps_debug void</type>
        <definition>void wpan_envelope_dump</definition>
        <argsstring>(const wpan_envelope_t FAR *envelope)</argsstring>
        <name>wpan_envelope_dump</name>
        <param>
          <type>const <ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>envelope</declname>
        </param>
        <briefdescription>
<para>Debugging function to dump the contents of an envelope to stdout. </para>        </briefdescription>
        <detaileddescription>
<para>Displays all fields from the envelope, plus the contents of the payload</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">envelope</parametername>
</parameternamelist>
<parameterdescription>
<para>envelope to dump </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wpan/wpan_aps.c" line="823" column="1" bodyfile="src/wpan/wpan_aps.c" bodystart="823" bodyend="841"/>
        <references refid="group__wpan__types_1ga448782f4aed0821758969b47221417ed" compoundref="wpan__types_8c" startline="77" endline="111">addr64_format</references>
        <references refid="group__wpan__types_1gac468b40b060897498f923923654c3d4a" compoundref="types_8h" startline="49">ADDR64_STRING_LENGTH</references>
        <references refid="group__util_1gaa321236a0cb6f4e0dad592fdf1b550d2" compoundref="hexdump_8c" startline="28" endline="91">hex_dump</references>
        <references refid="group__hal_1gaec79525addd1a70fda55b1ea11534832" compoundref="platform_8h" startline="547">HEX_DUMP_FLAG_OFFSET</references>
        <references refid="group__hal_1ga379022d2cd3136d8f3500c88658056b7" compoundref="platform_8h" startline="406">PRIsFAR</references>
      </memberdef>
      <memberdef kind="function" id="group__wpan__aps_1ga1254464011d2d98c13db7b0b3d41c25b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wpan_aps_debug int</type>
        <definition>int wpan_tick</definition>
        <argsstring>(wpan_dev_t *dev)</argsstring>
        <name>wpan_tick</name>
        <param>
          <type><ref refid="structwpan__dev__t" kindref="compound">wpan_dev_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
<para>Calls the underlying hardware tick function to process received frames, and times out expired conversations. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>WPAN device to tick</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>&gt;=0</parametername>
</parameternamelist>
<parameterdescription>
<para>number of frames processed during the tick </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>device does not have a <computeroutput>tick</computeroutput> function assigned to it </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>&lt;0</parametername>
</parameternamelist>
<parameterdescription>
<para>some other error encountered during the tick </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wpan/wpan_aps.c" line="860" column="1" bodyfile="src/wpan/wpan_aps.c" bodystart="860" bodyend="881"/>
        <references refid="group__wpan__aps_1gad55133545fcf6ebc2d630057abf5ad48" compoundref="wpan__aps_8c" startline="368" endline="400">_wpan_endpoint_expire_conversations</references>
        <references refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" compoundref="platform_8h" startline="95">EINVAL</references>
        <references refid="group__wpan__aps_1ga389966cb276b33004b14ee698c270347" compoundref="aps_8h" startline="264">wpan_endpoint_table_entry_t::ep_state</references>
        <references refid="group__wpan__aps_1gab472632c6a95d7856d1ea137441ec6a2" compoundref="aps_8h" startline="388">wpan_dev_t::tick</references>
        <references refid="group__wpan__aps_1gaca3b72047ea4e156ce9a977c13624b5c" compoundref="wpan__aps_8c" startline="105" endline="132">wpan_endpoint_get_next</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Base WPAN/ZigBee layer, responsible for endpoints and clusters. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2008-2012<sp/>Digi<sp/>International<sp/>Inc.,</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>not<sp/>expressly<sp/>granted<sp/>are<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>Source<sp/>Code<sp/>Form<sp/>is<sp/>subject<sp/>to<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>Mozilla<sp/>Public</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>License,<sp/>v.<sp/>2.0.<sp/>If<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>MPL<sp/>was<sp/>not<sp/>distributed<sp/>with<sp/>this<sp/>file,</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>You<sp/>can<sp/>obtain<sp/>one<sp/>at<sp/>http://mozilla.org/MPL/2.0/.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>Digi<sp/>International<sp/>Inc.<sp/>11001<sp/>Bren<sp/>Road<sp/>East,<sp/>Minnetonka,<sp/>MN<sp/>55343</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>=======================================================================</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="comment">/***<sp/>BeginHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="platform_8h" kindref="compound">xbee/platform.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>may<sp/>set<sp/>WPAN_APS_VERBOSE<sp/>macro</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="types_8h" kindref="compound">wpan/types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="aps_8h" kindref="compound">wpan/aps.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="zdo_8h" kindref="compound">zigbee/zdo.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="zcl_8h" kindref="compound">zigbee/zcl.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__DC__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>wpan_aps_debug</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>WPAN_APS_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>wpan_aps_debug<sp/><sp/><sp/><sp/><sp/>__debug</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>wpan_aps_debug<sp/><sp/><sp/><sp/><sp/>__nodebug</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>wpan_cluster_match<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight></codeline>
<codeline lineno="61"><highlight class="normal">wpan_aps_debug</highlight></codeline>
<codeline lineno="62" refid="group__wpan__aps_1ga1c725384b21faf5953683d7b028c7be3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwpan__cluster__table__entry__t" kindref="compound">wpan_cluster_table_entry_t</ref><sp/>*<ref refid="group__wpan__aps_1ga1c725384b21faf5953683d7b028c7be3" kindref="member">wpan_cluster_match</ref>(<sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/>match,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/>mask,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwpan__cluster__table__entry__t" kindref="compound">wpan_cluster_table_entry_t</ref><sp/>*entry)</highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>entry)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>entry-&gt;<ref refid="group__wpan__aps_1ga262a92f94287e77cb56350951893bae2" kindref="member">cluster_id</ref><sp/>!=<sp/><ref refid="group__wpan__aps_1gacbfdff1cef70167f178c4e05b69f65fe" kindref="member">WPAN_CLUSTER_END_OF_LIST</ref>)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(entry-&gt;<ref refid="group__wpan__aps_1ga262a92f94287e77cb56350951893bae2" kindref="member">cluster_id</ref><sp/>==<sp/>match<sp/>&amp;&amp;<sp/>(mask<sp/>&amp;<sp/>entry-&gt;<ref refid="group__wpan__aps_1gaa2585d779da0ab21273a8d92de9a0ebe" kindref="member">flags</ref>))</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>found<sp/>a<sp/>match</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>entry;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++entry;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>wpan_endpoint_get_next<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight></codeline>
<codeline lineno="104"><highlight class="normal">wpan_aps_debug</highlight></codeline>
<codeline lineno="105" refid="group__wpan__aps_1gaca3b72047ea4e156ce9a977c13624b5c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwpan__endpoint__table__entry__t" kindref="compound">wpan_endpoint_table_entry_t</ref><sp/>*<ref refid="group__wpan__aps_1gaca3b72047ea4e156ce9a977c13624b5c" kindref="member">wpan_endpoint_get_next</ref>(<sp/><ref refid="structwpan__dev__t" kindref="compound">wpan_dev_t</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwpan__endpoint__table__entry__t" kindref="compound">wpan_endpoint_table_entry_t</ref><sp/>*ep)</highlight></codeline>
<codeline lineno="107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dev<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>this<sp/>endpoint<sp/>has<sp/>a<sp/>custom<sp/>function<sp/>for<sp/>walking<sp/>the<sp/>endpoint<sp/>table,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>use<sp/>of<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dev-&gt;<ref refid="group__wpan__aps_1ga249b57f4a0559c0adb038f68d9b5c443" kindref="member">endpoint_get_next</ref>)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dev-&gt;<ref refid="group__wpan__aps_1ga249b57f4a0559c0adb038f68d9b5c443" kindref="member">endpoint_get_next</ref>(<sp/>dev,<sp/>ep);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ep<sp/>==<sp/>NULL)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>first<sp/>entry<sp/>in<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dev-&gt;<ref refid="group__wpan__aps_1gad7c834ea25a2f008caaf40ec08aa5a86" kindref="member">endpoint_table</ref>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/>++ep;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>advance<sp/>to<sp/>next<sp/>entry<sp/>in<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ep-&gt;<ref refid="group__wpan__aps_1ga7d397493728da2bca8d55b2d61c4ec5d" kindref="member">endpoint</ref><sp/>==<sp/><ref refid="group__wpan__aps_1ga0ca55f0e8039df7fba03c041e4cf5a79" kindref="member">WPAN_ENDPOINT_END_OF_LIST</ref>)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reached<sp/>end<sp/>of<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ep;</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>wpan_endpoint_match<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__XBEE_PLATFORM_HCS08</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#pragma<sp/>MESSAGE<sp/>DISABLE<sp/>C5909<sp/><sp/><sp/><sp/>//<sp/>Assignment<sp/>in<sp/>condition<sp/>is<sp/>OK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal">wpan_aps_debug</highlight></codeline>
<codeline lineno="160" refid="group__wpan__aps_1ga0a88c1b17d1f9a42a53668b14f15e205" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwpan__endpoint__table__entry__t" kindref="compound">wpan_endpoint_table_entry_t</ref><sp/>*<ref refid="group__wpan__aps_1ga0a88c1b17d1f9a42a53668b14f15e205" kindref="member">wpan_endpoint_match</ref>(<sp/><ref refid="structwpan__dev__t" kindref="compound">wpan_dev_t</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><ref refid="group__zdo_1ga7d397493728da2bca8d55b2d61c4ec5d" kindref="member">endpoint</ref>,<sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/>profile_id)</highlight></codeline>
<codeline lineno="162"><highlight class="normal">{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwpan__endpoint__table__entry__t" kindref="compound">wpan_endpoint_table_entry_t</ref><sp/>*ep;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1ga04dd5074964518403bf944f2b240a5f8" kindref="member">bool_t</ref><sp/>matchany;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wpan_endpoint_get_next<sp/>tests<sp/>for<sp/>NULL<sp/>dev</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/>matchany<sp/>=<sp/>(profile_id<sp/>==<sp/>WPAN_APS_PROFILE_ANY);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/>ep<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>(ep<sp/>=<sp/><ref refid="group__wpan__aps_1gaca3b72047ea4e156ce9a977c13624b5c" kindref="member">wpan_endpoint_get_next</ref>(<sp/>dev,<sp/>ep))<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(endpoint<sp/>==<sp/>ep-&gt;<ref refid="group__wpan__aps_1ga7d397493728da2bca8d55b2d61c4ec5d" kindref="member">endpoint</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(matchany<sp/>||<sp/>profile_id<sp/>==<sp/>ep-&gt;<ref refid="group__wpan__aps_1ga5ca7f19e5697de2baf0e2147a41a5792" kindref="member">profile_id</ref>))</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ep;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__XBEE_PLATFORM_HCS08</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#pragma<sp/>MESSAGE<sp/>DEFAULT<sp/>C5909<sp/><sp/><sp/><sp/>//<sp/>restore<sp/>C5909<sp/>(Assignment<sp/>in<sp/>condition)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>wpan_endpoint_of_envelope<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight></codeline>
<codeline lineno="202"><highlight class="normal">wpan_aps_debug</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwpan__endpoint__table__entry__t" kindref="compound">wpan_endpoint_table_entry_t</ref></highlight></codeline>
<codeline lineno="204" refid="group__wpan__aps_1gab448ec18a47178272336da5eacfa2290" refkind="member"><highlight class="normal">*<ref refid="group__wpan__aps_1gab448ec18a47178272336da5eacfa2290" kindref="member">wpan_endpoint_of_envelope</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref><sp/>*env)</highlight></codeline>
<codeline lineno="205"><highlight class="normal">{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(env<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__wpan__aps_1ga0a88c1b17d1f9a42a53668b14f15e205" kindref="member">wpan_endpoint_match</ref>(<sp/>env-&gt;<ref refid="group__wpan__aps_1ga7f9a38312b9025348d42a4ed0042ce37" kindref="member">dev</ref>,<sp/>env-&gt;<ref refid="group__wpan__aps_1ga9781a5a281ee97f7f67d8ebe2c4f54db" kindref="member">source_endpoint</ref>,<sp/>env-&gt;<ref refid="group__wpan__aps_1ga5ca7f19e5697de2baf0e2147a41a5792" kindref="member">profile_id</ref>);</highlight></codeline>
<codeline lineno="211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>wpan_endpoint_of_cluster<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__XBEE_PLATFORM_HCS08</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#pragma<sp/>MESSAGE<sp/>DISABLE<sp/>C5909<sp/><sp/><sp/><sp/>//<sp/>Assignment<sp/>in<sp/>condition<sp/>is<sp/>OK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal">wpan_aps_debug</highlight></codeline>
<codeline lineno="243" refid="group__wpan__aps_1ga2cc975231963e0eb75c449c11b1d95de" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwpan__endpoint__table__entry__t" kindref="compound">wpan_endpoint_table_entry_t</ref><sp/>*<ref refid="group__wpan__aps_1ga2cc975231963e0eb75c449c11b1d95de" kindref="member">wpan_endpoint_of_cluster</ref>(<sp/><ref refid="structwpan__dev__t" kindref="compound">wpan_dev_t</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/>profile_id,<sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/>cluster_id,<sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/>mask)</highlight></codeline>
<codeline lineno="245"><highlight class="normal">{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwpan__endpoint__table__entry__t" kindref="compound">wpan_endpoint_table_entry_t</ref><sp/>*ep;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1ga04dd5074964518403bf944f2b240a5f8" kindref="member">bool_t</ref><sp/>matchany;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wpan_endpoint_get_next<sp/>tests<sp/>for<sp/>NULL<sp/>dev</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/>matchany<sp/>=<sp/>(profile_id<sp/>==<sp/>WPAN_APS_PROFILE_ANY);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/>ep<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>(ep<sp/>=<sp/><ref refid="group__wpan__aps_1gaca3b72047ea4e156ce9a977c13624b5c" kindref="member">wpan_endpoint_get_next</ref>(<sp/>dev,<sp/>ep))<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((matchany<sp/>||<sp/>profile_id<sp/>==<sp/>ep-&gt;<ref refid="group__wpan__aps_1ga5ca7f19e5697de2baf0e2147a41a5792" kindref="member">profile_id</ref>)</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/><ref refid="group__wpan__aps_1ga1c725384b21faf5953683d7b028c7be3" kindref="member">wpan_cluster_match</ref>(<sp/>cluster_id,<sp/>mask,<sp/>ep-&gt;<ref refid="group__wpan__aps_1gac7944498524739a9becec626bf9bcb15" kindref="member">cluster_table</ref>))</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>WPAN_APS_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>ep<sp/>0x%02x<sp/>matched<sp/>profile<sp/>0x%04x,<sp/>cluster<sp/>0x%04x,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;mask<sp/>0x%02x\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ep-&gt;<ref refid="group__wpan__aps_1ga7d397493728da2bca8d55b2d61c4ec5d" kindref="member">endpoint</ref>,<sp/>profile_id,<sp/>cluster_id,<sp/>mask);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ep;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>WPAN_APS_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>no<sp/>match<sp/>for<sp/>profile<sp/>0x%04x,<sp/>cluster<sp/>0x%04x,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;mask<sp/>0x%02x\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>profile_id,<sp/>cluster_id,<sp/>mask);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="272"><highlight class="normal">}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__XBEE_PLATFORM_HCS08</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#pragma<sp/>MESSAGE<sp/>DEFAULT<sp/>C5909<sp/><sp/><sp/><sp/>//<sp/>restore<sp/>C5909<sp/>(Assignment<sp/>in<sp/>condition)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>wpan_conversation_register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight></codeline>
<codeline lineno="298"><highlight class="normal">wpan_aps_debug</highlight></codeline>
<codeline lineno="299" refid="group__wpan__aps_1gae5f88ed40bd334d963e261947b77b980" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__wpan__aps_1gae5f88ed40bd334d963e261947b77b980" kindref="member">wpan_conversation_register</ref>(<sp/><ref refid="structwpan__ep__state__t" kindref="compound">wpan_ep_state_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*state,</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__wpan__aps_1gabf0a6b85c9ff3ff9104c8b58c1436d72" kindref="member">wpan_response_fn</ref><sp/>handler,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*context,<sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/>timeout)</highlight></codeline>
<codeline lineno="301"><highlight class="normal">{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><ref refid="structwpan__conversation__t" kindref="compound">wpan_conversation_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*conversation;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/>uint_fast8_t<sp/>i;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>state)</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>handler)</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>caller<sp/>just<sp/>wants<sp/>the<sp/>next<sp/>transaction<sp/>ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>++state-&gt;last_transaction;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/>conversation<sp/>=<sp/>state-&gt;conversations;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/><ref refid="group__wpan__aps_1gae34b1efc8ba99add17fcd767852197d4" kindref="member">WPAN_MAX_CONVERSATIONS</ref>;<sp/>i;<sp/>++conversation,<sp/>--i)</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(conversation-&gt;handler<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cast<sp/>away<sp/>the<sp/>const<sp/>--<sp/>allow<sp/>const<sp/>and<sp/>non-const<sp/>in<sp/>conversation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conversation-&gt;context<sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)context;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conversation-&gt;handler<sp/>=<sp/>handler;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timeout<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeout<sp/>+=<sp/>(<ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref>)<sp/>xbee_seconds_timer();</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timeout<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>timeout<sp/>of<sp/>0<sp/>is<sp/>reserved<sp/>for<sp/>&quot;never&quot;,<sp/>so<sp/>add<sp/>an<sp/>extra<sp/>second</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeout<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conversation-&gt;timeout<sp/>=<sp/>timeout;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(conversation-&gt;transaction_id<sp/>=<sp/>++state-&gt;last_transaction);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__hal_1ga088abe8bad2df798edad3053d719b937" kindref="member">ENOSPC</ref>;</highlight></codeline>
<codeline lineno="339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>wpan_conversation_delete<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight></codeline>
<codeline lineno="348"><highlight class="normal">wpan_aps_debug</highlight></codeline>
<codeline lineno="349" refid="group__wpan__aps_1gad36c04a3f2741f52710ab7768d1fcda8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__wpan__aps_1gad36c04a3f2741f52710ab7768d1fcda8" kindref="member">wpan_conversation_delete</ref>(<sp/><ref refid="structwpan__conversation__t" kindref="compound">wpan_conversation_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*conversation)</highlight></codeline>
<codeline lineno="350"><highlight class="normal">{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(conversation<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_f_memset(<sp/>conversation,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*conversation);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal">}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>_wpan_endpoint_expire_conversations<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__wpan__aps_1gad55133545fcf6ebc2d630057abf5ad48" kindref="member">_wpan_endpoint_expire_conversations</ref>(<sp/><ref refid="structwpan__ep__state__t" kindref="compound">wpan_ep_state_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*state);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight></codeline>
<codeline lineno="367"><highlight class="normal">wpan_aps_debug</highlight></codeline>
<codeline lineno="368" refid="group__wpan__aps_1gad55133545fcf6ebc2d630057abf5ad48" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__wpan__aps_1gad55133545fcf6ebc2d630057abf5ad48" kindref="member">_wpan_endpoint_expire_conversations</ref>(<sp/><ref refid="structwpan__ep__state__t" kindref="compound">wpan_ep_state_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*state)</highlight></codeline>
<codeline lineno="369"><highlight class="normal">{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><ref refid="structwpan__conversation__t" kindref="compound">wpan_conversation_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*conversation;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/>uint_fast8_t<sp/>i;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/>now;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="380"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>Notes<sp/>regarding<sp/>timeout<sp/>calculation:<sp/><sp/>We<sp/>just<sp/>store<sp/>the<sp/>lower<sp/>16<sp/>bits<sp/>of</highlight></codeline>
<codeline lineno="381"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>xbee_seconds_timer()<sp/>value<sp/>of<sp/>when<sp/>we<sp/>should<sp/>timeout.<sp/><sp/>We<sp/>can<sp/>tell</highlight></codeline>
<codeline lineno="382"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>whether<sp/>we&apos;re<sp/>before<sp/>or<sp/>after<sp/>that<sp/>time<sp/>by<sp/>subtracting<sp/>the<sp/>target<sp/>time</highlight></codeline>
<codeline lineno="383"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>from<sp/>the<sp/>curent<sp/>time.<sp/><sp/>If<sp/>the<sp/>result<sp/>as<sp/>a<sp/>signed<sp/>integer<sp/>is<sp/>&gt;=<sp/>0,<sp/>we</highlight></codeline>
<codeline lineno="384"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>have<sp/>passed<sp/>the<sp/>selected<sp/>timeout<sp/>value.</highlight></codeline>
<codeline lineno="385"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/>now<sp/>=<sp/>(<ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref>)<sp/>xbee_seconds_timer();</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/>conversation<sp/>=<sp/>state-&gt;conversations;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/><ref refid="group__wpan__aps_1gae34b1efc8ba99add17fcd767852197d4" kindref="member">WPAN_MAX_CONVERSATIONS</ref>;<sp/>i;<sp/>++conversation,<sp/>--i)</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(conversation-&gt;handler<sp/>!=<sp/>NULL</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>conversation-&gt;timeout<sp/>!=<sp/>0</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(<ref refid="group__hal__dos_1ga2140805d08462d474b82ddc8d1c2f3e6" kindref="member">int16_t</ref>)(now<sp/>-<sp/>conversation-&gt;timeout)<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>send<sp/>timeout<sp/>to<sp/>conversation&apos;s<sp/>handler,<sp/>ignore<sp/>the<sp/>response</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conversation-&gt;handler(<sp/>conversation,<sp/>NULL);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wpan__aps_1gad36c04a3f2741f52710ab7768d1fcda8" kindref="member">wpan_conversation_delete</ref>(<sp/>conversation);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal">}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>wpan_conversation_response<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight></codeline>
<codeline lineno="426"><highlight class="normal">wpan_aps_debug</highlight></codeline>
<codeline lineno="427" refid="group__wpan__aps_1gaf56e4d0e52462b5cf41c5fa5f23ea952" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__wpan__aps_1gaf56e4d0e52462b5cf41c5fa5f23ea952" kindref="member">wpan_conversation_response</ref>(<sp/><ref refid="structwpan__ep__state__t" kindref="compound">wpan_ep_state_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*state,</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/>transaction_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*envelope)</highlight></codeline>
<codeline lineno="429"><highlight class="normal">{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><ref refid="structwpan__conversation__t" kindref="compound">wpan_conversation_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*conversation;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/>uint_fast8_t<sp/>i;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwpan__endpoint__table__entry__t" kindref="compound">wpan_endpoint_table_entry_t</ref><sp/>*ep;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(envelope<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ep<sp/>=<sp/><ref refid="group__wpan__aps_1ga0a88c1b17d1f9a42a53668b14f15e205" kindref="member">wpan_endpoint_match</ref>(<sp/>envelope-&gt;dev,<sp/>envelope-&gt;dest_endpoint,</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>envelope-&gt;profile_id);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ep<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/>ep-&gt;<ref refid="group__wpan__aps_1ga389966cb276b33004b14ee698c270347" kindref="member">ep_state</ref>;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/>conversation<sp/>=<sp/>state-&gt;conversations;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/><ref refid="group__wpan__aps_1gae34b1efc8ba99add17fcd767852197d4" kindref="member">WPAN_MAX_CONVERSATIONS</ref>;<sp/>i;<sp/>++conversation,<sp/>--i)</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(conversation-&gt;transaction_id<sp/>==<sp/>transaction_id)</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>WPAN_APS_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>matched<sp/>conversation<sp/>%u<sp/>(handler=%p)\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wpan__aps_1gae34b1efc8ba99add17fcd767852197d4" kindref="member">WPAN_MAX_CONVERSATIONS</ref><sp/>-<sp/>i,<sp/>conversation-&gt;handler);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(conversation-&gt;handler)</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/>conversation-&gt;handler(<sp/>conversation,<sp/>envelope);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retval<sp/>==<sp/>WPAN_CONVERSATION_END)</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wpan__aps_1gad36c04a3f2741f52710ab7768d1fcda8" kindref="member">wpan_conversation_delete</ref>(<sp/>conversation);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>WPAN_APS_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retval<sp/>!=<sp/>WPAN_CONVERSATION_CONTINUE)</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>invalid<sp/>reponse<sp/>%d<sp/>from<sp/>conversation<sp/>handler\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__,<sp/>retval);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(retval<sp/>&lt;<sp/>0)<sp/>?<sp/>retval<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal">}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>wpan_endpoint_next_trans<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight></codeline>
<codeline lineno="492"><highlight class="normal">wpan_aps_debug</highlight></codeline>
<codeline lineno="493" refid="group__wpan__aps_1gaab1c77ccbd237270f11499fb6411599c" refkind="member"><highlight class="normal"><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><ref refid="group__wpan__aps_1gaab1c77ccbd237270f11499fb6411599c" kindref="member">wpan_endpoint_next_trans</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwpan__endpoint__table__entry__t" kindref="compound">wpan_endpoint_table_entry_t</ref><sp/>*ep)</highlight></codeline>
<codeline lineno="494"><highlight class="normal">{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>ep<sp/>||<sp/>!<sp/>ep-&gt;<ref refid="group__wpan__aps_1ga389966cb276b33004b14ee698c270347" kindref="member">ep_state</ref>)</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>++(ep-&gt;<ref refid="group__wpan__aps_1ga389966cb276b33004b14ee698c270347" kindref="member">ep_state</ref>-&gt;last_transaction);</highlight></codeline>
<codeline lineno="500"><highlight class="normal">}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>wpan_envelope_dispatch<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight></codeline>
<codeline lineno="522"><highlight class="normal">wpan_aps_debug</highlight></codeline>
<codeline lineno="523" refid="group__wpan__aps_1gaea487a9cccf8d5a2c592324678f13b4b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__wpan__aps_1gaea487a9cccf8d5a2c592324678f13b4b" kindref="member">_wpan_endpoint_dispatch</ref>(<sp/><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref><sp/>*envelope,</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwpan__endpoint__table__entry__t" kindref="compound">wpan_endpoint_table_entry_t</ref><sp/>*ep)</highlight></codeline>
<codeline lineno="525"><highlight class="normal">{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwpan__cluster__table__entry__t" kindref="compound">wpan_cluster_table_entry_t</ref><sp/><sp/><sp/><sp/>*clust;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>WPAN_APS_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>found<sp/>entry<sp/>for<sp/>endpoint<sp/>0x%02x\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>envelope-&gt;<ref refid="group__wpan__aps_1ga0992896b3999455a300e8ba25c368ae8" kindref="member">dest_endpoint</ref>);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Match<sp/>either<sp/>an<sp/>input<sp/>or<sp/>an<sp/>output<sp/>cluster,<sp/>since<sp/>the<sp/>ZigBee<sp/>layer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>doesn&apos;t<sp/>contain<sp/>information<sp/>on<sp/>the<sp/>direction<sp/>of<sp/>the<sp/>frame.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/>clust<sp/>=<sp/><ref refid="group__wpan__aps_1ga1c725384b21faf5953683d7b028c7be3" kindref="member">wpan_cluster_match</ref>(<sp/>envelope-&gt;<ref refid="group__wpan__aps_1ga262a92f94287e77cb56350951893bae2" kindref="member">cluster_id</ref>,<sp/><ref refid="group__wpan__aps_1gaf1185ec162a18803e11a83491bf57d3d" kindref="member">WPAN_CLUST_FLAG_INOUT</ref>,</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ep-&gt;<ref refid="group__wpan__aps_1gac7944498524739a9becec626bf9bcb15" kindref="member">cluster_table</ref>);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clust)</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>ZCL<sp/>cluster<sp/>requires<sp/>encryption,<sp/>make<sp/>sure<sp/>frame<sp/>was<sp/>encrypted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(test<sp/>for<sp/>FLAG_ENCRYPT<sp/>set<sp/>and<sp/>FLAG_NOT_ZCL<sp/>not<sp/>set).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(envelope-&gt;options<sp/>&amp;<sp/><ref refid="group__wpan__aps_1ga3bf12c3b9fd0afac2c9f58de8e7c38e9" kindref="member">WPAN_ENVELOPE_RX_APS_ENCRYPT</ref>)</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>!(clust-&gt;<ref refid="group__wpan__aps_1gaa2585d779da0ab21273a8d92de9a0ebe" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="group__wpan__aps_1gacb0e365a8c5e72ee90be503513e7e630" kindref="member">WPAN_CLUST_FLAG_NOT_ZCL</ref>))</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>a<sp/>failure<sp/>response<sp/>if<sp/>we<sp/>require<sp/>encryption,<sp/>or<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>a<sp/>unicast<sp/>frame<sp/>and<sp/>we<sp/>only<sp/>accept<sp/>unencrypted<sp/>broadcasts.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((clust-&gt;<ref refid="group__wpan__aps_1gaa2585d779da0ab21273a8d92de9a0ebe" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="group__wpan__aps_1ga1eafd87038a2134da7a1f72e6801d23b" kindref="member">WPAN_CLUST_FLAG_ENCRYPT</ref>)</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>((clust-&gt;<ref refid="group__wpan__aps_1gaa2585d779da0ab21273a8d92de9a0ebe" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="group__wpan__aps_1ga1ccfd85378afaa02de5c3f9c71c17df4" kindref="member">WPAN_CLUST_FLAG_ENCRYPT_UNICAST</ref>)</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>!(envelope-&gt;options<sp/>&amp;<sp/><ref refid="group__wpan__aps_1ga92a0f27267b04aa691e184b428e8f7c6" kindref="member">WPAN_ENVELOPE_BROADCAST_ADDR</ref>)))</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>WPAN_APS_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>sending<sp/>FAILURE<sp/>for<sp/>unencrypted<sp/>APS<sp/>frame\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>send<sp/>failure,<sp/>we<sp/>don&apos;t<sp/>accept<sp/>unencrypted<sp/>broadcast<sp/>frames</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__zcl_1ga23e4657d006b8b39ac54f0ee61786910" kindref="member">zcl_invalid_cluster</ref>(<sp/>envelope,<sp/>NULL);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>envelope-&gt;options<sp/>|=<sp/>clust-&gt;<ref refid="group__wpan__aps_1gaa2585d779da0ab21273a8d92de9a0ebe" kindref="member">flags</ref>;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>clust-&gt;<ref refid="group__wpan__aps_1gab0c5e32241c4c2860c728aeab4b6f253" kindref="member">handler</ref>)</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>WPAN_APS_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>cluster<sp/>0x%04x<sp/>has<sp/>null<sp/>handler\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__,<sp/>envelope-&gt;<ref refid="group__wpan__aps_1ga262a92f94287e77cb56350951893bae2" kindref="member">cluster_id</ref>);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>WPAN_APS_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>calling<sp/>handler<sp/>for<sp/>cluster<sp/>0x%04x\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__,<sp/>envelope-&gt;<ref refid="group__wpan__aps_1ga262a92f94287e77cb56350951893bae2" kindref="member">cluster_id</ref>);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>we<sp/>cast<sp/>away<sp/>const<sp/>when<sp/>selecting<sp/>the<sp/>context<sp/>to<sp/>pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>the<sp/>cluster<sp/>handler<sp/>and<sp/>assume<sp/>that<sp/>the<sp/>main<sp/>program<sp/>has<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>up<sp/>its<sp/>cluster<sp/>table<sp/>correctly<sp/>(and<sp/>knows<sp/>whether<sp/>its<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pointer<sp/>should<sp/>be<sp/>treated<sp/>as<sp/>const<sp/>or<sp/>not).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>clust-&gt;<ref refid="group__wpan__aps_1gab0c5e32241c4c2860c728aeab4b6f253" kindref="member">handler</ref>(<sp/>envelope,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)<sp/>clust-&gt;<ref refid="group__wpan__aps_1gad58378484a15ab673f5eb1613114330e" kindref="member">context</ref>);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>don&apos;t<sp/>have<sp/>that<sp/>cluster<sp/>(or<sp/>the<sp/>cluster<sp/>doesn&apos;t<sp/>have<sp/>a<sp/>handler)<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>the<sp/>endpoint&apos;s<sp/>handler.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ep-&gt;<ref refid="group__wpan__aps_1ga4835da0b636ce07eedbf92aa2779a761" kindref="member">handler</ref>)</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>WPAN_APS_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>no<sp/>entry<sp/>for<sp/>cluster<sp/>0x%04x,<sp/>use<sp/>default<sp/>handler\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__,<sp/>envelope-&gt;<ref refid="group__wpan__aps_1ga262a92f94287e77cb56350951893bae2" kindref="member">cluster_id</ref>);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ep-&gt;<ref refid="group__wpan__aps_1ga4835da0b636ce07eedbf92aa2779a761" kindref="member">handler</ref>(<sp/>envelope,<sp/>ep-&gt;<ref refid="group__wpan__aps_1ga389966cb276b33004b14ee698c270347" kindref="member">ep_state</ref>);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>WPAN_APS_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>no<sp/>handler<sp/>for<sp/>0x%02x/0x%04x,<sp/>ignoring<sp/>frame\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__,<sp/>envelope-&gt;<ref refid="group__wpan__aps_1ga0992896b3999455a300e8ba25c368ae8" kindref="member">dest_endpoint</ref>,<sp/>envelope-&gt;<ref refid="group__wpan__aps_1ga262a92f94287e77cb56350951893bae2" kindref="member">cluster_id</ref>);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__hal_1ga03e689f378f643d16ea7537918528a48" kindref="member">ENOENT</ref>;</highlight></codeline>
<codeline lineno="598"><highlight class="normal">}</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="preprocessor">#ifdef<sp/>__XBEE_PLATFORM_HCS08</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#pragma<sp/>MESSAGE<sp/>DISABLE<sp/>C5909<sp/><sp/><sp/><sp/>//<sp/>Assignment<sp/>in<sp/>condition<sp/>is<sp/>OK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal">wpan_aps_debug</highlight></codeline>
<codeline lineno="622" refid="group__wpan__aps_1gae84eafd10f51de6cdac4732b8948606d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__wpan__aps_1gae84eafd10f51de6cdac4732b8948606d" kindref="member">wpan_envelope_dispatch</ref>(<sp/><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref><sp/>*envelope)</highlight></codeline>
<codeline lineno="623"><highlight class="normal">{</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwpan__endpoint__table__entry__t" kindref="compound">wpan_endpoint_table_entry_t</ref><sp/><sp/><sp/>*ep;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/>uint_fast8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match_ep;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/>-<ref refid="group__hal_1ga03e689f378f643d16ea7537918528a48" kindref="member">ENOENT</ref>;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>WPAN_APS_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>RX<sp/>&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wpan__aps_1ga2a4e8b3e2022e55e6607243a5feb25cd" kindref="member">wpan_envelope_dump</ref>(<sp/>envelope);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>matching<sp/>endpoints</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/>match_ep<sp/>=<sp/>envelope-&gt;<ref refid="group__wpan__aps_1ga0992896b3999455a300e8ba25c368ae8" kindref="member">dest_endpoint</ref>;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(match_ep<sp/>==<sp/><ref refid="group__wpan__aps_1ga1a2c2bd5eb7dcb276d89e7f7e9d66d32" kindref="member">WPAN_ENDPOINT_BROADCAST</ref>)</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>broadcast<sp/>endpoint,<sp/>dispatch<sp/>to<sp/>all<sp/>endpoints<sp/>on<sp/>device<sp/>matching</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>given<sp/>profile<sp/>ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>envelope-&gt;options<sp/>|=<sp/><ref refid="group__wpan__aps_1ga9572c340b083c6a51b0473fee184ea2c" kindref="member">WPAN_ENVELOPE_BROADCAST_EP</ref>;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ep<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assignment<sp/>in<sp/>next<sp/>line<sp/>is<sp/>intentional<sp/>(Warning<sp/>C5909)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>(ep<sp/>=<sp/><ref refid="group__wpan__aps_1gaca3b72047ea4e156ce9a977c13624b5c" kindref="member">wpan_endpoint_get_next</ref>(<sp/>envelope-&gt;<ref refid="group__wpan__aps_1ga7f9a38312b9025348d42a4ed0042ce37" kindref="member">dev</ref>,<sp/>ep))<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(envelope-&gt;<ref refid="group__wpan__aps_1ga5ca7f19e5697de2baf0e2147a41a5792" kindref="member">profile_id</ref><sp/>==<sp/>ep-&gt;<ref refid="group__wpan__aps_1ga5ca7f19e5697de2baf0e2147a41a5792" kindref="member">profile_id</ref>)</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>endpoint<sp/>to<sp/>match<sp/>endpoint<sp/>we&apos;re<sp/>dispatching<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>envelope-&gt;<ref refid="group__wpan__aps_1ga0992896b3999455a300e8ba25c368ae8" kindref="member">dest_endpoint</ref><sp/>=<sp/>ep-&gt;<ref refid="group__wpan__aps_1ga7d397493728da2bca8d55b2d61c4ec5d" kindref="member">endpoint</ref>;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>cluster<sp/>flags<sp/>possibly<sp/>set<sp/>by<sp/>previous<sp/>call<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>_wpan_endpoint_dispatch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>envelope-&gt;options<sp/>&amp;=<sp/>~<ref refid="group__wpan__aps_1ga6a6e8a32dc7117f44bdca2802a1e54aa" kindref="member">WPAN_ENVELOPE_CLUSTER_FLAGS</ref>;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__wpan__aps_1gaea487a9cccf8d5a2c592324678f13b4b" kindref="member">_wpan_endpoint_dispatch</ref>(<sp/>envelope,<sp/>ep)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/>0;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dispatched<sp/>to<sp/>at<sp/>least<sp/>one<sp/>endpoint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/>ep<sp/>=<sp/><ref refid="group__wpan__aps_1ga0a88c1b17d1f9a42a53668b14f15e205" kindref="member">wpan_endpoint_match</ref>(<sp/>envelope-&gt;<ref refid="group__wpan__aps_1ga7f9a38312b9025348d42a4ed0042ce37" kindref="member">dev</ref>,<sp/>match_ep,<sp/>envelope-&gt;<ref refid="group__wpan__aps_1ga5ca7f19e5697de2baf0e2147a41a5792" kindref="member">profile_id</ref>);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ep<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__wpan__aps_1gaea487a9cccf8d5a2c592324678f13b4b" kindref="member">_wpan_endpoint_dispatch</ref>(<sp/>envelope,<sp/>ep);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>WPAN_APS_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>no<sp/>entry<sp/>for<sp/>ep<sp/>0x%02x<sp/>profile<sp/>0x%04x,<sp/>ignoring<sp/>frame\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__,<sp/>match_ep,<sp/>envelope-&gt;<ref refid="group__wpan__aps_1ga5ca7f19e5697de2baf0e2147a41a5792" kindref="member">profile_id</ref>);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="676"><highlight class="normal">}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__XBEE_PLATFORM_HCS08</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#pragma<sp/>MESSAGE<sp/>DEFAULT<sp/>C5909<sp/><sp/><sp/><sp/>//<sp/>restore<sp/>C5909<sp/>(Assignment<sp/>in<sp/>condition)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>wpan_envelope_create<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight></codeline>
<codeline lineno="711"><highlight class="normal">wpan_aps_debug</highlight></codeline>
<codeline lineno="712" refid="group__wpan__aps_1ga95e2bb4e4c546191c059f54179064fc3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__wpan__aps_1ga95e2bb4e4c546191c059f54179064fc3" kindref="member">wpan_envelope_create</ref>(<sp/><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref><sp/>*envelope,<sp/><ref refid="structwpan__dev__t" kindref="compound">wpan_dev_t</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unionaddr64" kindref="compound">addr64</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*ieee,<sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/>network_addr)</highlight></codeline>
<codeline lineno="714"><highlight class="normal">{</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(envelope<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memset(<sp/>envelope,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(*envelope));</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>envelope-&gt;<ref refid="group__wpan__aps_1ga7f9a38312b9025348d42a4ed0042ce37" kindref="member">dev</ref><sp/>=<sp/>dev;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>envelope-&gt;<ref refid="group__wpan__aps_1ga2549f921e25a72dfa05a2154a792e2bf" kindref="member">ieee_address</ref><sp/>=<sp/>*ieee;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>envelope-&gt;<ref refid="group__wpan__aps_1ga30948a7f8d096191895f50b80d81ca12" kindref="member">network_address</ref><sp/>=<sp/>network_addr;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="723"><highlight class="normal">}</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>wpan_envelope_reply<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight></codeline>
<codeline lineno="751"><highlight class="normal">wpan_aps_debug</highlight></codeline>
<codeline lineno="752" refid="group__wpan__aps_1gaaaee02ff456d4f6103a5e94c2ba106c5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__wpan__aps_1gaaaee02ff456d4f6103a5e94c2ba106c5" kindref="member">wpan_envelope_reply</ref>(<sp/><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*reply,</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*original)</highlight></codeline>
<codeline lineno="754"><highlight class="normal">{</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>(reply<sp/>&amp;&amp;<sp/>original)<sp/>||<sp/>original<sp/>==<sp/>reply)</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>dev,<sp/>ieee_address,<sp/>network_address,<sp/>profile_id,<sp/>and<sp/>cluster_id.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/>_f_memcpy(<sp/>reply,<sp/>original,<sp/>offsetof(<sp/><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref>,<sp/>source_endpoint));</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>swap<sp/>source<sp/>and<sp/>destination<sp/>endpoints</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/>reply-&gt;source_endpoint<sp/>=<sp/>original-&gt;dest_endpoint;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/>reply-&gt;dest_endpoint<sp/>=<sp/>original-&gt;source_endpoint;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>APS<sp/>encryption<sp/>if<sp/>replying<sp/>to<sp/>an<sp/>encrypted<sp/>frame.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/>reply-&gt;options<sp/>=<sp/>(original-&gt;options<sp/>&amp;<sp/><ref refid="group__wpan__aps_1ga3bf12c3b9fd0afac2c9f58de8e7c38e9" kindref="member">WPAN_ENVELOPE_RX_APS_ENCRYPT</ref>)</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/><ref refid="group__wpan__aps_1ga1eafd87038a2134da7a1f72e6801d23b" kindref="member">WPAN_CLUST_FLAG_ENCRYPT</ref><sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>payload</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/>reply-&gt;payload<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/>reply-&gt;length<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="776"><highlight class="normal">}</highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>wpan_envelope_send<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight></codeline>
<codeline lineno="789"><highlight class="normal">wpan_aps_debug</highlight></codeline>
<codeline lineno="790" refid="group__wpan__aps_1ga06f1e9e86b74ef807ded44b79b13e283" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__wpan__aps_1ga06f1e9e86b74ef807ded44b79b13e283" kindref="member">wpan_envelope_send</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*envelope)</highlight></codeline>
<codeline lineno="791"><highlight class="normal">{</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(envelope<sp/>==<sp/>NULL</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>envelope-&gt;dev<sp/>==<sp/>NULL</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>envelope-&gt;dev-&gt;endpoint_send<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>WPAN_APS_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>return<sp/>-EINVAL;<sp/>NULL<sp/>envelope-&gt;dev-&gt;send\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__);</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>WPAN_APS_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>TX<sp/>&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__);</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wpan__aps_1ga2a4e8b3e2022e55e6607243a5feb25cd" kindref="member">wpan_envelope_dump</ref>(<sp/>envelope);</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>envelope-&gt;dev-&gt;endpoint_send(<sp/>envelope,</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(envelope-&gt;options<sp/>&amp;<sp/><ref refid="group__wpan__aps_1ga1eafd87038a2134da7a1f72e6801d23b" kindref="member">WPAN_CLUST_FLAG_ENCRYPT</ref>)</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>WPAN_SEND_FLAG_ENCRYPTED<sp/>:<sp/>WPAN_SEND_FLAG_NONE<sp/>);</highlight></codeline>
<codeline lineno="810"><highlight class="normal">}</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>wpan_envelope_dump<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight></codeline>
<codeline lineno="822"><highlight class="normal">wpan_aps_debug</highlight></codeline>
<codeline lineno="823" refid="group__wpan__aps_1ga2a4e8b3e2022e55e6607243a5feb25cd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__wpan__aps_1ga2a4e8b3e2022e55e6607243a5feb25cd" kindref="member">wpan_envelope_dump</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*envelope)</highlight></codeline>
<codeline lineno="824"><highlight class="normal">{</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>addr[<ref refid="group__wpan__types_1gac468b40b060897498f923923654c3d4a" kindref="member">ADDR64_STRING_LENGTH</ref>];</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(envelope<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;NULL<sp/>envelope\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;ep<sp/>%u-&gt;%u,<sp/>profile<sp/>0x%04x,<sp/>clust<sp/>0x%04x\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>envelope-&gt;source_endpoint,<sp/>envelope-&gt;dest_endpoint,</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>envelope-&gt;profile_id,<sp/>envelope-&gt;cluster_id);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;remote<sp/>%&quot;</highlight><highlight class="normal"><sp/><ref refid="group__hal_1ga379022d2cd3136d8f3500c88658056b7" kindref="member">PRIsFAR</ref><sp/></highlight><highlight class="stringliteral">&quot;<sp/>(0x%04x),<sp/>options=0x%04x,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%u-byte<sp/>payload:\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__wpan__types_1ga448782f4aed0821758969b47221417ed" kindref="member">addr64_format</ref>(<sp/>addr,<sp/>&amp;envelope-&gt;ieee_address),</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>envelope-&gt;network_address,<sp/>envelope-&gt;options,<sp/>envelope-&gt;length);</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__util_1gaa321236a0cb6f4e0dad592fdf1b550d2" kindref="member">hex_dump</ref>(<sp/>envelope-&gt;payload,<sp/>envelope-&gt;length,<sp/><ref refid="group__hal_1gaec79525addd1a70fda55b1ea11534832" kindref="member">HEX_DUMP_FLAG_OFFSET</ref>);</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="841"><highlight class="normal">}</highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>wpan_tick<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight></codeline>
<codeline lineno="856"><highlight class="preprocessor">#ifdef<sp/>__XBEE_PLATFORM_HCS08</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#pragma<sp/>MESSAGE<sp/>DISABLE<sp/>C5909<sp/><sp/><sp/><sp/>//<sp/>Assignment<sp/>in<sp/>condition<sp/>is<sp/>OK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal">wpan_aps_debug</highlight></codeline>
<codeline lineno="860" refid="group__wpan__aps_1ga1254464011d2d98c13db7b0b3d41c25b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__wpan__aps_1ga1254464011d2d98c13db7b0b3d41c25b" kindref="member">wpan_tick</ref>(<sp/><ref refid="structwpan__dev__t" kindref="compound">wpan_dev_t</ref><sp/>*dev)</highlight></codeline>
<codeline lineno="861"><highlight class="normal">{</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwpan__endpoint__table__entry__t" kindref="compound">wpan_endpoint_table_entry_t</ref><sp/>*ep;</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>retval<sp/>=<sp/>-<ref refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>;</highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dev<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dev-&gt;<ref refid="group__wpan__aps_1gab472632c6a95d7856d1ea137441ec6a2" kindref="member">tick</ref>)</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/>dev-&gt;<ref refid="group__wpan__aps_1gab472632c6a95d7856d1ea137441ec6a2" kindref="member">tick</ref>(<sp/>dev);</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>walk<sp/>endpoint<sp/>table,<sp/>expiring<sp/>each<sp/>endpoint&apos;s<sp/>conversations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ep<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>(ep<sp/>=<sp/><ref refid="group__wpan__aps_1gaca3b72047ea4e156ce9a977c13624b5c" kindref="member">wpan_endpoint_get_next</ref>(<sp/>dev,<sp/>ep))<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wpan__aps_1gad55133545fcf6ebc2d630057abf5ad48" kindref="member">_wpan_endpoint_expire_conversations</ref>(<sp/>ep-&gt;<ref refid="group__wpan__aps_1ga389966cb276b33004b14ee698c270347" kindref="member">ep_state</ref>);</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="881"><highlight class="normal">}</highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__XBEE_PLATFORM_HCS08</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#pragma<sp/>MESSAGE<sp/>DEFAULT<sp/>C5909<sp/><sp/><sp/><sp/>//<sp/>restore<sp/>C5909<sp/>(Assignment<sp/>in<sp/>condition)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="src/wpan/wpan_aps.c"/>
  </compounddef>
</doxygen>
