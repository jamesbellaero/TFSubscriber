<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="zcl__commissioning_8c" kind="file" language="C++">
    <compoundname>zcl_commissioning.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes refid="zcl__commissioning_8h" local="yes">zigbee/zcl_commissioning.h</includes>
    <includes local="no">stdlib.h</includes>
    <incdepgraph>
      <node id="1612">
        <label>src/zigbee/zcl_commissioning.c</label>
        <link refid="zcl__commissioning_8c"/>
        <childnode refid="1613" relation="include">
        </childnode>
        <childnode refid="1614" relation="include">
        </childnode>
        <childnode refid="1627" relation="include">
        </childnode>
      </node>
      <node id="1627">
        <label>stdlib.h</label>
      </node>
      <node id="1616">
        <label>errno.h</label>
      </node>
      <node id="1618">
        <label>xbee/jslong_glue.h</label>
        <link refid="jslong__glue_8h_source"/>
        <childnode refid="1619" relation="include">
        </childnode>
      </node>
      <node id="1617">
        <label>stddef.h</label>
      </node>
      <node id="1622">
        <label>wpan/aps.h</label>
        <link refid="aps_8h"/>
        <childnode refid="1620" relation="include">
        </childnode>
      </node>
      <node id="1624">
        <label>xbee/byteorder.h</label>
        <link refid="byteorder_8h"/>
        <childnode refid="1625" relation="include">
        </childnode>
        <childnode refid="1615" relation="include">
        </childnode>
      </node>
      <node id="1621">
        <label>zigbee/zcl.h</label>
        <link refid="zcl_8h"/>
        <childnode refid="1615" relation="include">
        </childnode>
        <childnode refid="1622" relation="include">
        </childnode>
        <childnode refid="1623" relation="include">
        </childnode>
      </node>
      <node id="1614">
        <label>zigbee/zcl_commissioning.h</label>
        <link refid="zcl__commissioning_8h"/>
        <childnode refid="1615" relation="include">
        </childnode>
        <childnode refid="1620" relation="include">
        </childnode>
        <childnode refid="1621" relation="include">
        </childnode>
        <childnode refid="1623" relation="include">
        </childnode>
      </node>
      <node id="1625">
        <label>string.h</label>
      </node>
      <node id="1620">
        <label>wpan/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="1615" relation="include">
        </childnode>
      </node>
      <node id="1615">
        <label>xbee/platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="1616" relation="include">
        </childnode>
        <childnode refid="1617" relation="include">
        </childnode>
        <childnode refid="1618" relation="include">
        </childnode>
      </node>
      <node id="1623">
        <label>zigbee/zcl_types.h</label>
        <link refid="zcl__types_8h"/>
        <childnode refid="1615" relation="include">
        </childnode>
        <childnode refid="1624" relation="include">
        </childnode>
        <childnode refid="1626" relation="include">
        </childnode>
      </node>
      <node id="1626">
        <label>zigbee/zcl64.h</label>
        <link refid="zcl64_8h"/>
        <childnode refid="1615" relation="include">
        </childnode>
      </node>
      <node id="1619">
        <label>xbee/jslong.h</label>
        <link refid="jslong_8h_source"/>
      </node>
      <node id="1613">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group__zcl__commissioning_1gaf8ec8c74f3638336b9a1a23e2b88a7ba" prot="public" static="no" mutable="no">
        <type>const <ref refid="group__zcl__64_1ga2e906cb47fc172ae60da5178075dd3c7" kindref="member">zcl64_t</ref></type>
        <definition>const zcl64_t zcl_comm_global_epid</definition>
        <argsstring></argsstring>
        <name>zcl_comm_global_epid</name>
        <initializer>= ZCL_COMM_GLOBAL_EPID</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zcl_commissioning.c" line="36" column="1" bodyfile="src/zigbee/zcl_commissioning.c" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__zcl__commissioning_1ga19d5f58d61bf7ad0d29386bc11aa48ae" prot="public" static="no" mutable="no">
        <type><ref refid="structzcl__comm__state__t" kindref="compound">zcl_comm_state_t</ref></type>
        <definition>zcl_comm_state_t zcl_comm_state</definition>
        <argsstring></argsstring>
        <name>zcl_comm_state</name>
        <initializer>= { { 0 } }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zcl_commissioning.c" line="40" column="1" bodyfile="src/zigbee/zcl_commissioning.c" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__zcl__commissioning_1gaa88e1b649cac11f8c31f63305ad3ca2d" prot="public" static="no" mutable="no">
        <type>const <ref refid="structzcl__comm__startup__attr__t" kindref="compound">zcl_comm_startup_attr_t</ref></type>
        <definition>const zcl_comm_startup_attr_t zcl_comm_startup_attributes</definition>
        <argsstring></argsstring>
        <name>zcl_comm_startup_attributes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zcl_commissioning.c" line="111" column="1" bodyfile="src/zigbee/zcl_commissioning.c" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__zcl__commissioning_1ga730f27745b94d4b42586f78b880ee65f" prot="public" static="no" mutable="no">
        <type>const <ref refid="structzcl__attribute__tree__t" kindref="compound">zcl_attribute_tree_t</ref></type>
        <definition>const zcl_attribute_tree_t zcl_comm_startup_attribute_tree[]</definition>
        <argsstring>[]</argsstring>
        <name>zcl_comm_startup_attribute_tree</name>
        <initializer>=
		{ { ZCL_MFG_NONE, &amp;zcl_comm_startup_attributes.short_address, NULL } }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zcl_commissioning.c" line="256" column="1" bodyfile="src/zigbee/zcl_commissioning.c" bodystart="256" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__zcl__commissioning_1gae3180284d1a5a9af2176173a58cc1f4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _zcl_comm_startup_control_set</definition>
        <argsstring>(const zcl_attribute_full_t FAR *attribute, zcl_attribute_write_rec_t *rec)</argsstring>
        <name>_zcl_comm_startup_control_set</name>
        <param>
          <type>const <ref refid="structzcl__attribute__full__t" kindref="compound">zcl_attribute_full_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>attribute</declname>
        </param>
        <param>
          <type><ref refid="structzcl__attribute__write__rec__t" kindref="compound">zcl_attribute_write_rec_t</ref> *</type>
          <declname>rec</declname>
        </param>
        <briefdescription>
<para>Limit values of startup_control based on firmware type (e.g., some firmwares can&apos;t be ZCL_COMM_STARTUP_COORDINATOR). </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">attribute</parametername>
</parameternamelist>
<parameterdescription>
<para>should be a pointer to zcl_comm_startup_attributes.startup_control </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">rec</parametername>
</parameternamelist>
<parameterdescription>
<para>value from write request</para></parameterdescription>
</parameteritem>
</parameterlist>
See <ref refid="group__zcl_1ga70fa1740c517a1e49c700cba7cf6b339" kindref="member">zcl_attribute_write_fn()</ref> for calling convention. </para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zcl_commissioning.c" line="56" column="1" bodyfile="src/zigbee/zcl_commissioning.c" bodystart="56" bodyend="104"/>
        <references refid="group__xbee__atcmd_1ga5bf2410fa8ec37f47f8afeba8dcc7f1b" compoundref="atcmd_8h" startline="360">value</references>
      </memberdef>
      <memberdef kind="function" id="group__zcl__commissioning_1ga57f9aaf3da6dc9b513f7f9ccbb473a0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int zcl_comm_response</definition>
        <argsstring>(const wpan_envelope_t FAR *envelope, uint_fast8_t status)</argsstring>
        <name>zcl_comm_response</name>
        <param>
          <type>const <ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>envelope</declname>
        </param>
        <param>
          <type>uint_fast8_t</type>
          <declname>status</declname>
        </param>
        <briefdescription>
<para>Send response to a Commissioning Server Cluster request. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zcl_commissioning.c" line="265" column="1" bodyfile="src/zigbee/zcl_commissioning.c" bodystart="265" bodyend="295"/>
        <references refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" compoundref="platform_8h" startline="370">FAR</references>
        <references refid="group___s_x_a_1ga4233297bd31be5c273d4fb0758cc54d7" compoundref="sxa_8h" startline="70">PACKED_STRUCT</references>
        <references refid="group__xbee__atcmd_1gade818037fd6c985038ff29656089758d" compoundref="atcmd_8h" startline="328">status</references>
        <references refid="group__wpan__aps_1gaaaee02ff456d4f6103a5e94c2ba106c5" compoundref="wpan__aps_8c" startline="752" endline="776">wpan_envelope_reply</references>
        <references refid="group__zcl_1gac173779e7c48817dbd79042d7a189524" compoundref="zcl_8h" startline="233">ZCL_FRAME_SERVER_TO_CLIENT</references>
        <references refid="group__zcl_1ga080b9f73f48767fc6af9b5da27d30d70" compoundref="zcl_8h" startline="236">ZCL_FRAME_DISABLE_DEF_RESP</references>
        <references refid="group__zcl_1ga75efeedff171558e183dbf8d646ea5dd" compoundref="zcl_8h" startline="219">ZCL_FRAME_TYPE_CLUSTER</references>
        <references refid="group__wpan__aps_1ga8737375e27cb391ff381fff10dc0c132" compoundref="aps_8h" startline="61">wpan_envelope_t::payload</references>
        <references refid="group__wpan__aps_1ga1892eba2086d12ac2b09005aeb09ea3b" compoundref="aps_8h" startline="62">wpan_envelope_t::length</references>
        <references refid="group__wpan__aps_1ga06f1e9e86b74ef807ded44b79b13e283" compoundref="wpan__aps_8c" startline="790" endline="810">wpan_envelope_send</references>
        <references refid="group__zcl__commissioning_1ga0eeed24c2ca26aa030876addc4caf67d" compoundref="zcl__commissioning_8c" startline="311" endline="359">_zcl_comm_command_build</references>
      </memberdef>
      <memberdef kind="function" id="group__zcl__commissioning_1ga0eeed24c2ca26aa030876addc4caf67d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _zcl_comm_command_build</definition>
        <argsstring>(wpan_envelope_t FAR *envelope, zcl_header_nomfg_t *header)</argsstring>
        <name>_zcl_comm_command_build</name>
        <param>
          <type><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>envelope</declname>
        </param>
        <param>
          <type><ref refid="group__zcl_1gae988eb59c8a2e75b6cb34aefeca315d1" kindref="member">zcl_header_nomfg_t</ref> *</type>
          <declname>header</declname>
        </param>
        <briefdescription>
<para>Common function used by zcl_comm_restart_device and zcl_comm_reset_parameters. </para>        </briefdescription>
        <detaileddescription>
<internal><para>Fills in frame_control and sequence of header. Fills in cluster_id and payload of envelope. Fills in source_endpoint and profile_id of envelope if necessary.</para><para>Caller needs to fill in envelope-&gt;length and header-&gt;command </para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zcl_commissioning.c" line="298" column="1" bodyfile="src/zigbee/zcl_commissioning.c" bodystart="311" bodyend="359"/>
        <referencedby refid="group__zcl__commissioning_1ga3d73d7ef453da4940c923d7d7663f8d9" compoundref="zcl__commissioning_8c" startline="464" endline="493">zcl_comm_reset_parameters</referencedby>
        <referencedby refid="group__zcl__commissioning_1ga57f9aaf3da6dc9b513f7f9ccbb473a0b" compoundref="zcl__commissioning_8c" startline="265" endline="295">zcl_comm_response</referencedby>
        <referencedby refid="group__zcl__commissioning_1ga891e67720dee8334b805756597a62607" compoundref="zcl__commissioning_8c" startline="409" endline="437">zcl_comm_restart_device</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__zcl__commissioning_1gab653d2ac290d96d3131c894f7330fbb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _zcl_comm_command_send</definition>
        <argsstring>(wpan_envelope_t FAR *envelope)</argsstring>
        <name>_zcl_comm_command_send</name>
        <param>
          <type><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>envelope</declname>
        </param>
        <briefdescription>
<para>Common function used by zcl_comm_restart_device and zcl_comm_reset_parameters. </para>        </briefdescription>
        <detaileddescription>
<internal><para>sends the envelope and then resets the payload and length before returning </para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zcl_commissioning.c" line="362" column="1" bodyfile="src/zigbee/zcl_commissioning.c" bodystart="370" bodyend="381"/>
        <references refid="group__wpan__aps_1ga06f1e9e86b74ef807ded44b79b13e283" compoundref="wpan__aps_8c" startline="790" endline="810">wpan_envelope_send</references>
      </memberdef>
      <memberdef kind="function" id="group__zcl__commissioning_1ga891e67720dee8334b805756597a62607" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int zcl_comm_restart_device</definition>
        <argsstring>(wpan_envelope_t FAR *envelope, const zcl_comm_restart_device_cmd_t *parameters)</argsstring>
        <name>zcl_comm_restart_device</name>
        <param>
          <type><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>envelope</declname>
        </param>
        <param>
          <type>const zcl_comm_restart_device_cmd_t *</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
<para>Send a &quot;Restart Device&quot; command to the ZCL Commissioning Cluster. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">envelope</parametername>
</parameternamelist>
<parameterdescription>
<para>Partial envelope used to send the request. Caller must set <computeroutput>dev</computeroutput>, <computeroutput>ieee_address</computeroutput>, <computeroutput>network_address</computeroutput>, <computeroutput>profile_id</computeroutput>, <computeroutput>source_endpoint</computeroutput>, <computeroutput>dest_endpoint</computeroutput> and (optionally) <computeroutput>options</computeroutput>. On return, <computeroutput>payload</computeroutput> and <computeroutput>length</computeroutput> are cleared, and <computeroutput>cluster_id</computeroutput> is set to ZCL_CLUST_COMMISSIONING.</para></parameterdescription>
</parameteritem>
</parameterlist>
If <computeroutput>source_endpoint</computeroutput> is 0, function will search the endpoint table for a Commissioning Client Cluster and set the envelope&apos;s <computeroutput>source_endpoint</computeroutput> and <computeroutput>profile_id</computeroutput>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">parameters</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameters for the Restart Device command or NULL for default settings (save changes and restart without delay/jitter).</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>request sent </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>couldn&apos;t find source endpoint in endpoint table, or some other error in parameter passed to function </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!0</parametername>
</parameternamelist>
<parameterdescription>
<para>error trying to send request </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zcl_commissioning.c" line="409" column="1" bodyfile="src/zigbee/zcl_commissioning.c" bodystart="409" bodyend="437"/>
        <references refid="group__zcl__commissioning_1ga0eeed24c2ca26aa030876addc4caf67d" compoundref="zcl__commissioning_8c" startline="311" endline="359">_zcl_comm_command_build</references>
        <references refid="group___s_x_a_1ga4233297bd31be5c273d4fb0758cc54d7" compoundref="sxa_8h" startline="70">PACKED_STRUCT</references>
      </memberdef>
      <memberdef kind="function" id="group__zcl__commissioning_1ga3d73d7ef453da4940c923d7d7663f8d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int zcl_comm_reset_parameters</definition>
        <argsstring>(wpan_envelope_t FAR *envelope, const zcl_comm_reset_startup_param_t *parameters)</argsstring>
        <name>zcl_comm_reset_parameters</name>
        <param>
          <type><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>envelope</declname>
        </param>
        <param>
          <type>const zcl_comm_reset_startup_param_t *</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
<para>Send a &quot;Reset Startup Parameters&quot; command to the ZCL Commissioning Cluster. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">envelope</parametername>
</parameternamelist>
<parameterdescription>
<para>Partial envelope used to send the request. Caller must set <computeroutput>dev</computeroutput>, <computeroutput>ieee_address</computeroutput>, <computeroutput>network_address</computeroutput>, <computeroutput>profile_id</computeroutput>, <computeroutput>source_endpoint</computeroutput>, <computeroutput>dest_endpoint</computeroutput> and (optionally) <computeroutput>options</computeroutput>. On return, <computeroutput>payload</computeroutput> and <computeroutput>length</computeroutput> are cleared, and <computeroutput>cluster_id</computeroutput> is set to ZCL_CLUST_COMMISSIONING.</para></parameterdescription>
</parameteritem>
</parameterlist>
If <computeroutput>source_endpoint</computeroutput> is 0, function will search the endpoint table for a Commissioning Client Cluster and set the envelope&apos;s <computeroutput>source_endpoint</computeroutput> and <computeroutput>profile_id</computeroutput>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">parameters</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameters for the Reset Startup Parameters command or NULL for default settings (reset current parameters only).</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>request sent </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>couldn&apos;t find source endpoint in endpoint table, or some other error in parameter passed to function </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!0</parametername>
</parameternamelist>
<parameterdescription>
<para>error trying to send request </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zcl_commissioning.c" line="464" column="1" bodyfile="src/zigbee/zcl_commissioning.c" bodystart="464" bodyend="493"/>
        <references refid="group__zcl__commissioning_1ga0eeed24c2ca26aa030876addc4caf67d" compoundref="zcl__commissioning_8c" startline="311" endline="359">_zcl_comm_command_build</references>
        <references refid="group___s_x_a_1ga4233297bd31be5c273d4fb0758cc54d7" compoundref="sxa_8h" startline="70">PACKED_STRUCT</references>
      </memberdef>
      <memberdef kind="function" id="group__zcl__commissioning_1ga54e8b0e19100923272edbfcfec798409" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rand_range</definition>
        <argsstring>(int range)</argsstring>
        <name>rand_range</name>
        <param>
          <type>int</type>
          <declname>range</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zcl_commissioning.c" line="502" column="1" bodyfile="src/zigbee/zcl_commissioning.c" bodystart="502" bodyend="551"/>
      </memberdef>
      <memberdef kind="function" id="group__zcl__commissioning_1ga91a578cd65163c738bd57a4249955c05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__hal__dos_1ga04dd5074964518403bf944f2b240a5f8" kindref="member">bool_t</ref></type>
        <definition>bool_t zcl_comm_sas_is_valid</definition>
        <argsstring>(const zcl_comm_state_t FAR *comm)</argsstring>
        <name>zcl_comm_sas_is_valid</name>
        <param>
          <type>const <ref refid="structzcl__comm__state__t" kindref="compound">zcl_comm_state_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>comm</declname>
        </param>
        <briefdescription>
<para>Partial implementation of a function to validate a Startup Attribute Set before trying to use it. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">comm</parametername>
</parameternamelist>
<parameterdescription>
<para>Startup Attribute Set to test.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>TRUE</parametername>
</parameternamelist>
<parameterdescription>
<para>Startup Attribute Set is valid </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FALSE</parametername>
</parameternamelist>
<parameterdescription>
<para>Startup Attribute Set is invalid and cannot be used</para></parameterdescription>
</parameteritem>
</parameterlist>
<xrefsect id="todo_1_todo000016"><xreftitle>Todo</xreftitle><xrefdescription><para>add more tests to this function </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zcl_commissioning.c" line="564" column="1" bodyfile="src/zigbee/zcl_commissioning.c" bodystart="564" bodyend="602"/>
      </memberdef>
      <memberdef kind="function" id="group__zcl__commissioning_1ga07258712d6ad21e9ddb96069bb08c896" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int zcl_comm_clust_handler</definition>
        <argsstring>(const wpan_envelope_t FAR *envelope, void FAR *context)</argsstring>
        <name>zcl_comm_clust_handler</name>
        <param>
          <type>const <ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>envelope</declname>
        </param>
        <param>
          <type>void <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zcl_commissioning.c" line="604" column="1" bodyfile="src/zigbee/zcl_commissioning.c" bodystart="604" bodyend="699"/>
      </memberdef>
      <memberdef kind="function" id="group__zcl__commissioning_1gae85ac833a5eaf6f4a8cb6a5a9e6bb49e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void zcl_comm_sas_init</definition>
        <argsstring>(zcl_comm_startup_param_t *p)</argsstring>
        <name>zcl_comm_sas_init</name>
        <param>
          <type><ref refid="structzcl__comm__startup__param__t" kindref="compound">zcl_comm_startup_param_t</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zcl_commissioning.c" line="703" column="1" bodyfile="src/zigbee/zcl_commissioning.c" bodystart="703" bodyend="714"/>
      </memberdef>
      <memberdef kind="function" id="group__zcl__commissioning_1ga1fb799391c7d917facd792d57e3db0fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void zcl_comm_factory_reset</definition>
        <argsstring>(uint16_t ms_delay)</argsstring>
        <name>zcl_comm_factory_reset</name>
        <param>
          <type><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref></type>
          <declname>ms_delay</declname>
        </param>
        <briefdescription>
<para>Perform a locally-triggered factory reset to default SAS. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ms_delay</parametername>
</parameternamelist>
<parameterdescription>
<para>initiate reset after <computeroutput>ms_delay</computeroutput> milliseconds </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zcl_commissioning.c" line="723" column="1" bodyfile="src/zigbee/zcl_commissioning.c" bodystart="723" bodyend="728"/>
        <references refid="group__zcl__commissioning_1ga54811501883a7b2225b1a3111f86b760" compoundref="zcl__commissioning_8h" startline="104">zcl_comm_state_t::restart_ms</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Implementation of ZCL Commissioning Cluster. </para>    </briefdescription>
    <detaileddescription>
<para>For devices with limited resources (e.g., PXBee), we could have a &quot;minimal&quot; <ref refid="structzcl__comm__startup__param__t" kindref="compound">zcl_comm_startup_param_t</ref> structure and zcl_comm_startup_attributes object, similar to how we have &quot;base&quot; and &quot;full&quot; attribute types.</para><para>It would be necessary to have a flag though, so either the minimal or full structure can be passed to functions that process it. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2011-2012<sp/>Digi<sp/>International<sp/>Inc.,</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>not<sp/>expressly<sp/>granted<sp/>are<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>Source<sp/>Code<sp/>Form<sp/>is<sp/>subject<sp/>to<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>Mozilla<sp/>Public</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>License,<sp/>v.<sp/>2.0.<sp/>If<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>MPL<sp/>was<sp/>not<sp/>distributed<sp/>with<sp/>this<sp/>file,</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>You<sp/>can<sp/>obtain<sp/>one<sp/>at<sp/>http://mozilla.org/MPL/2.0/.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>Digi<sp/>International<sp/>Inc.<sp/>11001<sp/>Bren<sp/>Road<sp/>East,<sp/>Minnetonka,<sp/>MN<sp/>55343</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>=======================================================================</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="comment">/***<sp/>BeginHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="zcl__commissioning_8h" kindref="compound">zigbee/zcl_commissioning.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>zcl_comm_global_epid<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_j_s_int64" kindref="compound">zcl64_t</ref><sp/>zcl_comm_global_epid<sp/>=<sp/>ZCL_COMM_GLOBAL_EPID;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>zcl_comm_startup_param<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><ref refid="structzcl__comm__state__t" kindref="compound">zcl_comm_state_t</ref><sp/>zcl_comm_state<sp/>=<sp/>{<sp/>{<sp/>0<sp/>}<sp/>};</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>zcl_comm_startup_attributes,<sp/>zcl_comm_startup_attribute_tree<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight></codeline>
<codeline lineno="56" refid="group__zcl__commissioning_1gae3180284d1a5a9af2176173a58cc1f4c" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__zcl__commissioning_1gae3180284d1a5a9af2176173a58cc1f4c" kindref="member">_zcl_comm_startup_control_set</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structzcl__attribute__full__t" kindref="compound">zcl_attribute_full_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*attribute,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><ref refid="structzcl__attribute__write__rec__t" kindref="compound">zcl_attribute_write_rec_t</ref><sp/>*rec)</highlight></codeline>
<codeline lineno="58"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><ref refid="group__xbee__atcmd_1ga5bf2410fa8ec37f47f8afeba8dcc7f1b" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attribute<sp/>!=<sp/>&amp;zcl_comm_startup_attributes.startup_control)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Unexpected<sp/>error,<sp/>this<sp/>function<sp/>is<sp/>only<sp/>be<sp/>called<sp/>for<sp/>one<sp/>attribute.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rec-&gt;<ref refid="group__zcl_1gade818037fd6c985038ff29656089758d" kindref="member">status</ref><sp/>=<sp/>ZCL_STATUS_SOFTWARE_FAILURE;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>*rec-&gt;<ref refid="group__zcl_1ga669940d05e1abc9807300f7d34169496" kindref="member">buffer</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(value)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Table<sp/>3.121<sp/>&quot;The<sp/>AIB<sp/>attribute<sp/>apsDesignatedCoordinator<sp/>shall<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>to<sp/>TRUE<sp/>in<sp/>this<sp/>case.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_COMM_STARTUP_COORDINATOR:</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>confirm<sp/>that<sp/>this<sp/>firmware<sp/>can<sp/>operate<sp/>in<sp/>coordinator<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>(zcl_comm_state.flags<sp/>&amp;<sp/><ref refid="group__zcl__commissioning_1ga31a1726685fa4acfd6e27a00ba715e5d" kindref="member">ZCL_COMM_FLAG_COORDINATOR_OK</ref>))</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rec-&gt;<ref refid="group__zcl_1gade818037fd6c985038ff29656089758d" kindref="member">status</ref><sp/>=<sp/>ZCL_STATUS_INVALID_VALUE;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Table<sp/>3.121<sp/>&quot;The<sp/>AIB<sp/>attribute<sp/>apsDesignatedCoordinator<sp/>shall<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>to<sp/>FALSE<sp/>in<sp/>[these<sp/>cases].&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_COMM_STARTUP_REJOIN:</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_COMM_STARTUP_FROM_SCRATCH:</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>confirm<sp/>that<sp/>this<sp/>is<sp/>not<sp/>a<sp/>coordiantor-only<sp/>firmware</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>(zcl_comm_state.flags</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>(<ref refid="group__zcl__commissioning_1ga3f21ae380281a600718338c090dd7176" kindref="member">ZCL_COMM_FLAG_ROUTER_OK</ref><sp/>|<sp/><ref refid="group__zcl__commissioning_1gaccf2d6e723514ff49e123264a3cbde5a" kindref="member">ZCL_COMM_FLAG_ENDDEV_OK</ref>)))</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rec-&gt;<ref refid="group__zcl_1gade818037fd6c985038ff29656089758d" kindref="member">status</ref><sp/>=<sp/>ZCL_STATUS_INVALID_VALUE;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((rec-&gt;<ref refid="group__zcl_1gaa2585d779da0ab21273a8d92de9a0ebe" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="group__zcl_1ga2bb65a6c04a14957000feaa12de9769c" kindref="member">ZCL_ATTR_WRITE_FLAG_ASSIGN</ref>)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>rec-&gt;<ref refid="group__zcl_1gade818037fd6c985038ff29656089758d" kindref="member">status</ref><sp/>==<sp/>ZCL_STATUS_SUCCESS)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zcl_comm_state.sas.startup_control<sp/>=<sp/><ref refid="group__xbee__atcmd_1ga5bf2410fa8ec37f47f8afeba8dcc7f1b" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>startup_control<sp/>is<sp/>a<sp/>1-byte<sp/>value<sp/>(ENUM8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/><sp/><sp/>Note<sp/>that<sp/>we<sp/>use<sp/>the<sp/>ZCL_ATTRIB_FLAG_RAW<sp/>flag<sp/>on<sp/>security<sp/>keys,<sp/>in<sp/>an</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/><sp/><sp/>attempt<sp/>to<sp/>prevent<sp/>getting<sp/>the<sp/>incorrect<sp/>byte<sp/>order.<sp/><sp/>The<sp/>keys<sp/>will<sp/>be</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/><sp/><sp/>stored<sp/>in<sp/>network<sp/>byte<sp/>order</highlight></codeline>
<codeline lineno="110"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structzcl__comm__startup__attr__t" kindref="compound">zcl_comm_startup_attr_t</ref><sp/>zcl_comm_startup_attributes<sp/>=</highlight></codeline>
<codeline lineno="112"><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>id,<sp/>flags,<sp/>type,<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/>{<sp/><sp/>ZCL_COMM_ATTR_SHORT_ADDRESS,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ZCL_ATTRIB_FLAG_NONE,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ZCL_TYPE_UNSIGNED_16BIT,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;zcl_comm_state.sas.short_address</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/>{<sp/><sp/>ZCL_COMM_ATTR_EXTENDED_PANID,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ZCL_ATTRIB_FLAG_NONE,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zcl__types_1ga13bc9499fe6127a5ce30c31f3ccae2df" kindref="member">ZCL_TYPE_IEEE_ADDR</ref>,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;zcl_comm_state.sas.extended_panid</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/>{<sp/><sp/>ZCL_COMM_ATTR_PANID,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ZCL_ATTRIB_FLAG_NONE,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ZCL_TYPE_UNSIGNED_16BIT,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;zcl_comm_state.sas.panid</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/>{<sp/><sp/>ZCL_COMM_ATTR_CHANNEL_MASK,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ZCL_ATTRIB_FLAG_NONE,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ZCL_TYPE_BITMAP_32BIT,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;zcl_comm_state.sas.channel_mask</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/>{<sp/><sp/>{<sp/><sp/>ZCL_COMM_ATTR_STARTUP_CONTROL,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zcl_1ga40104652d30fa17b7ea5dde9e8b788b8" kindref="member">ZCL_ATTRIB_FLAG_FULL</ref>,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ZCL_TYPE_ENUM_8BIT,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;zcl_comm_state.sas.startup_control</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>ZCL_COMM_STARTUP_JOINED<sp/>},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>min</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>ZCL_COMM_STARTUP_FROM_SCRATCH<sp/>},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>max</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read_fn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zcl__commissioning_1gae3180284d1a5a9af2176173a58cc1f4c" kindref="member">_zcl_comm_startup_control_set</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write_fn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/>{<sp/><sp/>ZCL_COMM_ATTR_TRUST_CTR_ADDR,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ZCL_ATTRIB_FLAG_READONLY,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zcl__types_1ga13bc9499fe6127a5ce30c31f3ccae2df" kindref="member">ZCL_TYPE_IEEE_ADDR</ref>,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wpan__types_1ga014f9d0857312b6a7f80ee10ecfd0935" kindref="member">WPAN_IEEE_ADDR_ALL_ZEROS</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>unspecified</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/>{<sp/><sp/>ZCL_COMM_ATTR_TRUST_CTR_MASTER_KEY,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ZCL_ATTRIB_FLAG_WRITEONLY<sp/>|<sp/><ref refid="group__zcl_1gae40d06ea09e652f6c68fd13e61eb9624" kindref="member">ZCL_ATTRIB_FLAG_RAW</ref>,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zcl__types_1gaa430fee3f4e5e09767b9fc969f73cf2f" kindref="member">ZCL_TYPE_SECURITY_KEY</ref>,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>NULL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&amp;zcl_comm_state.sas.trust_ctr_master_key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/>{<sp/><sp/>ZCL_COMM_ATTR_NETWORK_KEY,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ZCL_ATTRIB_FLAG_WRITEONLY<sp/>|<sp/><ref refid="group__zcl_1gae40d06ea09e652f6c68fd13e61eb9624" kindref="member">ZCL_ATTRIB_FLAG_RAW</ref>,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zcl__types_1gaa430fee3f4e5e09767b9fc969f73cf2f" kindref="member">ZCL_TYPE_SECURITY_KEY</ref>,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;zcl_comm_state.sas.network_key_le</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/>{<sp/><sp/>ZCL_COMM_ATTR_USE_INSECURE_JOIN,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ZCL_ATTRIB_FLAG_NONE,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ZCL_TYPE_LOGICAL_BOOLEAN,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;zcl_comm_state.sas.use_insecure_join</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/>{<sp/><sp/>ZCL_COMM_ATTR_PRECONFIG_LINK_KEY,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ZCL_ATTRIB_FLAG_WRITEONLY<sp/>|<sp/><ref refid="group__zcl_1gae40d06ea09e652f6c68fd13e61eb9624" kindref="member">ZCL_ATTRIB_FLAG_RAW</ref>,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zcl__types_1gaa430fee3f4e5e09767b9fc969f73cf2f" kindref="member">ZCL_TYPE_SECURITY_KEY</ref>,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;zcl_comm_state.sas.preconfig_link_key_le</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/>{<sp/><sp/>ZCL_COMM_ATTR_NETWORK_KEY_SEQ_NUM,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ZCL_ATTRIB_FLAG_NONE,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ZCL_TYPE_UNSIGNED_8BIT,</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;zcl_comm_state.sas.network_key_seq_num</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/>{<sp/><sp/>ZCL_COMM_ATTR_NETWORK_KEY_TYPE,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ZCL_ATTRIB_FLAG_NONE,</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ZCL_TYPE_ENUM_8BIT,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;zcl_comm_state.sas.network_key_type</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/>{<sp/><sp/>ZCL_COMM_ATTR_NETWORK_MGR_ADDR,</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ZCL_ATTRIB_FLAG_NONE,</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ZCL_TYPE_UNSIGNED_16BIT,</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;zcl_comm_state.sas.network_mgr_addr</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/>{<sp/><sp/>{<sp/><sp/>ZCL_COMM_ATTR_SCAN_ATTEMPTS,</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ZCL_ATTRIB_FLAG_READONLY<sp/>|<sp/><ref refid="group__zcl_1ga40104652d30fa17b7ea5dde9e8b788b8" kindref="member">ZCL_ATTRIB_FLAG_FULL</ref>,</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ZCL_TYPE_UNSIGNED_8BIT,</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;zcl_comm_state.sas.scan_attempts</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x01<sp/>},<sp/>{<sp/>0xFF<sp/>},<sp/>NULL,<sp/>NULL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>min,<sp/>max,<sp/>read,<sp/>write</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/>{<sp/><sp/>{<sp/><sp/>ZCL_COMM_ATTR_TIME_BTWN_SCANS,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ZCL_ATTRIB_FLAG_READONLY<sp/>|<sp/><ref refid="group__zcl_1ga40104652d30fa17b7ea5dde9e8b788b8" kindref="member">ZCL_ATTRIB_FLAG_FULL</ref>,</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ZCL_TYPE_UNSIGNED_16BIT,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;zcl_comm_state.sas.time_between_scans</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x0001<sp/>},<sp/>{<sp/>0xFFFF<sp/>},<sp/>NULL,<sp/>NULL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>min,<sp/>max,<sp/>read,<sp/>write</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>RejoinInterval<sp/>becomes<sp/>writable,<sp/>we<sp/>need<sp/>to<sp/>add<sp/>a<sp/>write<sp/>handler<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ensures<sp/>it<sp/>does<sp/>not<sp/>exceed<sp/>the<sp/>max_rejoin_interval.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>xbee_get_unaligned16(<sp/>((zcl_attribute_full_t<sp/>FAR<sp/>*)attr<sp/>+<sp/>1)-&gt;base.value),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>or<sp/>cheat<sp/>and<sp/>reference<sp/>zcl_comm_state.sas.max_rejoin_interval<sp/>directly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/>{<sp/><sp/>{<sp/><sp/>ZCL_COMM_ATTR_REJOIN_INTERVAL,</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ZCL_ATTRIB_FLAG_READONLY<sp/>|<sp/><ref refid="group__zcl_1ga40104652d30fa17b7ea5dde9e8b788b8" kindref="member">ZCL_ATTRIB_FLAG_FULL</ref>,</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ZCL_TYPE_UNSIGNED_16BIT,</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;zcl_comm_state.sas.rejoin_interval</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x0001<sp/>},<sp/>{<sp/>0xFFFF<sp/>},<sp/>NULL,<sp/>NULL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>min,<sp/>max,<sp/>read,<sp/>write</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/>{<sp/><sp/>{<sp/><sp/>ZCL_COMM_ATTR_MAX_REJOIN_INTERVAL,</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ZCL_ATTRIB_FLAG_READONLY<sp/>|<sp/><ref refid="group__zcl_1ga40104652d30fa17b7ea5dde9e8b788b8" kindref="member">ZCL_ATTRIB_FLAG_FULL</ref>,</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ZCL_TYPE_UNSIGNED_16BIT,</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;zcl_comm_state.sas.max_rejoin_interval</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x0001<sp/>},<sp/>{<sp/>0xFFFF},<sp/>NULL,<sp/>NULL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>min,<sp/>max,<sp/>read,<sp/>write</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/>ZCL_COMM_ATTR_CONCENTRATOR_FLAG,</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ZCL_ATTRIB_FLAG_NONE,</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ZCL_TYPE_LOGICAL_BOOLEAN,</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;zcl_comm_state.sas.concentrator.flag</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/>ZCL_COMM_ATTR_CONCENTRATOR_RADIUS,</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ZCL_ATTRIB_FLAG_NONE,</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ZCL_TYPE_UNSIGNED_8BIT,</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;zcl_comm_state.sas.concentrator.radius</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/>ZCL_COMM_ATTR_CONCENTRATOR_DISC_TIME,</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ZCL_ATTRIB_FLAG_NONE,</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ZCL_TYPE_UNSIGNED_8BIT,</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;zcl_comm_state.sas.concentrator.discovery_time</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__zcl_1gab05da20cf1dfaef97e20dfca2fd26d14" kindref="member">ZCL_ATTRIBUTE_END_OF_LIST</ref></highlight></codeline>
<codeline lineno="254"><highlight class="normal">};</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structzcl__attribute__tree__t" kindref="compound">zcl_attribute_tree_t</ref><sp/>zcl_comm_startup_attribute_tree[]<sp/>=</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>{<sp/>ZCL_MFG_NONE,<sp/>&amp;zcl_comm_startup_attributes.short_address,<sp/>NULL<sp/>}<sp/>};</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>zcl_comm_response<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight></codeline>
<codeline lineno="265" refid="group__zcl__commissioning_1ga57f9aaf3da6dc9b513f7f9ccbb473a0b" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__zcl__commissioning_1ga57f9aaf3da6dc9b513f7f9ccbb473a0b" kindref="member">zcl_comm_response</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*envelope,</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint_fast8_t<sp/><ref refid="group__xbee__atcmd_1gade818037fd6c985038ff29656089758d" kindref="member">status</ref>)</highlight></codeline>
<codeline lineno="267"><highlight class="normal">{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__zcl_1gae988eb59c8a2e75b6cb34aefeca315d1" kindref="member">zcl_header_nomfg_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*zcl;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref><sp/>reply_env;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><ref refid="group___s_x_a_1ga4233297bd31be5c273d4fb0758cc54d7" kindref="member">PACKED_STRUCT</ref><sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zcl_1gae988eb59c8a2e75b6cb34aefeca315d1" kindref="member">zcl_header_nomfg_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>header;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__xbee__atcmd_1gade818037fd6c985038ff29656089758d" kindref="member">status</ref>;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/>}<sp/>reply;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wpan_envelope_reply()<sp/>will<sp/>test<sp/>for<sp/>envelope<sp/>==<sp/>NULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/>retval<sp/>=<sp/><ref refid="group__wpan__aps_1gaaaee02ff456d4f6103a5e94c2ba106c5" kindref="member">wpan_envelope_reply</ref>(<sp/>&amp;reply_env,<sp/>envelope);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retval<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/>zcl<sp/>=<sp/>envelope-&gt;payload;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/>reply.header.frame_control<sp/>=<sp/><ref refid="group__zcl_1gac173779e7c48817dbd79042d7a189524" kindref="member">ZCL_FRAME_SERVER_TO_CLIENT</ref></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="group__zcl_1ga080b9f73f48767fc6af9b5da27d30d70" kindref="member">ZCL_FRAME_DISABLE_DEF_RESP</ref></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="group__zcl_1ga75efeedff171558e183dbf8d646ea5dd" kindref="member">ZCL_FRAME_TYPE_CLUSTER</ref>;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/>reply.header.sequence<sp/>=<sp/>zcl-&gt;sequence;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/>reply.header.command<sp/>=<sp/>zcl-&gt;command;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/>reply.status<sp/>=<sp/>(<ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref>)<sp/>status;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/>reply_env.<ref refid="group__wpan__aps_1ga8737375e27cb391ff381fff10dc0c132" kindref="member">payload</ref><sp/>=<sp/>&amp;reply;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/>reply_env.<ref refid="group__wpan__aps_1ga1892eba2086d12ac2b09005aeb09ea3b" kindref="member">length</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>reply;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__wpan__aps_1ga06f1e9e86b74ef807ded44b79b13e283" kindref="member">wpan_envelope_send</ref>(<sp/>&amp;reply_env);</highlight></codeline>
<codeline lineno="295"><highlight class="normal">}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>_zcl_comm_command_build<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__zcl__commissioning_1ga0eeed24c2ca26aa030876addc4caf67d" kindref="member">_zcl_comm_command_build</ref>(<sp/><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*envelope,</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__zcl_1gae988eb59c8a2e75b6cb34aefeca315d1" kindref="member">zcl_header_nomfg_t</ref><sp/>*header);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight></codeline>
<codeline lineno="311" refid="group__zcl__commissioning_1ga0eeed24c2ca26aa030876addc4caf67d" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__zcl__commissioning_1ga0eeed24c2ca26aa030876addc4caf67d" kindref="member">_zcl_comm_command_build</ref>(<sp/><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*envelope,</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__zcl_1gae988eb59c8a2e75b6cb34aefeca315d1" kindref="member">zcl_header_nomfg_t</ref><sp/>*header)</highlight></codeline>
<codeline lineno="313"><highlight class="normal">{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwpan__endpoint__table__entry__t" kindref="compound">wpan_endpoint_table_entry_t</ref><sp/>*ep;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(envelope-&gt;source_endpoint<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZCL_COMMISSIONING_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>searching<sp/>for<sp/>endpoint<sp/>w/commissioning<sp/>client<sp/>cluster\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ep<sp/>=<sp/><ref refid="group__wpan__aps_1ga2cc975231963e0eb75c449c11b1d95de" kindref="member">wpan_endpoint_of_cluster</ref>(<sp/>envelope-&gt;dev,<sp/>WPAN_APS_PROFILE_ANY,</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ZCL_CLUST_COMMISSIONING,<sp/><ref refid="group__wpan__aps_1ga9aae0646b212af63cbb07c98a33cd986" kindref="member">WPAN_CLUST_FLAG_CLIENT</ref>);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ep<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZCL_COMMISSIONING_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>commissioning<sp/>client<sp/>on<sp/>ep<sp/>%u,<sp/>profile<sp/>0x%04x\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__,<sp/>ep-&gt;<ref refid="group__wpan__aps_1ga7d397493728da2bca8d55b2d61c4ec5d" kindref="member">endpoint</ref>,<sp/>ep-&gt;<ref refid="group__wpan__aps_1ga5ca7f19e5697de2baf0e2147a41a5792" kindref="member">profile_id</ref>);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>envelope-&gt;source_endpoint<sp/>=<sp/>ep-&gt;<ref refid="group__wpan__aps_1ga7d397493728da2bca8d55b2d61c4ec5d" kindref="member">endpoint</ref>;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>envelope-&gt;profile_id<sp/>=<sp/>ep-&gt;<ref refid="group__wpan__aps_1ga5ca7f19e5697de2baf0e2147a41a5792" kindref="member">profile_id</ref>;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ep<sp/>=<sp/><ref refid="group__wpan__aps_1gab448ec18a47178272336da5eacfa2290" kindref="member">wpan_endpoint_of_envelope</ref>(<sp/>envelope);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ep<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZCL_COMMISSIONING_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>couldn&apos;t<sp/>locate<sp/>source<sp/>endpoint<sp/>on<sp/>this<sp/>device\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/>envelope-&gt;cluster_id<sp/>=<sp/>ZCL_CLUST_COMMISSIONING;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/>envelope-&gt;payload<sp/>=<sp/>header;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/>header-&gt;frame_control<sp/>=<sp/><ref refid="group__zcl_1ga245f966df7431d5b9268bbf227770173" kindref="member">ZCL_FRAME_CLIENT_TO_SERVER</ref></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="group__zcl_1ga09fb05e268f791031acb037c9b5df555" kindref="member">ZCL_FRAME_GENERAL</ref></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="group__zcl_1ga75efeedff171558e183dbf8d646ea5dd" kindref="member">ZCL_FRAME_TYPE_CLUSTER</ref></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="group__zcl_1ga080b9f73f48767fc6af9b5da27d30d70" kindref="member">ZCL_FRAME_DISABLE_DEF_RESP</ref>;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/>header-&gt;sequence<sp/>=<sp/><ref refid="group__wpan__aps_1gaab1c77ccbd237270f11499fb6411599c" kindref="member">wpan_endpoint_next_trans</ref>(<sp/>ep);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="359"><highlight class="normal">}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>_zcl_comm_command_send<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__zcl__commissioning_1gab653d2ac290d96d3131c894f7330fbb6" kindref="member">_zcl_comm_command_send</ref>(<sp/><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*envelope);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight></codeline>
<codeline lineno="370" refid="group__zcl__commissioning_1gab653d2ac290d96d3131c894f7330fbb6" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__zcl__commissioning_1gab653d2ac290d96d3131c894f7330fbb6" kindref="member">_zcl_comm_command_send</ref>(<sp/><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*envelope)</highlight></codeline>
<codeline lineno="371"><highlight class="normal">{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/>retval<sp/>=<sp/><ref refid="group__wpan__aps_1ga06f1e9e86b74ef807ded44b79b13e283" kindref="member">wpan_envelope_send</ref>(<sp/>envelope);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reset<sp/>payload<sp/>and<sp/>length<sp/>of<sp/>envelope</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/>envelope-&gt;payload<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/>envelope-&gt;length<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="381"><highlight class="normal">}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>zcl_comm_restart_device<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight></codeline>
<codeline lineno="409" refid="group__zcl__commissioning_1ga891e67720dee8334b805756597a62607" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__zcl__commissioning_1ga891e67720dee8334b805756597a62607" kindref="member">zcl_comm_restart_device</ref>(<sp/><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*envelope,</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>zcl_comm_restart_device_cmd_t<sp/>*parameters)</highlight></codeline>
<codeline lineno="411"><highlight class="normal">{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><ref refid="group___s_x_a_1ga4233297bd31be5c273d4fb0758cc54d7" kindref="member">PACKED_STRUCT</ref><sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zcl_1gae988eb59c8a2e75b6cb34aefeca315d1" kindref="member">zcl_header_nomfg_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>zcl_comm_restart_device_cmd_t<sp/><sp/><sp/><sp/>parameters;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/>}<sp/>request;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/>retval<sp/>=<sp/><ref refid="group__zcl__commissioning_1ga0eeed24c2ca26aa030876addc4caf67d" kindref="member">_zcl_comm_command_build</ref>(<sp/>envelope,<sp/>&amp;request.header);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retval<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/>request.header.command<sp/>=<sp/>ZCL_COMM_CMD_RESTART_DEVICE;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parameters<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memset(<sp/>&amp;request.parameters,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(request.parameters));</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>request.parameters<sp/>=<sp/>*parameters;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/>envelope-&gt;length<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>request;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__zcl__commissioning_1gab653d2ac290d96d3131c894f7330fbb6" kindref="member">_zcl_comm_command_send</ref>(<sp/>envelope);</highlight></codeline>
<codeline lineno="437"><highlight class="normal">}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>zcl_comm_reset_parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight></codeline>
<codeline lineno="464" refid="group__zcl__commissioning_1ga3d73d7ef453da4940c923d7d7663f8d9" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__zcl__commissioning_1ga3d73d7ef453da4940c923d7d7663f8d9" kindref="member">zcl_comm_reset_parameters</ref>(<sp/><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*envelope,</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>zcl_comm_reset_startup_param_t<sp/>*parameters)</highlight></codeline>
<codeline lineno="466"><highlight class="normal">{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><ref refid="group___s_x_a_1ga4233297bd31be5c273d4fb0758cc54d7" kindref="member">PACKED_STRUCT</ref><sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zcl_1gae988eb59c8a2e75b6cb34aefeca315d1" kindref="member">zcl_header_nomfg_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>zcl_comm_reset_startup_param_t<sp/><sp/><sp/>parameters;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/>}<sp/>request;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/>retval<sp/>=<sp/><ref refid="group__zcl__commissioning_1ga0eeed24c2ca26aa030876addc4caf67d" kindref="member">_zcl_comm_command_build</ref>(<sp/>envelope,<sp/>&amp;request.header);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retval<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/>request.header.command<sp/>=<sp/>ZCL_COMM_CMD_RESET_STARTUP_PARAM;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parameters<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>request.parameters.options<sp/>=<sp/>ZCL_COMM_RESET_OPT_CURRENT;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>request.parameters.index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>request.parameters<sp/>=<sp/>*parameters;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/>envelope-&gt;length<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>request;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__zcl__commissioning_1gab653d2ac290d96d3131c894f7330fbb6" kindref="member">_zcl_comm_command_send</ref>(<sp/>envelope);</highlight></codeline>
<codeline lineno="493"><highlight class="normal">}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>zcl_comm_clust_handler<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RAND_MAX<sp/>&lt;<sp/>32767</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#error<sp/>&quot;Other<sp/>code<sp/>calling<sp/>this<sp/>function<sp/>depend<sp/>on<sp/>RAND_MAX<sp/>&gt;=<sp/>32767.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight><highlight class="comment">//<sp/>return<sp/>a<sp/>number<sp/>from<sp/>[0<sp/>to<sp/>&lt;range&gt;]<sp/>inclusive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rand_range(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>range)</highlight></codeline>
<codeline lineno="503"><highlight class="normal">{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>perbucket;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(range<sp/>&lt;<sp/>0<sp/>||<sp/>range<sp/>&gt;<sp/>RAND_MAX)</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(range<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[0<sp/>..<sp/>0],<sp/>only<sp/>choice<sp/>is<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(range<sp/>==<sp/>RAND_MAX)</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rand();<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>rand()<sp/>defined<sp/>to<sp/>return<sp/>[0<sp/>..<sp/>RAND_MAX]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>range<sp/>is<sp/>a<sp/>string<sp/>of<sp/>low<sp/>bits<sp/>(1,<sp/>3,<sp/>7,<sp/>15,<sp/>31,<sp/>etc.)<sp/>we<sp/>could<sp/>just</highlight></codeline>
<codeline lineno="523"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>take<sp/>rand()<sp/>and<sp/>bitwise<sp/>AND<sp/>it<sp/>with<sp/>range,<sp/>but<sp/>the<sp/>low-order<sp/>bits<sp/>of</highlight></codeline>
<codeline lineno="524"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>many<sp/>PRNGs<sp/>are<sp/>not<sp/>very<sp/>random.</highlight></codeline>
<codeline lineno="525"><highlight class="comment"></highlight></codeline>
<codeline lineno="526"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>For<sp/>other<sp/>ranges,<sp/>to<sp/>ensure<sp/>equal<sp/>distribution,<sp/>create<sp/>&lt;range&gt;+1<sp/>buckets</highlight></codeline>
<codeline lineno="527"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>&lt;perbucket&gt;<sp/>values<sp/>per<sp/>bucket.<sp/><sp/>Discard<sp/>random<sp/>numbers<sp/>outside<sp/>the</highlight></codeline>
<codeline lineno="528"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>range<sp/>of<sp/>values,<sp/>and<sp/>then<sp/>divide<sp/>the<sp/>result<sp/>by<sp/>the<sp/>&lt;perbucket&gt;<sp/>count.</highlight></codeline>
<codeline lineno="529"><highlight class="comment"></highlight></codeline>
<codeline lineno="530"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>has<sp/>the<sp/>added<sp/>benefit<sp/>of<sp/>using<sp/>high-order<sp/>bits<sp/>which<sp/>are<sp/>&quot;more&quot;</highlight></codeline>
<codeline lineno="531"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>random<sp/>than<sp/>low-order<sp/>bits<sp/>on<sp/>many<sp/>psuedo<sp/>random<sp/>number<sp/>generators.</highlight></codeline>
<codeline lineno="532"><highlight class="comment"></highlight></codeline>
<codeline lineno="533"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>(See<sp/>comp.lang.c<sp/>FAQ<sp/>list,<sp/>13.16:<sp/>http://c-faq.com/lib/randrange.html)</highlight></codeline>
<codeline lineno="534"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>rand()<sp/>generates<sp/>values<sp/>from<sp/>0<sp/>to<sp/>RAND_MAX,<sp/>inclusive<sp/>(hence<sp/>the<sp/>+1u</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>converting<sp/>to<sp/>unsigned<sp/>int<sp/>in<sp/>case<sp/>RAND_MAX<sp/>==<sp/>INT_MAX).<sp/><sp/>We<sp/>need</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>range<sp/>+<sp/>1<sp/>buckets<sp/>(again,<sp/>0<sp/>to<sp/>&lt;range&gt;<sp/>inclusive).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/>perbucket<sp/>=<sp/>(RAND_MAX<sp/>+<sp/>1u)<sp/>/<sp/>(range<sp/>+<sp/>1u);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/>max<sp/>=<sp/>range<sp/>*<sp/>perbucket;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>rand();</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(r<sp/>&gt;=<sp/>max);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>ZCL_COMMISSIONING_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>rand_range(%u)<sp/>returning<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range,<sp/>r<sp/>/<sp/>perbucket);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(r<sp/>/<sp/>perbucket);</highlight></codeline>
<codeline lineno="551"><highlight class="normal">}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="564" refid="group__zcl__commissioning_1ga91a578cd65163c738bd57a4249955c05" refkind="member"><highlight class="normal"><ref refid="group__hal__dos_1ga04dd5074964518403bf944f2b240a5f8" kindref="member">bool_t</ref><sp/><ref refid="group__zcl__commissioning_1ga91a578cd65163c738bd57a4249955c05" kindref="member">zcl_comm_sas_is_valid</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structzcl__comm__state__t" kindref="compound">zcl_comm_state_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*comm)</highlight></codeline>
<codeline lineno="565"><highlight class="normal">{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comm-&gt;sas.startup_control<sp/>!=<sp/>ZCL_COMM_STARTUP_FROM_SCRATCH)</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Extended<sp/>PAN<sp/>ID<sp/>is<sp/>required<sp/>for<sp/>all<sp/>but<sp/>&quot;from<sp/>scratch&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__hal_1gaae7cb3384b4bbd83726511ccfbd747d3" kindref="member">memcheck</ref>(<sp/>&amp;comm-&gt;sas.extended_panid,<sp/>0xFF,<sp/>8)<sp/>==<sp/>0</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/><ref refid="group__hal_1gaae7cb3384b4bbd83726511ccfbd747d3" kindref="member">memcheck</ref>(<sp/>&amp;comm-&gt;sas.extended_panid,<sp/>0x00,<sp/>8)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(comm-&gt;sas.startup_control)</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_COMM_STARTUP_JOINED:</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>must<sp/>have<sp/>short<sp/>address,<sp/>panid,<sp/>trust<sp/>center,<sp/>network<sp/>key,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>key<sp/>seq<sp/>num<sp/>and<sp/>key<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comm-&gt;sas.short_address<sp/>==<sp/><ref refid="group__wpan__types_1ga5158cbab6c4139bd77d1d3f80d9071b2" kindref="member">WPAN_NET_ADDR_COORDINATOR</ref>)</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>must<sp/>support<sp/>coordinator<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>must<sp/>support<sp/>non-coordinator<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_COMM_STARTUP_COORDINATOR:</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_COMM_STARTUP_REJOIN:</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_COMM_STARTUP_FROM_SCRATCH:</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TRUE;</highlight></codeline>
<codeline lineno="602"><highlight class="normal">}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>zcl_comm_clust_handler(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*envelope,</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*context)</highlight></codeline>
<codeline lineno="606"><highlight class="normal">{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>frame<sp/>is<sp/>not<sp/>manufacturer-specific,<sp/>client-to-server<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>cluster<sp/>command<sp/>(not<sp/>&quot;profile-wide&quot;).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(envelope<sp/>!=<sp/>NULL<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zcl_1ga0bbd651dae138e104715e6e2de62084e" kindref="member">ZCL_CMD_MATCH</ref>(<sp/>envelope-&gt;payload,<sp/>GENERAL,<sp/>CLIENT_TO_SERVER,<sp/>CLUSTER))</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___s_x_a_1ga4233297bd31be5c273d4fb0758cc54d7" kindref="member">PACKED_STRUCT</ref><sp/>{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zcl_1gae988eb59c8a2e75b6cb34aefeca315d1" kindref="member">zcl_header_nomfg_t</ref><sp/><sp/><sp/>zcl;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zcl_comm_restart_device_cmd_t<sp/><sp/><sp/><sp/>restart_dev;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zcl_comm_save_startup_param_t<sp/><sp/><sp/><sp/>save_startup;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zcl_comm_restore_startup_param_t<sp/>restore_startup;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zcl_comm_reset_startup_param_t<sp/><sp/><sp/>reset_startup;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>cmd;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*request<sp/>=<sp/>envelope-&gt;payload;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structzcl__attribute__tree__t" kindref="compound">zcl_attribute_tree_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*tree<sp/>=<sp/>context;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structzcl__comm__state__t" kindref="compound">zcl_comm_state_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*comm;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__hal__dos_1ga09a1e304d66d35dd47daffee9731edaa" kindref="member">uint32_t</ref><sp/>delay;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Context<sp/>points<sp/>to<sp/>the<sp/>attribute<sp/>tree<sp/>for<sp/>this<sp/>cluster.<sp/><sp/>First</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>server<sp/>attribute<sp/>is<sp/>the<sp/>first<sp/>element<sp/>of<sp/>the<sp/>zcl_comm_startup_param_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>structure.<sp/><sp/>Note<sp/>that<sp/>we<sp/>intentionally<sp/>cast<sp/>away<sp/>const<sp/>on<sp/>&apos;value&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>since<sp/>it<sp/>is<sp/>actually<sp/>non-const.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>comm<sp/>=<sp/>(<ref refid="structzcl__comm__state__t" kindref="compound">zcl_comm_state_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)tree[0].server-&gt;value;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>switch<sp/>(request-&gt;zcl.command)</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_COMM_CMD_RESTART_DEVICE:</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>validate<sp/>the<sp/>statup<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/><ref refid="group__zcl__commissioning_1ga91a578cd65163c738bd57a4249955c05" kindref="member">zcl_comm_sas_is_valid</ref>(<sp/>comm))</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZCL_COMMISSIONING_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>ignoring<sp/>restart<sp/>cmd<sp/>due<sp/>to<sp/>inconsistent<sp/>SAS\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__zcl__commissioning_1ga57f9aaf3da6dc9b513f7f9ccbb473a0b" kindref="member">zcl_comm_response</ref>(<sp/>envelope,</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ZCL_STATUS_INCONSISTENT_STARTUP_STATE);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>a<sp/>timer<sp/>for<sp/>when<sp/>we<sp/>should<sp/>perform<sp/>the<sp/>restart.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delay<sp/>=<sp/>request-&gt;cmd.restart_dev.delay<sp/>*<sp/>UINT32_C(1000)<sp/>+</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rand_range(<sp/>request-&gt;cmd.restart_dev.jitter<sp/>*<sp/>80);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZCL_COMMISSIONING_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>restart<sp/>scheduled<sp/>in<sp/>%&quot;</highlight><highlight class="normal"><sp/><ref refid="group__hal_1gaaf2af4a10f0bd308e9c349c8382382be" kindref="member">PRIu32</ref><sp/></highlight><highlight class="stringliteral">&quot;ms\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__,<sp/>delay);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comm-&gt;restart_ms<sp/>=<sp/>(xbee_millisecond_timer()<sp/>+<sp/>delay);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comm-&gt;flags<sp/>|=<sp/><ref refid="group__zcl__commissioning_1gaa56ed48c4587dd4c657a1e69f7e2fba7" kindref="member">ZCL_COMM_FLAG_DELAYED_RESTART</ref>;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((request-&gt;cmd.restart_dev.options</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>ZCL_COMM_RESTART_OPT_MODE_MASK)</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>ZCL_COMM_RESTART_OPT_MODE_SAVE_CHANGES)</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comm-&gt;flags<sp/>|=<sp/><ref refid="group__zcl__commissioning_1gaf041a27755c9719134f8a2ad59f124e3" kindref="member">ZCL_COMM_FLAG_INSTALL</ref>;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>client<sp/>changed<sp/>its<sp/>mind<sp/>and<sp/>we<sp/>need<sp/>to<sp/>clear<sp/>the<sp/>install<sp/>flag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comm-&gt;flags<sp/>&amp;=<sp/>~<ref refid="group__zcl__commissioning_1gaf041a27755c9719134f8a2ad59f124e3" kindref="member">ZCL_COMM_FLAG_INSTALL</ref>;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__zcl__commissioning_1ga57f9aaf3da6dc9b513f7f9ccbb473a0b" kindref="member">zcl_comm_response</ref>(<sp/>envelope,<sp/>ZCL_STATUS_SUCCESS);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_COMM_CMD_RESET_STARTUP_PARAM:</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(request-&gt;cmd.reset_startup.options</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>ZCL_COMM_RESET_OPT_CURRENT)</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZCL_COMMISSIONING_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>resetting<sp/>to<sp/>factory<sp/>defaults\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reset<sp/>and<sp/>install<sp/>factory<sp/>defaults</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comm-&gt;flags<sp/>|=</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zcl__commissioning_1gaa56ed48c4587dd4c657a1e69f7e2fba7" kindref="member">ZCL_COMM_FLAG_DELAYED_RESTART</ref><sp/>|</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zcl__commissioning_1ga656e9fbebbb767dd47a59363944a0ee4" kindref="member">ZCL_COMM_FLAG_FACTORY_RESET</ref><sp/>|</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zcl__commissioning_1gaf041a27755c9719134f8a2ad59f124e3" kindref="member">ZCL_COMM_FLAG_INSTALL</ref>;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comm-&gt;restart_ms<sp/>=<sp/>xbee_millisecond_timer();</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>implemented<sp/>saved<sp/>startup<sp/>parameters,<sp/>we<sp/>would<sp/>need</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>process<sp/>other<sp/>options<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__zcl__commissioning_1ga57f9aaf3da6dc9b513f7f9ccbb473a0b" kindref="member">zcl_comm_response</ref>(<sp/>envelope,<sp/>ZCL_STATUS_SUCCESS);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_COMM_CMD_SAVE_STARTUP_PARAM:</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_COMM_CMD_RESTORE_STARTUP_PARAM:</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>implementation<sp/>does<sp/>not<sp/>handle<sp/>these<sp/>optional<sp/>commands</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allow<sp/>General<sp/>Command<sp/>handler<sp/>to<sp/>process<sp/>general</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>commands<sp/>and<sp/>send<sp/>errors<sp/>out<sp/>for<sp/>unsupported<sp/>commands.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__zcl_1gac3849121e93e777ce9a7510d24517b9b" kindref="member">zcl_general_command</ref>(<sp/>envelope,<sp/>context);</highlight></codeline>
<codeline lineno="699"><highlight class="normal">}</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>zcl_comm_sas_init<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>zcl_comm_sas_init(<sp/><ref refid="structzcl__comm__startup__param__t" kindref="compound">zcl_comm_startup_param_t</ref><sp/>*p)</highlight></codeline>
<codeline lineno="704"><highlight class="normal">{</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/>memset(<sp/>p,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*p);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/>memset(<sp/>&amp;p-&gt;extended_panid,<sp/>0xFF,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(p-&gt;extended_panid));</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/>memset(<sp/>&amp;p-&gt;network_key_le,<sp/>0xFF,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(p-&gt;network_key_le));</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/>memset(<sp/>&amp;p-&gt;preconfig_link_key_le,<sp/>0xFF,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(p-&gt;preconfig_link_key_le));</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/>p-&gt;scan_attempts<sp/>=<sp/>ZCL_COMM_SCAN_ATTEMPTS_DEFAULT;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/>p-&gt;time_between_scans<sp/>=<sp/>ZCL_COMM_TIME_BETWEEN_SCANS_DEFAULT;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/>p-&gt;rejoin_interval<sp/>=<sp/>ZCL_COMM_REJOIN_INTERVAL_DEFAULT;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/>p-&gt;max_rejoin_interval<sp/>=<sp/>ZCL_COMM_MAX_REJOIN_INTERVAL_DEFAULT;</highlight></codeline>
<codeline lineno="714"><highlight class="normal">}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>zcl_comm_factory_reset<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight></codeline>
<codeline lineno="723" refid="group__zcl__commissioning_1ga1fb799391c7d917facd792d57e3db0fe" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__zcl__commissioning_1ga1fb799391c7d917facd792d57e3db0fe" kindref="member">zcl_comm_factory_reset</ref>(<sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/>ms_delay)</highlight></codeline>
<codeline lineno="724"><highlight class="normal">{</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/>zcl_comm_state.<ref refid="group__zcl__commissioning_1ga54811501883a7b2225b1a3111f86b760" kindref="member">restart_ms</ref><sp/>=<sp/>xbee_millisecond_timer()<sp/>+<sp/>ms_delay;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/>zcl_comm_state.flags<sp/>|=<sp/><ref refid="group__zcl__commissioning_1gaa56ed48c4587dd4c657a1e69f7e2fba7" kindref="member">ZCL_COMM_FLAG_DELAYED_RESTART</ref></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="group__zcl__commissioning_1ga656e9fbebbb767dd47a59363944a0ee4" kindref="member">ZCL_COMM_FLAG_FACTORY_RESET</ref><sp/>|<sp/><ref refid="group__zcl__commissioning_1gaf041a27755c9719134f8a2ad59f124e3" kindref="member">ZCL_COMM_FLAG_INSTALL</ref>;</highlight></codeline>
<codeline lineno="728"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/zigbee/zcl_commissioning.c"/>
  </compounddef>
</doxygen>
