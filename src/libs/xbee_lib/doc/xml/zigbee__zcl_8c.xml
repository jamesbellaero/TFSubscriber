<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="zigbee__zcl_8c" kind="file" language="C++">
    <compoundname>zigbee_zcl.c</compoundname>
    <includes local="no">errno.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">stdio.h</includes>
    <includes refid="platform_8h" local="yes">xbee/platform.h</includes>
    <includes refid="byteorder_8h" local="yes">xbee/byteorder.h</includes>
    <includes refid="aps_8h" local="yes">wpan/aps.h</includes>
    <includes refid="zcl_8h" local="yes">zigbee/zcl.h</includes>
    <includes refid="zcl__types_8h" local="yes">zigbee/zcl_types.h</includes>
    <incdepgraph>
      <node id="1692">
        <label>src/zigbee/zigbee_zcl.c</label>
        <link refid="zigbee__zcl_8c"/>
        <childnode refid="1693" relation="include">
        </childnode>
        <childnode refid="1694" relation="include">
        </childnode>
        <childnode refid="1695" relation="include">
        </childnode>
        <childnode refid="1696" relation="include">
        </childnode>
        <childnode refid="1700" relation="include">
        </childnode>
        <childnode refid="1701" relation="include">
        </childnode>
        <childnode refid="1703" relation="include">
        </childnode>
        <childnode refid="1704" relation="include">
        </childnode>
      </node>
      <node id="1693">
        <label>errno.h</label>
      </node>
      <node id="1698">
        <label>xbee/jslong_glue.h</label>
        <link refid="jslong__glue_8h_source"/>
        <childnode refid="1699" relation="include">
        </childnode>
      </node>
      <node id="1697">
        <label>stddef.h</label>
      </node>
      <node id="1701">
        <label>wpan/aps.h</label>
        <link refid="aps_8h"/>
        <childnode refid="1702" relation="include">
        </childnode>
      </node>
      <node id="1700">
        <label>xbee/byteorder.h</label>
        <link refid="byteorder_8h"/>
        <childnode refid="1694" relation="include">
        </childnode>
        <childnode refid="1696" relation="include">
        </childnode>
      </node>
      <node id="1703">
        <label>zigbee/zcl.h</label>
        <link refid="zcl_8h"/>
        <childnode refid="1696" relation="include">
        </childnode>
        <childnode refid="1701" relation="include">
        </childnode>
        <childnode refid="1704" relation="include">
        </childnode>
      </node>
      <node id="1694">
        <label>string.h</label>
      </node>
      <node id="1702">
        <label>wpan/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="1696" relation="include">
        </childnode>
      </node>
      <node id="1696">
        <label>xbee/platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="1693" relation="include">
        </childnode>
        <childnode refid="1697" relation="include">
        </childnode>
        <childnode refid="1698" relation="include">
        </childnode>
      </node>
      <node id="1704">
        <label>zigbee/zcl_types.h</label>
        <link refid="zcl__types_8h"/>
        <childnode refid="1696" relation="include">
        </childnode>
        <childnode refid="1700" relation="include">
        </childnode>
        <childnode refid="1705" relation="include">
        </childnode>
      </node>
      <node id="1705">
        <label>zigbee/zcl64.h</label>
        <link refid="zcl64_8h"/>
        <childnode refid="1696" relation="include">
        </childnode>
      </node>
      <node id="1699">
        <label>xbee/jslong.h</label>
        <link refid="jslong_8h_source"/>
      </node>
      <node id="1695">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__zcl_1ga1d1ebe413ff0242049bed47dc8ffefe9" prot="public" static="no">
        <name>zigbee_zcl_debug</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zigbee_zcl.c" line="38" column="10" bodyfile="src/zigbee/zigbee_zcl.c" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__zcl_1ga0b1185c5098f4fa736010b594ab2b71f" prot="public" static="no">
        <name>ZCL_DISCOVER_ATTRIB_MAX</name>
        <initializer>20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zigbee_zcl.c" line="1350" column="9" bodyfile="src/zigbee/zigbee_zcl.c" bodystart="1350" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group__zcl_1gad1e7f7dd501a7ab02f6004e4091c6bea" prot="public" static="no" mutable="no">
        <type>const <ref refid="structzcl__attribute__tree__t" kindref="compound">zcl_attribute_tree_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref></type>
        <definition>const zcl_attribute_tree_t FAR zcl_attributes_none[1]</definition>
        <argsstring>[1]</argsstring>
        <name>zcl_attributes_none</name>
        <initializer>=
	{ { ZCL_MFG_NONE, NULL, NULL } }</initializer>
        <briefdescription>
<para>If a cluster doesn&apos;t have attributes, use zcl_attributes_none (a single, empty attribute list) in the cluster definition. </para>        </briefdescription>
        <detaileddescription>
<para>Don&apos;t use NULL, since the APS dispatcher will use endpoint&apos;s context if the cluster&apos;s context is NULL. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zigbee_zcl.c" line="49" column="1" bodyfile="src/zigbee/zigbee_zcl.c" bodystart="49" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__zcl_1ga947f6103f6bbe716ddeacbaed65e3ce3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>zigbee_zcl_debug int</type>
        <definition>int zcl_send_response</definition>
        <argsstring>(zcl_command_t *request, const void FAR *response, uint16_t length)</argsstring>
        <name>zcl_send_response</name>
        <param>
          <type><ref refid="structzcl__command__t" kindref="compound">zcl_command_t</ref> *</type>
          <declname>request</declname>
        </param>
        <param>
          <type>const void <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>response</declname>
        </param>
        <param>
          <type><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref></type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Send a response to a ZCL command. </para>        </briefdescription>
        <detaileddescription>
<para>Uses information from the command received to populate fields in the response.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">request</parametername>
</parameternamelist>
<parameterdescription>
<para>command to respond to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">response</parametername>
</parameternamelist>
<parameterdescription>
<para>payload to send as response </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes in <emphasis>response</emphasis> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>successfully sent response </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!0</parametername>
</parameternamelist>
<parameterdescription>
<para>error on send </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zigbee_zcl.c" line="69" column="1" bodyfile="src/zigbee/zigbee_zcl.c" bodystart="69" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="group__zcl_1ga66d9c3c646422e71fed6c94d67c14fdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>zigbee_zcl_debug const <ref refid="structzcl__attribute__base__t" kindref="compound">zcl_attribute_base_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
        <definition>const zcl_attribute_base_t FAR * zcl_attribute_get_next</definition>
        <argsstring>(const zcl_attribute_base_t FAR *entry)</argsstring>
        <name>zcl_attribute_get_next</name>
        <param>
          <type>const <ref refid="structzcl__attribute__base__t" kindref="compound">zcl_attribute_base_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>entry</declname>
        </param>
        <briefdescription>
<para>Return a pointer to the next attribute entry from an attribute table. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">entry</parametername>
</parameternamelist>
<parameterdescription>
<para>current entry from the table</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>NULL</parametername>
</parameternamelist>
<parameterdescription>
<para>entry was NULL </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!NULL</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to next attribute record</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>If <emphasis>entry</emphasis> points to the last entry in the table, this function will return the same address instead of advancing off the end of the table.</para></simplesect>
<simplesect kind="see"><para><ref refid="group__zcl_1ga00ac8dd36cad01d9479a84c296380f40" kindref="member">zcl_find_attribute</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zigbee_zcl.c" line="118" column="1" bodyfile="src/zigbee/zigbee_zcl.c" bodystart="118" bodyend="143"/>
        <references refid="group__zcl_1gab05da20cf1dfaef97e20dfca2fd26d14" compoundref="zcl_8h" startline="852">ZCL_ATTRIBUTE_END_OF_LIST</references>
        <referencedby refid="group__zcl__client_1ga11f72950e4467286ef18468fbcb4bed4" compoundref="zcl__client_8c" startline="426" endline="465">zcl_create_attribute_records</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__zcl_1ga00ac8dd36cad01d9479a84c296380f40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>zigbee_zcl_debug const <ref refid="structzcl__attribute__base__t" kindref="compound">zcl_attribute_base_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
        <definition>const zcl_attribute_base_t FAR * zcl_find_attribute</definition>
        <argsstring>(const zcl_attribute_base_t FAR *entry, uint16_t search_id)</argsstring>
        <name>zcl_find_attribute</name>
        <param>
          <type>const <ref refid="structzcl__attribute__base__t" kindref="compound">zcl_attribute_base_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>entry</declname>
        </param>
        <param>
          <type><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref></type>
          <declname>search_id</declname>
        </param>
        <briefdescription>
<para>Search the attribute table starting at <computeroutput>entry</computeroutput>, for attribute ID <computeroutput>search_id</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">entry</parametername>
</parameternamelist>
<parameterdescription>
<para>starting entry for search </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">search_id</parametername>
</parameternamelist>
<parameterdescription>
<para>attribute ID to look for</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>NULL</parametername>
</parameternamelist>
<parameterdescription>
<para>attribute id <computeroutput>search_id</computeroutput> not in list </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!NULL</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to attribute record </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zigbee_zcl.c" line="159" column="1" bodyfile="src/zigbee/zigbee_zcl.c" bodystart="159" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="group__zcl_1ga592c970c1f0bda49f1c618d2895dbc6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>zigbee_zcl_debug int</type>
        <definition>int zcl_build_header</definition>
        <argsstring>(zcl_header_response_t *rsp, zcl_command_t *cmd)</argsstring>
        <name>zcl_build_header</name>
        <param>
          <type><ref refid="group__zcl_1gaeac1f6671916dd0ad92b271080ec272a" kindref="member">zcl_header_response_t</ref> *</type>
          <declname>rsp</declname>
        </param>
        <param>
          <type><ref refid="structzcl__command__t" kindref="compound">zcl_command_t</ref> *</type>
          <declname>cmd</declname>
        </param>
        <briefdescription>
<para>Support function to fill in a ZCL response header. </para>        </briefdescription>
        <detaileddescription>
<para>Set the <computeroutput>frame_control</computeroutput>, <computeroutput>sequence</computeroutput> and optional <computeroutput>mfg_code</computeroutput> fields of the ZCL response header, and return the offset to the actual start of the header (non-mfg specific skips the first two bytes).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">rsp</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer to store header of response </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>command we&apos;re responding to</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>responding to manufacturer-specific command </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>2</parametername>
</parameternamelist>
<parameterdescription>
<para>responding to non-manufacturer-specific command </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>invalid parameter passed to function </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zigbee_zcl.c" line="199" column="1" bodyfile="src/zigbee/zigbee_zcl.c" bodystart="199" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="group__zcl_1gab5c99acba0d864acd326bcab46d1416e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>zigbee_zcl_debug int</type>
        <definition>int zcl_default_response</definition>
        <argsstring>(zcl_command_t *request, uint8_t status)</argsstring>
        <name>zcl_default_response</name>
        <param>
          <type><ref refid="structzcl__command__t" kindref="compound">zcl_command_t</ref> *</type>
          <declname>request</declname>
        </param>
        <param>
          <type><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref></type>
          <declname>status</declname>
        </param>
        <briefdescription>
<para>Send a Default Response (<ref refid="group__zcl_1ga92499f538455b8d5a525510fba54adb2" kindref="member">ZCL_CMD_DEFAULT_RESP</ref>) to a given command. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">request</parametername>
</parameternamelist>
<parameterdescription>
<para>command we&apos;re responding to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">status</parametername>
</parameternamelist>
<parameterdescription>
<para>status to use in the response (see ZCL_STATUS_* macros under &quot;ZCL Status Enumerations&quot; in <ref refid="zcl_8h" kindref="compound">zigbee/zcl.h</ref>)</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>successfully sent response, or response not required (message was broadcast, sent to the broadcast endpoint, or sender set the disable default response bit) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!0</parametername>
</parameternamelist>
<parameterdescription>
<para>error on send </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>invalid parameter passed to function </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zigbee_zcl.c" line="248" column="1" bodyfile="src/zigbee/zigbee_zcl.c" bodystart="248" bodyend="308"/>
        <references refid="group__xbee__atcmd_1ga1a5aaa930940857f68f245eeb89506b5" compoundref="atcmd_8h" startline="246">command</references>
        <references refid="group___s_x_a_1ga4233297bd31be5c273d4fb0758cc54d7" compoundref="sxa_8h" startline="70">PACKED_STRUCT</references>
        <references refid="group__xbee__atcmd_1gade818037fd6c985038ff29656089758d" compoundref="atcmd_8h" startline="328">status</references>
        <referencedby refid="group__zcl_1ga23e4657d006b8b39ac54f0ee61786910" compoundref="zigbee__zcl_8c" startline="1702" endline="1723">zcl_invalid_cluster</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__zcl_1ga87ee4a8117e0420786a109b1f590ddc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>zigbee_zcl_debug int</type>
        <definition>int zcl_check_minmax</definition>
        <argsstring>(const zcl_attribute_base_t FAR *entry, const uint8_t FAR *buffer_le)</argsstring>
        <name>zcl_check_minmax</name>
        <param>
          <type>const <ref refid="structzcl__attribute__base__t" kindref="compound">zcl_attribute_base_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>entry</declname>
        </param>
        <param>
          <type>const <ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>buffer_le</declname>
        </param>
        <briefdescription>
<para>Checks whether a new value from a Write Attributes command is within the limits specified for a given attribute. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">entry</parametername>
</parameternamelist>
<parameterdescription>
<para>entry to use for min/max check </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">buffer_le</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer with new value (in little-endian byte order), from write attributes command</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>new value is within range (or attribute doesn&apos;t have a min/max) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>invalid parameter passed to function </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!0</parametername>
</parameternamelist>
<parameterdescription>
<para>value is out of range </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zigbee_zcl.c" line="326" column="1" bodyfile="src/zigbee/zigbee_zcl.c" bodystart="326" bodyend="415"/>
        <references refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" compoundref="platform_8h" startline="370">FAR</references>
        <references refid="group__xbee__atcmd_1ga5bf2410fa8ec37f47f8afeba8dcc7f1b" compoundref="atcmd_8h" startline="360">value</references>
      </memberdef>
      <memberdef kind="function" id="group__zcl_1ga9f9ac99001185554fe24dc7b09c0b0b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>zigbee_zcl_debug int</type>
        <definition>int zcl_parse_attribute_record</definition>
        <argsstring>(const zcl_attribute_base_t FAR *entry, zcl_attribute_write_rec_t *write_rec)</argsstring>
        <name>zcl_parse_attribute_record</name>
        <param>
          <type>const <ref refid="structzcl__attribute__base__t" kindref="compound">zcl_attribute_base_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>entry</declname>
        </param>
        <param>
          <type><ref refid="structzcl__attribute__write__rec__t" kindref="compound">zcl_attribute_write_rec_t</ref> *</type>
          <declname>write_rec</declname>
        </param>
        <briefdescription>
<para>Parse an attribute record from a Write Attributes Request or a Read Attributes Response and possibly store the new attribute value. </para>        </briefdescription>
        <detaileddescription>
<para>If <ref refid="group__zcl_1ga928e86b414e2662235b7bb39ffaf0635" kindref="member">ZCL_ATTR_WRITE_FLAG_READ_RESP</ref> is set in <computeroutput>write_rec-&gt;flags</computeroutput>, <computeroutput>write_rec-&gt;buffer</computeroutput> will be parsed as a Read Attributes Response record. Otherwise, it&apos;s parsed as a Write Attributes Request record.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">entry</parametername>
</parameternamelist>
<parameterdescription>
<para>attribute table to search or NULL if there aren&apos;t any attributes on this cluster </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">write_rec</parametername>
</parameternamelist>
<parameterdescription>
<para>state information for parsing write request</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>&gt;=0</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes consumed from buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>invalid parameter passed to function </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para><xrefsect id="todo_1_todo000020"><xreftitle>Todo</xreftitle><xrefdescription><para>should we set a flag in write_rec to indicate that the status was not success? </para></xrefdescription></xrefsect></para>        </inbodydescription>
        <location file="src/zigbee/zigbee_zcl.c" line="437" column="1" bodyfile="src/zigbee/zigbee_zcl.c" bodystart="437" bodyend="596"/>
        <references refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" compoundref="platform_8h" startline="370">FAR</references>
        <references refid="group__zcl_1ga1d127017fb298b889f4ba24752d08b8e" compoundref="zcl_8h" startline="416">type</references>
      </memberdef>
      <memberdef kind="function" id="group__zcl_1ga405e1c70b6278aae3a307971433c9229" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>zigbee_zcl_debug <ref refid="group__hal__dos_1ga09a1e304d66d35dd47daffee9731edaa" kindref="member">uint32_t</ref></type>
        <definition>uint32_t zcl_convert_24bit</definition>
        <argsstring>(const void FAR *value_le, bool_t extend_sign)</argsstring>
        <name>zcl_convert_24bit</name>
        <param>
          <type>const void <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>value_le</declname>
        </param>
        <param>
          <type><ref refid="group__hal__dos_1ga04dd5074964518403bf944f2b240a5f8" kindref="member">bool_t</ref></type>
          <declname>extend_sign</declname>
        </param>
        <briefdescription>
<para>Convert a 24-bit (3-byte) little-endian value to a 32-bit value in host byte order. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value_le</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to 3 bytes to convert </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">extend_sign</parametername>
</parameternamelist>
<parameterdescription>
<para>if TRUE, set high byte of result to 0xFF if top bit of 24-bit value is set</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A 32-bit, host-byte-order version of the 24-bit, little-endian value passed in. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zigbee_zcl.c" line="613" column="1" bodyfile="src/zigbee/zigbee_zcl.c" bodystart="613" bodyend="636"/>
        <references refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" compoundref="platform_8h" startline="370">FAR</references>
      </memberdef>
      <memberdef kind="function" id="group__zcl_1ga15bf36dadccd7a045bad7d6f0842e25a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>zigbee_zcl_debug int</type>
        <definition>int zcl_decode_attribute</definition>
        <argsstring>(const zcl_attribute_base_t FAR *entry, zcl_attribute_write_rec_t *rec)</argsstring>
        <name>zcl_decode_attribute</name>
        <param>
          <type>const <ref refid="structzcl__attribute__base__t" kindref="compound">zcl_attribute_base_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>entry</declname>
        </param>
        <param>
          <type><ref refid="structzcl__attribute__write__rec__t" kindref="compound">zcl_attribute_write_rec_t</ref> *</type>
          <declname>rec</declname>
        </param>
        <briefdescription>
<para>Decode attribute value from a Write Attribute Request or Read Attribute Response record and optionally write to <computeroutput>entry</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">entry</parametername>
</parameternamelist>
<parameterdescription>
<para>entry from attribute table </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">rec</parametername>
</parameternamelist>
<parameterdescription>
<para>state information for parsing write request</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>&gt;=0</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes consumed from <computeroutput>rec-&gt;buffer</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>invalid parameter passed to function </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zigbee_zcl.c" line="652" column="1" bodyfile="src/zigbee/zigbee_zcl.c" bodystart="652" bodyend="817"/>
        <references refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" compoundref="platform_8h" startline="370">FAR</references>
        <references refid="group__zdo_1gab2b3adeb2a67e656ff030b56727fd0ac" compoundref="zdo_8h" startline="410">length</references>
        <referencedby refid="group__zcl__identify_1ga40470468c9c1fe4ebfb52612234710b0" compoundref="zcl__identify_8c" startline="104" endline="121">_zcl_identify_time_set</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__zcl_1gaff3abb5d2022101c2873e7a8e8b027e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>zigbee_zcl_debug int _zcl_write_attributes</definition>
        <argsstring>(zcl_command_t *cmd)</argsstring>
        <name>_zcl_write_attributes</name>
        <param>
          <type><ref refid="structzcl__command__t" kindref="compound">zcl_command_t</ref> *</type>
          <declname>cmd</declname>
        </param>
        <briefdescription>
<para>Process the three types of Write Attributes requests. </para>        </briefdescription>
        <detaileddescription>
<internal><para>Handles Write Attributes (<ref refid="group__zcl_1ga8843c2bcb861c091ae6f9a4e36f7e4d8" kindref="member">ZCL_CMD_WRITE_ATTRIB</ref>), Write Attributes Undivided (<ref refid="group__zcl_1ga9d67bef86e1ec74d60c06e1a09cfb86a" kindref="member">ZCL_CMD_WRITE_ATTRIB_UNDIV</ref>) and Write Attributes No Response (<ref refid="group__zcl_1ga57091c6a11fbc2680ac63fa262bf74ca" kindref="member">ZCL_CMD_WRITE_ATTRIB_NORESP</ref>).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>command to respond to</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>successfully sent response or &quot;No Response&quot; requested </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!0</parametername>
</parameternamelist>
<parameterdescription>
<para>error on send</para></parameterdescription>
</parameteritem>
</parameterlist>
<xrefsect id="todo_1_todo000021"><xreftitle>Todo</xreftitle><xrefdescription><para>Generate error if command is not one of the three expected commands.</para></xrefdescription></xrefsect></para><para><xrefsect id="todo_1_todo000022"><xreftitle>Todo</xreftitle><xrefdescription><para>Update to limit number of status records in response. </para></xrefdescription></xrefsect></para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zigbee_zcl.c" line="820" column="1" bodyfile="src/zigbee/zigbee_zcl.c" bodystart="841" bodyend="927"/>
        <references refid="group__zdo_1gab2b3adeb2a67e656ff030b56727fd0ac" compoundref="zdo_8h" startline="410">length</references>
        <references refid="group___s_x_a_1ga4233297bd31be5c273d4fb0758cc54d7" compoundref="sxa_8h" startline="70">PACKED_STRUCT</references>
        <references refid="group__xbee__atcmd_1gade818037fd6c985038ff29656089758d" compoundref="atcmd_8h" startline="328">status</references>
      </memberdef>
      <memberdef kind="function" id="group__zcl_1ga4387e5f016fb26d1ac43b24f78aa066a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>zigbee_zcl_debug int</type>
        <definition>zigbee_zcl_debug int _zcl_encode_struct_value</definition>
        <argsstring>(uint8_t FAR *buffer, int16_t bufsize, const zcl_struct_t FAR *zcl_struct)</argsstring>
        <name>_zcl_encode_struct_value</name>
        <param>
          <type><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="group__hal__dos_1ga2140805d08462d474b82ddc8d1c2f3e6" kindref="member">int16_t</ref></type>
          <declname>bufsize</declname>
        </param>
        <param>
          <type>const <ref refid="structzcl__struct__t" kindref="compound">zcl_struct_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>zcl_struct</declname>
        </param>
        <briefdescription>
<para>Format a ZCL struct for a Read Attributes Response or a Write Attributes Request. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer to store encoded attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bufsize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes available in <computeroutput>buffer</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">zcl_struct</parametername>
</parameternamelist>
<parameterdescription>
<para>struct to encode into <computeroutput>buffer</computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
Copies the value of attribute <computeroutput>entry</computeroutput> to <computeroutput>buffer</computeroutput> in little-endian byte order. Will not write more than <computeroutput>bufsize</computeroutput> bytes. Used to build ZCL frames.</para><para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>-ZCL_STATUS_INSUFFICIENT_SPACE</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer too small to encode value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ZCL_STATUS_FAILURE</parametername>
</parameternamelist>
<parameterdescription>
<para>unknown/unsupported attribute type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ZCL_STATUS_HARDWARE_FAILURE</parametername>
</parameternamelist>
<parameterdescription>
<para>failure updating attribute value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ZCL_STATUS_SOFTWARE_FAILURE</parametername>
</parameternamelist>
<parameterdescription>
<para>failure updating attribute value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>&gt;=0</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes written</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__zcl_1gae3f7f58d3b08caf95aa11f90e3995397" kindref="member">zcl_encode_attribute_value</ref> </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zigbee_zcl.c" line="953" column="1" bodyfile="src/zigbee/zigbee_zcl.c" bodystart="953" bodyend="998"/>
        <references refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" compoundref="platform_8h" startline="370">FAR</references>
      </memberdef>
      <memberdef kind="function" id="group__zcl_1gaae79107724236347a5e22612869df2bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>zigbee_zcl_debug int</type>
        <definition>zigbee_zcl_debug int _zcl_encode_array_value</definition>
        <argsstring>(uint8_t FAR *buffer, int16_t bufsize, const zcl_array_t FAR *array)</argsstring>
        <name>_zcl_encode_array_value</name>
        <param>
          <type><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="group__hal__dos_1ga2140805d08462d474b82ddc8d1c2f3e6" kindref="member">int16_t</ref></type>
          <declname>bufsize</declname>
        </param>
        <param>
          <type>const <ref refid="structzcl__array__t" kindref="compound">zcl_array_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>array</declname>
        </param>
        <briefdescription>
<para>Format a ZCL array for a Read Attributes Response or a Write Attributes Request. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer to store encoded attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bufsize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes available in <computeroutput>buffer</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">array</parametername>
</parameternamelist>
<parameterdescription>
<para>array to encode into <computeroutput>buffer</computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
Copies the value of attribute <computeroutput>entry</computeroutput> to <computeroutput>buffer</computeroutput> in little-endian byte order. Will not write more than <computeroutput>bufsize</computeroutput> bytes. Used to build ZCL frames.</para><para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>-ZCL_STATUS_INSUFFICIENT_SPACE</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer too small to encode value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ZCL_STATUS_FAILURE</parametername>
</parameternamelist>
<parameterdescription>
<para>unknown/unsupported attribute type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ZCL_STATUS_HARDWARE_FAILURE</parametername>
</parameternamelist>
<parameterdescription>
<para>failure updating attribute value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ZCL_STATUS_SOFTWARE_FAILURE</parametername>
</parameternamelist>
<parameterdescription>
<para>failure updating attribute value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>&gt;=0</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes written</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__zcl_1gae3f7f58d3b08caf95aa11f90e3995397" kindref="member">zcl_encode_attribute_value</ref> </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zigbee_zcl.c" line="1022" column="1" bodyfile="src/zigbee/zigbee_zcl.c" bodystart="1022" bodyend="1063"/>
        <references refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" compoundref="platform_8h" startline="370">FAR</references>
      </memberdef>
      <memberdef kind="function" id="group__zcl_1gae3f7f58d3b08caf95aa11f90e3995397" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>zigbee_zcl_debug int</type>
        <definition>int zcl_encode_attribute_value</definition>
        <argsstring>(uint8_t FAR *buffer, int16_t bufsize, const zcl_attribute_base_t FAR *entry)</argsstring>
        <name>zcl_encode_attribute_value</name>
        <param>
          <type><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="group__hal__dos_1ga2140805d08462d474b82ddc8d1c2f3e6" kindref="member">int16_t</ref></type>
          <declname>bufsize</declname>
        </param>
        <param>
          <type>const <ref refid="structzcl__attribute__base__t" kindref="compound">zcl_attribute_base_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>entry</declname>
        </param>
        <briefdescription>
<para>Format a ZCL attribute&apos;s value for a Read Attributes Response or a Write Attributes Request. </para>        </briefdescription>
        <detaileddescription>
<para>Copies the value of attribute <computeroutput>entry</computeroutput> to <computeroutput>buffer</computeroutput> in little-endian byte order. Will not write more than <computeroutput>bufsize</computeroutput> bytes. Used to build ZCL frames.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer to store encoded attribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bufsize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes available in <computeroutput>buffer</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">entry</parametername>
</parameternamelist>
<parameterdescription>
<para>attribute to encode into <computeroutput>buffer</computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>-ZCL_STATUS_SOFTWARE_FAILURE</parametername>
</parameternamelist>
<parameterdescription>
<para>invalid parameter passed in </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ZCL_STATUS_DEFINED_OUT_OF_BAND</parametername>
</parameternamelist>
<parameterdescription>
<para>ghost attribute with NULL <computeroutput>value</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ZCL_STATUS_INSUFFICIENT_SPACE</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer too small to encode value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ZCL_STATUS_FAILURE</parametername>
</parameternamelist>
<parameterdescription>
<para>unknown/unsupported attribute type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ZCL_STATUS_HARDWARE_FAILURE</parametername>
</parameternamelist>
<parameterdescription>
<para>failure updating attribute value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ZCL_STATUS_SOFTWARE_FAILURE</parametername>
</parameternamelist>
<parameterdescription>
<para>failure updating attribute value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>&gt;=0</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes written </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zigbee_zcl.c" line="1087" column="1" bodyfile="src/zigbee/zigbee_zcl.c" bodystart="1087" bodyend="1223"/>
        <references refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" compoundref="platform_8h" startline="370">FAR</references>
        <references refid="group__xbee__atcmd_1gade818037fd6c985038ff29656089758d" compoundref="atcmd_8h" startline="328">status</references>
        <references refid="group__zcl_1ga1d127017fb298b889f4ba24752d08b8e" compoundref="zcl_8h" startline="416">type</references>
        <referencedby refid="group__zcl__client_1ga11f72950e4467286ef18468fbcb4bed4" compoundref="zcl__client_8c" startline="426" endline="465">zcl_create_attribute_records</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__zcl_1gaa34c917bf05a57503e63553efcb77dc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>zigbee_zcl_debug int _zcl_read_attributes</definition>
        <argsstring>(zcl_command_t *cmd)</argsstring>
        <name>_zcl_read_attributes</name>
        <param>
          <type><ref refid="structzcl__command__t" kindref="compound">zcl_command_t</ref> *</type>
          <declname>cmd</declname>
        </param>
        <briefdescription>
<para>Process the Read Attributes Command (<ref refid="group__zcl_1ga7a3d858b466e4202c6f2148a1b6a3eb2" kindref="member">ZCL_CMD_READ_ATTRIB</ref>). </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>command to respond to</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>successfully sent response </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!0</parametername>
</parameternamelist>
<parameterdescription>
<para>error on send </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>NULL <computeroutput>cmd</computeroutput> parameter </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zigbee_zcl.c" line="1226" column="1" bodyfile="src/zigbee/zigbee_zcl.c" bodystart="1240" bodyend="1344"/>
        <references refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" compoundref="platform_8h" startline="370">FAR</references>
      </memberdef>
      <memberdef kind="function" id="group__zcl_1ga385c41594437cdf661bfb518f11ee0fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>zigbee_zcl_debug int _zcl_discover_attributes</definition>
        <argsstring>(zcl_command_t *cmd)</argsstring>
        <name>_zcl_discover_attributes</name>
        <param>
          <type><ref refid="structzcl__command__t" kindref="compound">zcl_command_t</ref> *</type>
          <declname>cmd</declname>
        </param>
        <briefdescription>
<para>Process the Discover Attributes Command (<ref refid="group__zcl_1ga2919d6fc8068efac4c9969938a4b9ff5" kindref="member">ZCL_CMD_DISCOVER_ATTRIB</ref>). </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>command to respond to</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>successfully sent response </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!0</parametername>
</parameternamelist>
<parameterdescription>
<para>error on send </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zigbee_zcl.c" line="1348" column="1" bodyfile="src/zigbee/zigbee_zcl.c" bodystart="1361" bodyend="1447"/>
        <references refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" compoundref="platform_8h" startline="370">FAR</references>
        <references refid="group___s_x_a_1ga4233297bd31be5c273d4fb0758cc54d7" compoundref="sxa_8h" startline="70">PACKED_STRUCT</references>
      </memberdef>
      <memberdef kind="function" id="group__zcl_1gadeb35ab493fffec9ba1c33f658929136" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>zigbee_zcl_debug int</type>
        <definition>int zcl_command_build</definition>
        <argsstring>(zcl_command_t *cmd, const wpan_envelope_t FAR *envelope, zcl_attribute_tree_t FAR *tree)</argsstring>
        <name>zcl_command_build</name>
        <param>
          <type><ref refid="structzcl__command__t" kindref="compound">zcl_command_t</ref> *</type>
          <declname>cmd</declname>
        </param>
        <param>
          <type>const <ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>envelope</declname>
        </param>
        <param>
          <type><ref refid="structzcl__attribute__tree__t" kindref="compound">zcl_attribute_tree_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>tree</declname>
        </param>
        <briefdescription>
<para>Parse a ZCL request and store in a <ref refid="structzcl__command__t" kindref="compound">zcl_command_t</ref> structure with fields in fixed locations (therefore easier to use than the variable-length frame header). </para>        </briefdescription>
        <detaileddescription>
<para>Also uses the direction bit and manufacturer ID to search the attribute tree for the correct list of attributes.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer to store parsed ZCL command </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">envelope</parametername>
</parameternamelist>
<parameterdescription>
<para>envelope from received message </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tree</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to attribute tree for cluster or NULL if the cluster doesn&apos;t have any attributes (typically passed in via endpoint dispatcher)</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>parsed payload from <computeroutput>envelope</computeroutput> into <computeroutput>cmd</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>invalid parameter passed to function </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EBADMSG</parametername>
</parameternamelist>
<parameterdescription>
<para>frame is too small for ZCL header&apos;s frame_control value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zigbee_zcl.c" line="1474" column="1" bodyfile="src/zigbee/zigbee_zcl.c" bodystart="1474" bodyend="1545"/>
        <references refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" compoundref="platform_8h" startline="370">FAR</references>
        <referencedby refid="group__zcl__basic_1ga3a10395a400ea91bf9a3c37dcda69085" compoundref="zcl__basic_8c" startline="50" endline="72">_zcl_basic_server</referencedby>
        <referencedby refid="group__zcl__onoff_1gae7dc87cd27559c9ae0499ac542ab6107" compoundref="zcl__onoff_8c" startline="38" endline="70">_zcl_onoff_handler</referencedby>
        <referencedby refid="group__zcl_1gac3849121e93e777ce9a7510d24517b9b" compoundref="zigbee__zcl_8c" startline="1803" endline="1889">zcl_general_command</referencedby>
        <referencedby refid="group__zcl__identify_1ga94a1fe7c8892b55e0ffd3e2795139b1d" compoundref="zcl__identify_8c" startline="181" endline="243">zcl_identify_command</referencedby>
        <referencedby refid="group__zcl_1ga23e4657d006b8b39ac54f0ee61786910" compoundref="zigbee__zcl_8c" startline="1702" endline="1723">zcl_invalid_cluster</referencedby>
        <referencedby refid="group__zcl_1ga4251fbed33d85d2f7bbccb48857cae95" compoundref="zigbee__zcl_8c" startline="1747" endline="1778">zcl_invalid_command</referencedby>
        <referencedby refid="group__zcl__time_1ga2c66ee215547beae5b5dde4f23cc8e00" compoundref="zcl__time_8c" startline="291" endline="392">zcl_time_client</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__zcl_1gaca5c04dd787b041bf40f3b2a4463bb70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>zigbee_zcl_debug void</type>
        <definition>void zcl_command_dump</definition>
        <argsstring>(const zcl_command_t *cmd)</argsstring>
        <name>zcl_command_dump</name>
        <param>
          <type>const <ref refid="structzcl__command__t" kindref="compound">zcl_command_t</ref> *</type>
          <declname>cmd</declname>
        </param>
        <briefdescription>
<para>Debugging routine that dumps contents of a parsed ZCL command structure to STDOUT. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cmd</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structzcl__command__t" kindref="compound">zcl_command_t</ref> structure populated by <ref refid="group__zcl_1gadeb35ab493fffec9ba1c33f658929136" kindref="member">zcl_command_build()</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zigbee_zcl.c" line="1560" column="1" bodyfile="src/zigbee/zigbee_zcl.c" bodystart="1560" bodyend="1650"/>
        <references refid="group__hal_1ga2fb602f8a5b3533a57c2c4b92f248569" compoundref="platform_8h" startline="438">_TABLE_ENTRIES</references>
        <references refid="group__zcl_1ga1a5aaa930940857f68f245eeb89506b5" compoundref="zcl_8h" startline="889">zcl_command_t::command</references>
        <references refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" compoundref="platform_8h" startline="370">FAR</references>
        <references refid="group__zcl_1ga5226462a41663bc81a5d67c04f18868a" compoundref="zcl_8h" startline="882">zcl_command_t::frame_control</references>
        <references refid="group__zdo_1gab2b3adeb2a67e656ff030b56727fd0ac" compoundref="zdo_8h" startline="410">length</references>
        <references refid="group__zcl_1ga0ff9f63e333676ba1359f505d02dd281" compoundref="zcl_8h" startline="897">zcl_command_t::length</references>
        <references refid="group__zcl_1ga011fb17c1112658806badaccba7a246d" compoundref="zcl_8h" startline="885">zcl_command_t::mfg_code</references>
        <references refid="group__zcl_1gacb5c8866a58116314f6c8eda9dc3544c" compoundref="zcl_8h" startline="887">zcl_command_t::sequence</references>
        <references refid="group__zcl_1ga92499f538455b8d5a525510fba54adb2" compoundref="zcl_8h" startline="391">ZCL_CMD_DEFAULT_RESP</references>
        <references refid="group__zcl_1ga0595c0f6957be4e80265ecd36158c0ae" compoundref="zcl_8h" startline="372">ZCL_CMD_WRITE_ATTRIB_RESP</references>
        <references refid="group__zcl_1ga245f966df7431d5b9268bbf227770173" compoundref="zcl_8h" startline="231">ZCL_FRAME_CLIENT_TO_SERVER</references>
        <references refid="group__zcl_1ga38975849d925ebb3643cb9f5d62b68fe" compoundref="zcl_8h" startline="229">ZCL_FRAME_DIRECTION</references>
        <references refid="group__zcl_1ga080b9f73f48767fc6af9b5da27d30d70" compoundref="zcl_8h" startline="236">ZCL_FRAME_DISABLE_DEF_RESP</references>
        <references refid="group__zcl_1gad2e6a61d29cd303e906699a49fa2eb8e" compoundref="zcl_8h" startline="215">ZCL_FRAME_TYPE_MASK</references>
        <references refid="group__zcl_1ga332a452ea08eb67a3ebf962320bf8819" compoundref="zcl_8h" startline="217">ZCL_FRAME_TYPE_PROFILE</references>
        <references refid="group__zcl_1gaf0e34793a3febabcdb61c020aecbf805" compoundref="zcl_8h" startline="895">zcl_command_t::zcl_payload</references>
        <references refid="group__zcl_1ga04c32f1b9f6c36fae06e9bed5bd8f7dd" compoundref="zigbee__zcl_8c" startline="1902" endline="1947">zcl_status_text</references>
      </memberdef>
      <memberdef kind="function" id="group__zcl_1ga2057f6176d44e9fad2df4f619e5777d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void zcl_envelope_payload_dump</definition>
        <argsstring>(const wpan_envelope_t *envelope)</argsstring>
        <name>zcl_envelope_payload_dump</name>
        <param>
          <type>const <ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref> *</type>
          <declname>envelope</declname>
        </param>
        <briefdescription>
<para>Debugging routine that parses an envelope payload as a ZCL command and dumps a parsed copy to STDOUT. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">envelope</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref> structure with a ZCL command payload </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zigbee_zcl.c" line="1661" column="1" bodyfile="src/zigbee/zigbee_zcl.c" bodystart="1661" bodyend="1682"/>
      </memberdef>
      <memberdef kind="function" id="group__zcl_1ga23e4657d006b8b39ac54f0ee61786910" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>zigbee_zcl_debug int</type>
        <definition>int zcl_invalid_cluster</definition>
        <argsstring>(const wpan_envelope_t FAR *envelope, wpan_ep_state_t FAR *ep_state)</argsstring>
        <name>zcl_invalid_cluster</name>
        <param>
          <type>const <ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>envelope</declname>
        </param>
        <param>
          <type><ref refid="structwpan__ep__state__t" kindref="compound">wpan_ep_state_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>ep_state</declname>
        </param>
        <briefdescription>
<para>Called if a request comes in for an invalid endpoint/cluster combination. </para>        </briefdescription>
        <detaileddescription>
<para>Sends a Default Response (<ref refid="group__zcl_1ga92499f538455b8d5a525510fba54adb2" kindref="member">ZCL_CMD_DEFAULT_RESP</ref>) of #ZCL_STATUS_FAILURE unless the received command was a Default Response or was broadcast.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">envelope</parametername>
</parameternamelist>
<parameterdescription>
<para>envelope from received message </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ep_state</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to endpoint&apos;s <ref refid="structwpan__ep__state__t" kindref="compound">wpan_ep_state_t</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>command was a default response (and therefore ignored), or a default response was successfully sent </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!0</parametername>
</parameternamelist>
<parameterdescription>
<para>error sending response </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zigbee_zcl.c" line="1702" column="1" bodyfile="src/zigbee/zigbee_zcl.c" bodystart="1702" bodyend="1723"/>
        <references refid="group__hal_1gacddb73dac3fd1bdec26cd7dc0a652c00" compoundref="platform_8h" startline="399">XBEE_UNUSED_PARAMETER</references>
        <references refid="group__zcl_1gadeb35ab493fffec9ba1c33f658929136" compoundref="zigbee__zcl_8c" startline="1474" endline="1545">zcl_command_build</references>
        <references refid="group__zcl_1gab5c99acba0d864acd326bcab46d1416e" compoundref="zigbee__zcl_8c" startline="248" endline="308">zcl_default_response</references>
      </memberdef>
      <memberdef kind="function" id="group__zcl_1ga4251fbed33d85d2f7bbccb48857cae95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>zigbee_zcl_debug int</type>
        <definition>int zcl_invalid_command</definition>
        <argsstring>(const wpan_envelope_t FAR *envelope)</argsstring>
        <name>zcl_invalid_command</name>
        <param>
          <type>const <ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>envelope</declname>
        </param>
        <briefdescription>
<para>Called if a request comes in for an invalid command on a valid endpoint/cluster combination. </para>        </briefdescription>
        <detaileddescription>
<para>Sends a Default Response (<ref refid="group__zcl_1ga92499f538455b8d5a525510fba54adb2" kindref="member">ZCL_CMD_DEFAULT_RESP</ref>) unless the received command was a Default Response or was broadcast. Depending on the command received, the response will be one of:<itemizedlist>
<listitem><para>ZCL_STATUS_UNSUP_CLUSTER_COMMAND</para></listitem><listitem><para>ZCL_STATUS_UNSUP_GENERAL_COMMAND</para></listitem><listitem><para>ZCL_STATUS_UNSUP_MANUF_CLUSTER_COMMAND</para></listitem><listitem><para>ZCL_STATUS_UNSUP_MANUF_GENERAL_COMMAND</para></listitem></itemizedlist>
</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">envelope</parametername>
</parameternamelist>
<parameterdescription>
<para>envelope from received message</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>default response was successfully sent, or command did not require a default response </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!0</parametername>
</parameternamelist>
<parameterdescription>
<para>error building or sending response </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zigbee_zcl.c" line="1747" column="1" bodyfile="src/zigbee/zigbee_zcl.c" bodystart="1747" bodyend="1778"/>
        <references refid="group__zcl_1ga5226462a41663bc81a5d67c04f18868a" compoundref="zcl_8h" startline="882">zcl_command_t::frame_control</references>
        <references refid="group__xbee__atcmd_1gade818037fd6c985038ff29656089758d" compoundref="atcmd_8h" startline="328">status</references>
        <references refid="group__zcl_1gadeb35ab493fffec9ba1c33f658929136" compoundref="zigbee__zcl_8c" startline="1474" endline="1545">zcl_command_build</references>
        <references refid="group__zcl_1ga48ffbdfe840975527d8e9e6d86c12dae" compoundref="zcl_8h" startline="226">ZCL_FRAME_MFG_SPECIFIC</references>
      </memberdef>
      <memberdef kind="function" id="group__zcl_1gac3849121e93e777ce9a7510d24517b9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>zigbee_zcl_debug int</type>
        <definition>int zcl_general_command</definition>
        <argsstring>(const wpan_envelope_t FAR *envelope, void FAR *context)</argsstring>
        <name>zcl_general_command</name>
        <param>
          <type>const <ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>envelope</declname>
        </param>
        <param>
          <type>void <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Handler for ZCL General Commands. </para>        </briefdescription>
        <detaileddescription>
<para>Used as the handler for attribute-only clusters (e.g., Basic Cluster), or called from a cluster&apos;s handler for commands it doesn&apos;t handle.</para><para>Will send a Default Response for commands it can&apos;t handle.</para><para>Currently does not support attribute reporting.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">envelope</parametername>
</parameternamelist>
<parameterdescription>
<para>envelope from received message </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">context</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to attribute tree for cluster or NULL if the cluster doesn&apos;t have any attributes (typically passed in via endpoint dispatcher)</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>command was processed, including sending a possible response </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!0</parametername>
</parameternamelist>
<parameterdescription>
<para>error sending response or processing command </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zigbee_zcl.c" line="1803" column="1" bodyfile="src/zigbee/zigbee_zcl.c" bodystart="1803" bodyend="1889"/>
        <references refid="group__zcl_1gadeb35ab493fffec9ba1c33f658929136" compoundref="zigbee__zcl_8c" startline="1474" endline="1545">zcl_command_build</references>
      </memberdef>
      <memberdef kind="function" id="group__zcl_1ga04c32f1b9f6c36fae06e9bed5bd8f7dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>zigbee_zcl_debug const char *</type>
        <definition>const char * zcl_status_text</definition>
        <argsstring>(uint_fast8_t status)</argsstring>
        <name>zcl_status_text</name>
        <param>
          <type>uint_fast8_t</type>
          <declname>status</declname>
        </param>
        <briefdescription>
<para>Converts a ZCL status byte (one of the ZCL_STATUS_* macros) into a string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">status</parametername>
</parameternamelist>
<parameterdescription>
<para>status byte to convert</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to an unmodifiable string with a description of the status </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zigbee_zcl.c" line="1902" column="1" bodyfile="src/zigbee/zigbee_zcl.c" bodystart="1902" bodyend="1947"/>
        <referencedby refid="group__zcl_1gaca5c04dd787b041bf40f3b2a4463bb70" compoundref="zigbee__zcl_8c" startline="1560" endline="1650">zcl_command_dump</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Process General Commands for ZigBee Cluster Library and provide support functions to other layers of the stack. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="note"><para>For performance, on a low-resource, single-threaded system, the <ref refid="structzcl__command__t" kindref="compound">zcl_command_t</ref> object should be a global instead of building it on the stack of zcl_general_command and then passing a pointer around to the other functions. </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2010-2012<sp/>Digi<sp/>International<sp/>Inc.,</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>not<sp/>expressly<sp/>granted<sp/>are<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>Source<sp/>Code<sp/>Form<sp/>is<sp/>subject<sp/>to<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>Mozilla<sp/>Public</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>License,<sp/>v.<sp/>2.0.<sp/>If<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>MPL<sp/>was<sp/>not<sp/>distributed<sp/>with<sp/>this<sp/>file,</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>You<sp/>can<sp/>obtain<sp/>one<sp/>at<sp/>http://mozilla.org/MPL/2.0/.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>Digi<sp/>International<sp/>Inc.<sp/>11001<sp/>Bren<sp/>Road<sp/>East,<sp/>Minnetonka,<sp/>MN<sp/>55343</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>=======================================================================</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="comment">/***<sp/>BeginHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="platform_8h" kindref="compound">xbee/platform.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="byteorder_8h" kindref="compound">xbee/byteorder.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="aps_8h" kindref="compound">wpan/aps.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="zcl_8h" kindref="compound">zigbee/zcl.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="zcl__types_8h" kindref="compound">zigbee/zcl_types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__DC__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>zigbee_zcl_debug</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>ZIGBEE_ZCL_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>zigbee_zcl_debug<sp/><sp/><sp/><sp/><sp/><sp/>__debug</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>zigbee_zcl_debug<sp/><sp/><sp/><sp/><sp/><sp/>__nodebug</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>zcl_attributes_none<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>documented<sp/>in<sp/>zigbee/zcl.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="group__zcl_1gad1e7f7dd501a7ab02f6004e4091c6bea" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structzcl__attribute__tree__t" kindref="compound">zcl_attribute_tree_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/><ref refid="group__zcl_1gad1e7f7dd501a7ab02f6004e4091c6bea" kindref="member">zcl_attributes_none</ref>[1]<sp/>=</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/>{<sp/>{<sp/>ZCL_MFG_NONE,<sp/>NULL,<sp/>NULL<sp/>}<sp/>};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>zcl_send_response<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight></codeline>
<codeline lineno="68"><highlight class="normal">zigbee_zcl_debug</highlight></codeline>
<codeline lineno="69" refid="group__zcl_1ga947f6103f6bbe716ddeacbaed65e3ce3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__zcl_1ga947f6103f6bbe716ddeacbaed65e3ce3" kindref="member">zcl_send_response</ref>(<sp/><ref refid="structzcl__command__t" kindref="compound">zcl_command_t</ref><sp/>*request,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*response,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/><ref refid="group__zdo_1gab2b3adeb2a67e656ff030b56727fd0ac" kindref="member">length</ref>)</highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reply_envelope;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(request<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZCL_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>returning<sp/>-EINVAL\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>address<sp/>envelope<sp/>of<sp/>reply</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/>retval<sp/>=<sp/><ref refid="group__wpan__aps_1gaaaee02ff456d4f6103a5e94c2ba106c5" kindref="member">wpan_envelope_reply</ref>(<sp/>&amp;reply_envelope,<sp/>request-&gt;<ref refid="group__zcl_1ga1c24c7848d60bc6aa335a8ba9fd14b7a" kindref="member">envelope</ref>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retval<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reply_envelope.<ref refid="group__wpan__aps_1ga8737375e27cb391ff381fff10dc0c132" kindref="member">payload</ref><sp/>=<sp/>response;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reply_envelope.<ref refid="group__wpan__aps_1ga1892eba2086d12ac2b09005aeb09ea3b" kindref="member">length</ref><sp/>=<sp/><ref refid="group__zdo_1gab2b3adeb2a67e656ff030b56727fd0ac" kindref="member">length</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZCL_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>sending<sp/>%d-byte<sp/>response\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reply_envelope.<ref refid="group__wpan__aps_1ga1892eba2086d12ac2b09005aeb09ea3b" kindref="member">length</ref>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wpan__aps_1ga2a4e8b3e2022e55e6607243a5feb25cd" kindref="member">wpan_envelope_dump</ref>(<sp/>&amp;reply_envelope);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/><ref refid="group__wpan__aps_1ga06f1e9e86b74ef807ded44b79b13e283" kindref="member">wpan_envelope_send</ref>(<sp/>&amp;reply_envelope);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>zcl_attribute_get_next<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight></codeline>
<codeline lineno="117"><highlight class="normal">zigbee_zcl_debug</highlight></codeline>
<codeline lineno="118" refid="group__zcl_1ga66d9c3c646422e71fed6c94d67c14fdd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structzcl__attribute__base__t" kindref="compound">zcl_attribute_base_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*<ref refid="group__zcl_1ga66d9c3c646422e71fed6c94d67c14fdd" kindref="member">zcl_attribute_get_next</ref>(</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structzcl__attribute__base__t" kindref="compound">zcl_attribute_base_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*entry)</highlight></codeline>
<codeline lineno="120"><highlight class="normal">{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>entry)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(entry-&gt;id<sp/>==<sp/><ref refid="group__zcl_1gab05da20cf1dfaef97e20dfca2fd26d14" kindref="member">ZCL_ATTRIBUTE_END_OF_LIST</ref>)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZCL_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>already<sp/>at<sp/>end<sp/>of<sp/>list\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>advance<sp/>past<sp/>the<sp/>end<sp/>of<sp/>the<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>entry;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(entry-&gt;flags<sp/>&amp;<sp/><ref refid="group__zcl_1ga40104652d30fa17b7ea5dde9e8b788b8" kindref="member">ZCL_ATTRIB_FLAG_FULL</ref>)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>advance<sp/>pointer<sp/>over<sp/>a<sp/>zcl_attribute_full_t<sp/>record</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structzcl__attribute__base__t" kindref="compound">zcl_attribute_base_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structzcl__attribute__full__t" kindref="compound">zcl_attribute_full_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)entry<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(entry<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>zcl_find_attribute<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight></codeline>
<codeline lineno="158"><highlight class="normal">zigbee_zcl_debug</highlight></codeline>
<codeline lineno="159" refid="group__zcl_1ga00ac8dd36cad01d9479a84c296380f40" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structzcl__attribute__base__t" kindref="compound">zcl_attribute_base_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*<ref refid="group__zcl_1ga00ac8dd36cad01d9479a84c296380f40" kindref="member">zcl_find_attribute</ref>(</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structzcl__attribute__base__t" kindref="compound">zcl_attribute_base_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*entry,<sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/>search_id)</highlight></codeline>
<codeline lineno="161"><highlight class="normal">{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/><sp/><sp/><sp/>id;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>entry)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>entry-&gt;id;<sp/>id<sp/>&lt;<sp/>search_id;<sp/>id<sp/>=<sp/>entry-&gt;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>entry<sp/>=<sp/><ref refid="group__zcl_1ga66d9c3c646422e71fed6c94d67c14fdd" kindref="member">zcl_attribute_get_next</ref>(<sp/>entry);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>==<sp/>search_id)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>entry;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>zcl_build_header<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight></codeline>
<codeline lineno="198"><highlight class="normal">zigbee_zcl_debug</highlight></codeline>
<codeline lineno="199" refid="group__zcl_1ga592c970c1f0bda49f1c618d2895dbc6d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__zcl_1ga592c970c1f0bda49f1c618d2895dbc6d" kindref="member">zcl_build_header</ref>(<sp/><ref refid="group__zcl_1gaeac1f6671916dd0ad92b271080ec272a" kindref="member">zcl_header_response_t</ref><sp/>*rsp,<sp/><ref refid="structzcl__command__t" kindref="compound">zcl_command_t</ref><sp/>*cmd)</highlight></codeline>
<codeline lineno="200"><highlight class="normal">{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/>frame_control;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rsp<sp/>==<sp/>NULL<sp/>||<sp/>cmd<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZCL_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>returning<sp/>-EINVAL\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Keep<sp/>direction<sp/>&amp;<sp/>type<sp/>bits<sp/>from<sp/>request<sp/>(old_frame_control<sp/>&amp;<sp/>mask),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>toggle<sp/>direction<sp/>(1<sp/>^<sp/>old_direction)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>set<sp/>disable<sp/>default<sp/>response<sp/>(1<sp/>^<sp/>0)<sp/>bit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>direction<sp/>is<sp/>opposite<sp/>of<sp/>command&apos;s<sp/>direction,<sp/>use<sp/>xor<sp/>to<sp/>toggle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/>frame_control<sp/>=<sp/>(<ref refid="group__zcl_1ga080b9f73f48767fc6af9b5da27d30d70" kindref="member">ZCL_FRAME_DISABLE_DEF_RESP</ref><sp/>|<sp/><ref refid="group__zcl_1ga38975849d925ebb3643cb9f5d62b68fe" kindref="member">ZCL_FRAME_DIRECTION</ref>)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>^<sp/>(cmd-&gt;<ref refid="group__zcl_1ga5226462a41663bc81a5d67c04f18868a" kindref="member">frame_control</ref><sp/>&amp;<sp/>(<ref refid="group__zcl_1ga38975849d925ebb3643cb9f5d62b68fe" kindref="member">ZCL_FRAME_DIRECTION</ref><sp/>|<sp/><ref refid="group__zcl_1gad2e6a61d29cd303e906699a49fa2eb8e" kindref="member">ZCL_FRAME_TYPE_MASK</ref>));</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/>rsp-&gt;sequence<sp/>=<sp/>cmd-&gt;<ref refid="group__zcl_1gacb5c8866a58116314f6c8eda9dc3544c" kindref="member">sequence</ref>;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmd-&gt;<ref refid="group__zcl_1ga5226462a41663bc81a5d67c04f18868a" kindref="member">frame_control</ref><sp/>&amp;<sp/><ref refid="group__zcl_1ga48ffbdfe840975527d8e9e6d86c12dae" kindref="member">ZCL_FRAME_MFG_SPECIFIC</ref>)</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rsp-&gt;u.mfg.mfg_code_le<sp/>=<sp/><ref refid="group__util__byteorder_1ga3ea73a6089f61223b225c46e2ba58a47" kindref="member">htole16</ref>(<sp/>cmd-&gt;<ref refid="group__zcl_1ga011fb17c1112658806badaccba7a246d" kindref="member">mfg_code</ref>);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rsp-&gt;u.mfg.frame_control<sp/>=<sp/>frame_control<sp/>|<sp/><ref refid="group__zcl_1ga48ffbdfe840975527d8e9e6d86c12dae" kindref="member">ZCL_FRAME_MFG_SPECIFIC</ref>;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/>rsp-&gt;u.std.frame_control<sp/>=<sp/>frame_control;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2;</highlight></codeline>
<codeline lineno="227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>zcl_default_response<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight></codeline>
<codeline lineno="247"><highlight class="normal">zigbee_zcl_debug</highlight></codeline>
<codeline lineno="248" refid="group__zcl_1gab5c99acba0d864acd326bcab46d1416e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__zcl_1gab5c99acba0d864acd326bcab46d1416e" kindref="member">zcl_default_response</ref>(<sp/><ref refid="structzcl__command__t" kindref="compound">zcl_command_t</ref><sp/>*request,<sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><ref refid="group__xbee__atcmd_1gade818037fd6c985038ff29656089758d" kindref="member">status</ref>)</highlight></codeline>
<codeline lineno="249"><highlight class="normal">{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><ref refid="group___s_x_a_1ga4233297bd31be5c273d4fb0758cc54d7" kindref="member">PACKED_STRUCT</ref><sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zcl_1gaeac1f6671916dd0ad92b271080ec272a" kindref="member">zcl_header_response_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>header;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__xbee__atcmd_1ga1a5aaa930940857f68f245eeb89506b5" kindref="member">command</ref>;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__xbee__atcmd_1gade818037fd6c985038ff29656089758d" kindref="member">status</ref>;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/>}<sp/>response;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*start;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(request<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZCL_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>returning<sp/>-EINVAL\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>ZCL_STATUS_SUCCESS<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(request-&gt;<ref refid="group__zcl_1ga5226462a41663bc81a5d67c04f18868a" kindref="member">frame_control</ref><sp/>&amp;<sp/><ref refid="group__zcl_1ga080b9f73f48767fc6af9b5da27d30d70" kindref="member">ZCL_FRAME_DISABLE_DEF_RESP</ref>))</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZCL_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>don&apos;t<sp/>send<sp/>SUCCESS;<sp/>sender<sp/>disabled<sp/>default<sp/>response\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(request-&gt;<ref refid="group__zcl_1ga1c24c7848d60bc6aa335a8ba9fd14b7a" kindref="member">envelope</ref>-&gt;options</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>(<ref refid="group__wpan__aps_1ga92a0f27267b04aa691e184b428e8f7c6" kindref="member">WPAN_ENVELOPE_BROADCAST_ADDR</ref><sp/>|<sp/><ref refid="group__wpan__aps_1ga9572c340b083c6a51b0473fee184ea2c" kindref="member">WPAN_ENVELOPE_BROADCAST_EP</ref>))</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZCL_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>not<sp/>responding<sp/>to<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;broadcast<sp/>message&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((request-&gt;<ref refid="group__zcl_1ga5226462a41663bc81a5d67c04f18868a" kindref="member">frame_control</ref><sp/>&amp;<sp/><ref refid="group__zcl_1gad2e6a61d29cd303e906699a49fa2eb8e" kindref="member">ZCL_FRAME_TYPE_MASK</ref>)<sp/>==<sp/><ref refid="group__zcl_1ga332a452ea08eb67a3ebf962320bf8819" kindref="member">ZCL_FRAME_TYPE_PROFILE</ref></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>request-&gt;<ref refid="group__zcl_1ga1a5aaa930940857f68f245eeb89506b5" kindref="member">command</ref><sp/>==<sp/><ref refid="group__zcl_1ga92499f538455b8d5a525510fba54adb2" kindref="member">ZCL_CMD_DEFAULT_RESP</ref>)</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZCL_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>not<sp/>responding<sp/>to<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;default<sp/>response&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/>response.header.command<sp/>=<sp/><ref refid="group__zcl_1ga92499f538455b8d5a525510fba54adb2" kindref="member">ZCL_CMD_DEFAULT_RESP</ref>;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/>start<sp/>=<sp/>(<ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/>*)&amp;response<sp/>+<sp/><ref refid="group__zcl_1ga592c970c1f0bda49f1c618d2895dbc6d" kindref="member">zcl_build_header</ref>(<sp/>&amp;response.header,<sp/>request);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>the<sp/>frame<sp/>type<sp/>bits<sp/>--<sp/>default<sp/>response<sp/>is<sp/>not<sp/>a<sp/>cluster<sp/>command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(frame<sp/>control<sp/>is<sp/>at<sp/>address<sp/>&lt;start&gt;<sp/>--<sp/>different<sp/>offset<sp/>into</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>response<sp/>structure<sp/>depending<sp/>on<sp/>whether<sp/>command<sp/>is<sp/>manufacturer-specific</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/>*start<sp/>&amp;=<sp/>~<ref refid="group__zcl_1gad2e6a61d29cd303e906699a49fa2eb8e" kindref="member">ZCL_FRAME_TYPE_MASK</ref>;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/>response.command<sp/>=<sp/>request-&gt;<ref refid="group__zcl_1ga1a5aaa930940857f68f245eeb89506b5" kindref="member">command</ref>;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/>response.status<sp/>=<sp/><ref refid="group__xbee__atcmd_1gade818037fd6c985038ff29656089758d" kindref="member">status</ref>;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__zcl_1ga947f6103f6bbe716ddeacbaed65e3ce3" kindref="member">zcl_send_response</ref>(<sp/>request,<sp/>start,</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/>*)(&amp;response<sp/>+<sp/>1)<sp/>-<sp/>start);</highlight></codeline>
<codeline lineno="308"><highlight class="normal">}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>zcl_check_minmax<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight></codeline>
<codeline lineno="325"><highlight class="normal">zigbee_zcl_debug</highlight></codeline>
<codeline lineno="326" refid="group__zcl_1ga87ee4a8117e0420786a109b1f590ddc5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__zcl_1ga87ee4a8117e0420786a109b1f590ddc5" kindref="member">zcl_check_minmax</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structzcl__attribute__base__t" kindref="compound">zcl_attribute_base_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*entry,</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*buffer_le)</highlight></codeline>
<codeline lineno="328"><highlight class="normal">{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZCL_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*zcl_result[]<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;within<sp/>range&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;below<sp/>min&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;above<sp/>max&quot;</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><ref refid="unionzcl__attribute__minmax__t" kindref="compound">zcl_attribute_minmax_t</ref><sp/><ref refid="group__xbee__atcmd_1ga5bf2410fa8ec37f47f8afeba8dcc7f1b" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sizeof_type;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/>typeinfo;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structzcl__attribute__full__t" kindref="compound">zcl_attribute_full_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*full;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>retval<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(entry<sp/>==<sp/>NULL<sp/>||<sp/>buffer_le<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZCL_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>returning<sp/>-EINVAL\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(entry-&gt;flags<sp/>&amp;<sp/>(ZCL_ATTRIB_FLAG_HAS_MIN<sp/>|<sp/>ZCL_ATTRIB_FLAG_HAS_MAX))</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sizeof_type<sp/>=<sp/><ref refid="group__zcl__types_1ga6134ab27d38abd300d008345e21fe560" kindref="member">zcl_sizeof_type</ref>(<sp/>entry-&gt;type);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sizeof_type<sp/>&lt;<sp/>1<sp/>||<sp/>sizeof_type<sp/>&gt;<sp/>4)</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZCL_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>no<sp/>min/max<sp/>checking<sp/>for<sp/>type<sp/>0x%02x\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__,<sp/>entry-&gt;type);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>min/max<sp/>checking<sp/>is<sp/>only<sp/>valid<sp/>for<sp/>1<sp/>to<sp/>4<sp/>byte<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typeinfo<sp/>=<sp/><ref refid="group__zcl__types_1ga0f5737f60f1f37fb3b375e9fd5fe664d" kindref="member">zcl_type_info</ref>[entry-&gt;type];</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(typeinfo<sp/>&amp;<sp/><ref refid="group__zcl__types_1gaad99789b034d1ed0a2825e075bba62af" kindref="member">ZCL_T_FLOAT</ref>)</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZCL_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>no<sp/>min/max<sp/>checking<sp/>for<sp/>floating<sp/>point\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>value._unsigned<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>BYTE_ORDER<sp/>==<sp/>LITTLE_ENDIAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_f_memcpy(<sp/>&amp;value,<sp/>buffer_le,<sp/>sizeof_type);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>big-endian,<sp/>make<sp/>sure<sp/>we<sp/>fill<sp/>in<sp/>the<sp/>low<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__util__byteorder_1ga9639d55fe8e5b4daf83a76de40aa3e4e" kindref="member">memcpy_letoh</ref>(<sp/>(<ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/>*)&amp;value<sp/>+<sp/>(4<sp/>-<sp/>sizeof_type),<sp/>buffer_le,</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref>)<sp/>sizeof_type);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>full<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structzcl__attribute__full__t" kindref="compound">zcl_attribute_full_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)<sp/>entry;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(typeinfo<sp/>&amp;<sp/><ref refid="group__zcl__types_1gaacf8dcd439ce0388d90681aec545e4e3" kindref="member">ZCL_T_SIGNED</ref>)</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>sign<sp/>bit<sp/>was<sp/>set,<sp/>sign-extend<sp/>to<sp/>32<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((sizeof_type<sp/>&lt;<sp/>4)<sp/>&amp;&amp;<sp/>(buffer_le[sizeof_type<sp/>-<sp/>1]<sp/>&amp;<sp/>0x80)<sp/>)</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value._unsigned<sp/>|=<sp/>(0xFFFFFFFF<sp/>&lt;&lt;<sp/>(<ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref>)<sp/>sizeof_type);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((entry-&gt;flags<sp/>&amp;<sp/>ZCL_ATTRIB_FLAG_HAS_MIN)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(full-&gt;min._signed<sp/>&gt;<sp/>value._signed))</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((entry-&gt;flags<sp/>&amp;<sp/>ZCL_ATTRIB_FLAG_HAS_MAX)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(full-&gt;max._signed<sp/>&lt;<sp/>value._signed))</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((entry-&gt;flags<sp/>&amp;<sp/>ZCL_ATTRIB_FLAG_HAS_MIN)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(full-&gt;min._unsigned<sp/>&gt;<sp/>value._unsigned))</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((entry-&gt;flags<sp/>&amp;<sp/>ZCL_ATTRIB_FLAG_HAS_MAX)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(full-&gt;max._unsigned<sp/>&lt;<sp/>value._unsigned))</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZCL_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>new<sp/>value<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>zcl_result[retval]);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="415"><highlight class="normal">}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>zcl_parse_attribute_record<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight></codeline>
<codeline lineno="436"><highlight class="normal">zigbee_zcl_debug</highlight></codeline>
<codeline lineno="437" refid="group__zcl_1ga9f9ac99001185554fe24dc7b09c0b0b0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__zcl_1ga9f9ac99001185554fe24dc7b09c0b0b0" kindref="member">zcl_parse_attribute_record</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structzcl__attribute__base__t" kindref="compound">zcl_attribute_base_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*entry,</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><ref refid="structzcl__attribute__write__rec__t" kindref="compound">zcl_attribute_write_rec_t</ref><sp/>*write_rec)</highlight></codeline>
<codeline lineno="439"><highlight class="normal">{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attribute;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zcl_1ga1d127017fb298b889f4ba24752d08b8e" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_offset;<sp/><sp/></highlight><highlight class="comment">//<sp/>where<sp/>is<sp/>value<sp/>in<sp/>buffer?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sizeof_type;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><ref refid="structzcl__attribute__base__t" kindref="compound">zcl_attribute_base_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fake_attribute;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structzcl__attribute__full__t" kindref="compound">zcl_attribute_full_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/><sp/><sp/>*full;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1ga2140805d08462d474b82ddc8d1c2f3e6" kindref="member">int16_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_buflen;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes_read;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(write_rec<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>a<sp/>NULL<sp/>entry<sp/>parameter<sp/>is<sp/>OK<sp/>and<sp/>represents<sp/>a<sp/>cluster</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>without<sp/>any<sp/>attributes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZCL_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>returning<sp/>-EINVAL\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/>attribute<sp/>=<sp/><ref refid="group__util__byteorder_1ga684a5d26d1989cbd925e97292cc81c72" kindref="member">le16toh</ref>(<sp/>xbee_get_unaligned16(<sp/>write_rec-&gt;<ref refid="group__zcl_1ga669940d05e1abc9807300f7d34169496" kindref="member">buffer</ref>));</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(write_rec-&gt;<ref refid="group__zcl_1gaa2585d779da0ab21273a8d92de9a0ebe" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="group__zcl_1ga928e86b414e2662235b7bb39ffaf0635" kindref="member">ZCL_ATTR_WRITE_FLAG_READ_RESP</ref>)</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>this<sp/>is<sp/>a<sp/>read<sp/>attribute<sp/>response<sp/>and<sp/>the<sp/>status<sp/>was<sp/>not<sp/>success,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>there<sp/>won&apos;t<sp/>by<sp/>a<sp/>type<sp/>or<sp/>a<sp/>value.<sp/><sp/>Just<sp/>skip<sp/>over<sp/>the<sp/>attribute<sp/>ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>status<sp/>to<sp/>get<sp/>to<sp/>the<sp/>next<sp/>record.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(write_rec-&gt;<ref refid="group__zcl_1ga669940d05e1abc9807300f7d34169496" kindref="member">buffer</ref>[2]<sp/>!=<sp/>ZCL_STATUS_SUCCESS)</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_rec-&gt;<ref refid="group__zcl_1ga669940d05e1abc9807300f7d34169496" kindref="member">buffer</ref><sp/>+=<sp/>3;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>3;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>value_offset<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>value_offset<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/>start_buflen<sp/>=<sp/>write_rec-&gt;<ref refid="group__zcl_1ga0d88b9a4d20f93d09002c72ef71cf861" kindref="member">buflen</ref>;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(start_buflen<sp/>&lt;<sp/>value_offset)</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZCL_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>buffer<sp/>too<sp/>small<sp/>(can&apos;t<sp/>hold<sp/>id<sp/>and<sp/>type)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>write_rec-&gt;<ref refid="group__zcl_1gade818037fd6c985038ff29656089758d" kindref="member">status</ref><sp/>=<sp/>ZCL_STATUS_MALFORMED_COMMAND;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>=<sp/>write_rec-&gt;<ref refid="group__zcl_1ga669940d05e1abc9807300f7d34169496" kindref="member">buffer</ref>[value_offset<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>write_rec-&gt;<ref refid="group__zcl_1ga669940d05e1abc9807300f7d34169496" kindref="member">buffer</ref><sp/>+=<sp/>value_offset;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>write_rec-&gt;<ref refid="group__zcl_1ga0d88b9a4d20f93d09002c72ef71cf861" kindref="member">buflen</ref><sp/>-=<sp/>value_offset;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>look<sp/>up<sp/>attribute</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>entry<sp/>=<sp/><ref refid="group__zcl_1ga00ac8dd36cad01d9479a84c296380f40" kindref="member">zcl_find_attribute</ref>(<sp/>entry,<sp/>attribute);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>entry)</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZCL_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>ERROR<sp/>couldn&apos;t<sp/>find<sp/>attribute<sp/>0x%04x\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__,<sp/>attribute);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_rec-&gt;<ref refid="group__zcl_1gade818037fd6c985038ff29656089758d" kindref="member">status</ref><sp/>=<sp/>ZCL_STATUS_UNSUPPORTED_ATTRIBUTE;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(entry-&gt;type<sp/>!=<sp/>type)</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZCL_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>ERROR<sp/>type<sp/>mismatch<sp/>(0x%02x<sp/>!=<sp/>0x%02x)<sp/>on<sp/>0x%04x\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__,<sp/>type,<sp/>entry-&gt;type,<sp/>attribute);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__zcl__types_1ga639712ec7549d1bb6a5bcb05097386e2" kindref="member">ZCL_TYPE_IS_INVALID</ref>(<sp/>type))</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Not<sp/>only<sp/>is<sp/>the<sp/>type<sp/>wrong,<sp/>we<sp/>can&apos;t<sp/>parse<sp/>it<sp/>so<sp/>error<sp/>out<sp/>as<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>malformed<sp/>command.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_rec-&gt;<ref refid="group__zcl_1gade818037fd6c985038ff29656089758d" kindref="member">status</ref><sp/>=<sp/>ZCL_STATUS_MALFORMED_COMMAND;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_rec-&gt;<ref refid="group__zcl_1gade818037fd6c985038ff29656089758d" kindref="member">status</ref><sp/>=<sp/>ZCL_STATUS_INVALID_DATA_TYPE;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(entry-&gt;flags<sp/>&amp;<sp/>ZCL_ATTRIB_FLAG_READONLY)</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZCL_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>ERROR<sp/>attribute<sp/>0x%04x<sp/>is<sp/>read-only\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__,<sp/>attribute);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_rec-&gt;<ref refid="group__zcl_1gade818037fd6c985038ff29656089758d" kindref="member">status</ref><sp/>=<sp/>ZCL_STATUS_READ_ONLY;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sizeof_type<sp/>=<sp/><ref refid="group__zcl__types_1ga6134ab27d38abd300d008345e21fe560" kindref="member">zcl_sizeof_type</ref>(<sp/>type);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sizeof_type<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>write_rec-&gt;<ref refid="group__zcl_1ga0d88b9a4d20f93d09002c72ef71cf861" kindref="member">buflen</ref><sp/>&lt;<sp/>sizeof_type)</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZCL_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>buffer<sp/>too<sp/>small<sp/>for<sp/>type<sp/>0x%02x<sp/>(have<sp/>%d,<sp/>need<sp/>%d)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__,<sp/>type,<sp/>write_rec-&gt;<ref refid="group__zcl_1ga0d88b9a4d20f93d09002c72ef71cf861" kindref="member">buflen</ref>,<sp/>sizeof_type);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_rec-&gt;<ref refid="group__zcl_1gade818037fd6c985038ff29656089758d" kindref="member">status</ref><sp/>=<sp/>ZCL_STATUS_MALFORMED_COMMAND;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>successful<sp/>up<sp/>until<sp/>now,<sp/>verify<sp/>min/max<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(write_rec-&gt;<ref refid="group__zcl_1gade818037fd6c985038ff29656089758d" kindref="member">status</ref><sp/>==<sp/>ZCL_STATUS_SUCCESS</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/><ref refid="group__zcl_1ga87ee4a8117e0420786a109b1f590ddc5" kindref="member">zcl_check_minmax</ref>(<sp/>entry,<sp/>write_rec-&gt;<ref refid="group__zcl_1ga669940d05e1abc9807300f7d34169496" kindref="member">buffer</ref>))</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_rec-&gt;<ref refid="group__zcl_1gade818037fd6c985038ff29656089758d" kindref="member">status</ref><sp/>=<sp/>ZCL_STATUS_INVALID_VALUE;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(write_rec-&gt;<ref refid="group__zcl_1gade818037fd6c985038ff29656089758d" kindref="member">status</ref><sp/>==<sp/>ZCL_STATUS_MALFORMED_COMMAND)</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>can&apos;t<sp/>continue<sp/>parsing<sp/>a<sp/>malformed<sp/>command,<sp/>so<sp/>mark<sp/>buffer<sp/>as<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>write_rec-&gt;<ref refid="group__zcl_1ga0d88b9a4d20f93d09002c72ef71cf861" kindref="member">buflen</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(write_rec-&gt;<ref refid="group__zcl_1gade818037fd6c985038ff29656089758d" kindref="member">status</ref><sp/>!=<sp/>ZCL_STATUS_SUCCESS)</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>perform<sp/>assignment,<sp/>just<sp/>parse<sp/>the<sp/>request</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_rec-&gt;<ref refid="group__zcl_1gaa2585d779da0ab21273a8d92de9a0ebe" kindref="member">flags</ref><sp/>&amp;=<sp/>~<ref refid="group__zcl_1ga2bb65a6c04a14957000feaa12de9769c" kindref="member">ZCL_ATTR_WRITE_FLAG_ASSIGN</ref>;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>a<sp/>fake<sp/>attribute<sp/>entry<sp/>so<sp/>zcl_decode_attribute<sp/>can<sp/>parse</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>attribute<sp/>value<sp/>based<sp/>on<sp/>type<sp/>in<sp/>request</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(<sp/>&amp;fake_attribute,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>fake_attribute);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fake_attribute.id<sp/>=<sp/>attribute;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fake_attribute.<ref refid="group__zcl_1ga1d127017fb298b889f4ba24752d08b8e" kindref="member">type</ref><sp/>=<sp/><ref refid="group__zcl_1ga1d127017fb298b889f4ba24752d08b8e" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry<sp/>=<sp/>&amp;fake_attribute;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Call<sp/>associated<sp/>write<sp/>function,<sp/>if<sp/>present.<sp/><sp/>Note<sp/>that<sp/>if<sp/>using<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fake<sp/>attribute,<sp/>none<sp/>of<sp/>the<sp/>flags<sp/>are<sp/>set<sp/>(flags<sp/>==<sp/>0).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>full<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structzcl__attribute__full__t" kindref="compound">zcl_attribute_full_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)<sp/>entry;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((entry-&gt;flags<sp/>&amp;<sp/><ref refid="group__zcl_1ga40104652d30fa17b7ea5dde9e8b788b8" kindref="member">ZCL_ATTRIB_FLAG_FULL</ref>)<sp/>&amp;&amp;<sp/>full-&gt;write)</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes_read<sp/>=<sp/>full-&gt;write(<sp/>full,<sp/>write_rec);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes_read<sp/>=<sp/><ref refid="group__zcl_1ga15bf36dadccd7a045bad7d6f0842e25a" kindref="member">zcl_decode_attribute</ref>(<sp/>entry,<sp/>write_rec);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>buffer<sp/>position<sp/>and<sp/>number<sp/>of<sp/>bytes<sp/>left,<sp/>based<sp/>on<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>bytes<sp/>consumed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>write_rec-&gt;<ref refid="group__zcl_1ga669940d05e1abc9807300f7d34169496" kindref="member">buffer</ref><sp/>+=<sp/>bytes_read;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>write_rec-&gt;<ref refid="group__zcl_1ga0d88b9a4d20f93d09002c72ef71cf861" kindref="member">buflen</ref><sp/>-=<sp/>bytes_read;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZCL_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(write_rec-&gt;<ref refid="group__zcl_1gade818037fd6c985038ff29656089758d" kindref="member">status</ref><sp/>!=<sp/>ZCL_STATUS_SUCCESS)</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>failure<sp/>(0x%02x)<sp/>trying<sp/>to<sp/>write<sp/>attribute<sp/>0x%04x\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__,<sp/>write_rec-&gt;<ref refid="group__zcl_1gade818037fd6c985038ff29656089758d" kindref="member">status</ref>,<sp/>entry-&gt;id);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>start_buflen<sp/>-<sp/>write_rec-&gt;<ref refid="group__zcl_1ga0d88b9a4d20f93d09002c72ef71cf861" kindref="member">buflen</ref>;</highlight></codeline>
<codeline lineno="596"><highlight class="normal">}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>zcl_convert_24bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight></codeline>
<codeline lineno="612"><highlight class="normal">zigbee_zcl_debug</highlight></codeline>
<codeline lineno="613" refid="group__zcl_1ga405e1c70b6278aae3a307971433c9229" refkind="member"><highlight class="normal"><ref refid="group__hal__dos_1ga09a1e304d66d35dd47daffee9731edaa" kindref="member">uint32_t</ref><sp/><ref refid="group__zcl_1ga405e1c70b6278aae3a307971433c9229" kindref="member">zcl_convert_24bit</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*value_le,<sp/><ref refid="group__hal__dos_1ga04dd5074964518403bf944f2b240a5f8" kindref="member">bool_t</ref><sp/>extend_sign)</highlight></codeline>
<codeline lineno="614"><highlight class="normal">{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/>result[4];</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*bytes<sp/>=<sp/>value_le;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value_le<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#if<sp/>BYTE_ORDER<sp/>==<sp/>BIG_ENDIAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result[3]<sp/>=<sp/>bytes[0];</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result[2]<sp/>=<sp/>bytes[1];</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result[1]<sp/>=<sp/>bytes[2];</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result[0]<sp/>=<sp/>((result[1]<sp/>&amp;<sp/>0x80)<sp/>&amp;&amp;<sp/>extend_sign)<sp/>?<sp/>0xFF<sp/>:<sp/>0x00;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result[0]<sp/>=<sp/>bytes[0];</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result[1]<sp/>=<sp/>bytes[1];</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result[2]<sp/>=<sp/>bytes[2];</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result[3]<sp/>=<sp/>((result[2]<sp/>&amp;<sp/>0x80)<sp/>&amp;&amp;<sp/>extend_sign)<sp/>?<sp/>0xFF<sp/>:<sp/>0x00;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xbee_get_unaligned32(<sp/>result);</highlight></codeline>
<codeline lineno="636"><highlight class="normal">}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>zcl_decode_attribute<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight></codeline>
<codeline lineno="651"><highlight class="normal">zigbee_zcl_debug</highlight></codeline>
<codeline lineno="652" refid="group__zcl_1ga15bf36dadccd7a045bad7d6f0842e25a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__zcl_1ga15bf36dadccd7a045bad7d6f0842e25a" kindref="member">zcl_decode_attribute</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structzcl__attribute__base__t" kindref="compound">zcl_attribute_base_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*entry,</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><ref refid="structzcl__attribute__write__rec__t" kindref="compound">zcl_attribute_write_rec_t</ref><sp/>*rec)</highlight></codeline>
<codeline lineno="654"><highlight class="normal">{</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sizeof_type;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/><sp/><sp/>*p;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zdo_1gab2b3adeb2a67e656ff030b56727fd0ac" kindref="member">length</ref>,<sp/>maxlength;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1ga09a1e304d66d35dd47daffee9731edaa" kindref="member">uint32_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ulong;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newstatus;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structzcl__attribute__full__t" kindref="compound">zcl_attribute_full_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/><sp/><sp/>*full;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1ga04dd5074964518403bf944f2b240a5f8" kindref="member">bool_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assign;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(entry<sp/>==<sp/>NULL<sp/>||<sp/>rec<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZCL_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>returning<sp/>-EINVAL\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/>newstatus<sp/>=<sp/>rec-&gt;<ref refid="group__zcl_1gade818037fd6c985038ff29656089758d" kindref="member">status</ref>;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/>assign<sp/>=<sp/>(rec-&gt;<ref refid="group__zcl_1gaa2585d779da0ab21273a8d92de9a0ebe" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="group__zcl_1ga2bb65a6c04a14957000feaa12de9769c" kindref="member">ZCL_ATTR_WRITE_FLAG_ASSIGN</ref>)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(assign<sp/>&amp;&amp;<sp/>entry-&gt;value<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assign<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>newstatus<sp/>=<sp/>ZCL_STATUS_DEFINED_OUT_OF_BAND;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>zcl_parse_attribute_record()<sp/>already<sp/>verified<sp/>that<sp/>there</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>was<sp/>enough<sp/>bytes<sp/>in<sp/>the<sp/>record<sp/>for<sp/>the<sp/>given<sp/>types.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/>sizeof_type<sp/>=<sp/><ref refid="group__zcl__types_1ga6134ab27d38abd300d008345e21fe560" kindref="member">zcl_sizeof_type</ref>(<sp/>entry-&gt;type);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(entry-&gt;type)</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_TYPE_GENERAL_24BIT:</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_TYPE_BITMAP_24BIT:</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_TYPE_UNSIGNED_24BIT:</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_TYPE_SIGNED_24BIT:</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(assign)</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(entry-&gt;flags<sp/>&amp;<sp/><ref refid="group__zcl_1gae40d06ea09e652f6c68fd13e61eb9624" kindref="member">ZCL_ATTRIB_FLAG_RAW</ref>)</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>default_assign;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>special<sp/>case<sp/>for<sp/>24-bit<sp/>values,<sp/>promote<sp/>to<sp/>32-bits<sp/>on<sp/>host</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ulong<sp/>=<sp/><ref refid="group__zcl_1ga405e1c70b6278aae3a307971433c9229" kindref="member">zcl_convert_24bit</ref>(<sp/>rec-&gt;<ref refid="group__zcl_1ga669940d05e1abc9807300f7d34169496" kindref="member">buffer</ref>,</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry-&gt;type<sp/>==<sp/>ZCL_TYPE_SIGNED_24BIT);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZCL_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>assigning<sp/>0x%06&quot;</highlight><highlight class="normal"><sp/><ref refid="group__hal_1ga80ca66bcc9e366733f02c90ed4b0838c" kindref="member">PRIx32</ref><sp/></highlight><highlight class="stringliteral">&quot;<sp/>to<sp/>attribute<sp/>0x%04x\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__,<sp/>ulong<sp/>&amp;<sp/>0x00FFFFFF,<sp/>entry-&gt;id);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cast<sp/>away<sp/>the<sp/>const<sp/>from<sp/>entry-&gt;value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xbee_set_unaligned32(<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)entry-&gt;value,<sp/>ulong);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_TYPE_LOGICAL_BOOLEAN:</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*rec-&gt;<ref refid="group__zcl_1ga669940d05e1abc9807300f7d34169496" kindref="member">buffer</ref><sp/>&amp;<sp/>0xFE)</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZCL_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>value<sp/>0x%02x<sp/>is<sp/>invalid<sp/>for<sp/>LOGICAL_BOOLEAN\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__,<sp/>*rec-&gt;<ref refid="group__zcl_1ga669940d05e1abc9807300f7d34169496" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newstatus<sp/>=<sp/>ZCL_STATUS_INVALID_VALUE;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assign<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fall<sp/>through<sp/>to<sp/>other<sp/>8-bit<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>covers<sp/>most<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__zcl__types_1ga639712ec7549d1bb6a5bcb05097386e2" kindref="member">ZCL_TYPE_IS_INVALID</ref>(<sp/>entry-&gt;type))</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>a<sp/>failure<sp/>on<sp/>our<sp/>part<sp/>--<sp/>type<sp/>used<sp/>in<sp/>OUR<sp/>attribute<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>this<sp/>function<sp/>doesn&apos;t<sp/>support</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZCL_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>unsupported<sp/>type<sp/>0x%02x\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry-&gt;type);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newstatus<sp/>=<sp/>ZCL_STATUS_UNSUPPORTED_ATTRIBUTE;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sizeof_type<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(assign)</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZCL_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint_fast8_t<sp/>i;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal">default_assign:</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZCL_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>assigning<sp/>0x&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>sizeof_type;<sp/>++i)</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%02x&quot;</highlight><highlight class="normal">,<sp/>rec-&gt;<ref refid="group__zcl_1ga669940d05e1abc9807300f7d34169496" kindref="member">buffer</ref>[i]);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;<sp/>to<sp/>attribute<sp/>0x%04x\n&quot;</highlight><highlight class="normal">,<sp/>entry-&gt;id);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>we<sp/>cast<sp/>away<sp/>the<sp/>const<sp/>of<sp/>entry-&gt;value<sp/>since<sp/>it&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>treated<sp/>as<sp/>const<sp/>if<sp/>ZCL_ATTRIB_FLAG_READONLY<sp/>is<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>this<sp/>is<sp/>a<sp/>big-endian<sp/>device<sp/>and<sp/>it&apos;s<sp/>not<sp/>a<sp/>raw<sp/>attribute,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>swap<sp/>the<sp/>byte<sp/>order<sp/>while<sp/>copying<sp/>bytes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>BYTE_ORDER<sp/>==<sp/>BIG_ENDIAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>(entry-&gt;flags<sp/>&amp;<sp/><ref refid="group__zcl_1gae40d06ea09e652f6c68fd13e61eb9624" kindref="member">ZCL_ATTRIB_FLAG_RAW</ref>))</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__util__byteorder_1ga9639d55fe8e5b4daf83a76de40aa3e4e" kindref="member">memcpy_letoh</ref>(<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)entry-&gt;value,<sp/>rec-&gt;<ref refid="group__zcl_1ga669940d05e1abc9807300f7d34169496" kindref="member">buffer</ref>,</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref>)<sp/>sizeof_type);</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>simple<sp/>copy<sp/>for<sp/>raw<sp/>attribute<sp/>or<sp/>little-endian<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_f_memcpy(<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)entry-&gt;value,<sp/>rec-&gt;<ref refid="group__zcl_1ga669940d05e1abc9807300f7d34169496" kindref="member">buffer</ref>,</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sizeof_type);</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/>sizeof_type;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__zcl__types_1ga64286e0c69e0ed344a6eb8756ac81f95" kindref="member">ZCL_TYPE_STRING_CHAR</ref>:</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>does<sp/>packet<sp/>contain<sp/>number<sp/>of<sp/>bytes<sp/>from<sp/>length<sp/>field?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length<sp/>=<sp/>*rec-&gt;<ref refid="group__zcl_1ga669940d05e1abc9807300f7d34169496" kindref="member">buffer</ref>;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(length<sp/>+<sp/>1<sp/>&gt;<sp/>rec-&gt;<ref refid="group__zcl_1ga0d88b9a4d20f93d09002c72ef71cf861" kindref="member">buflen</ref>)<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+1<sp/>for<sp/>length<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newstatus<sp/>=<sp/>ZCL_STATUS_MALFORMED_COMMAND;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/>rec-&gt;<ref refid="group__zcl_1ga0d88b9a4d20f93d09002c72ef71cf861" kindref="member">buflen</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eat<sp/>all<sp/>remaining<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>this<sp/>is<sp/>a<sp/>full<sp/>attribute<sp/>with<sp/>a<sp/>value<sp/>for<sp/>&quot;max&quot;,<sp/>that<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>represents<sp/>the<sp/>maximum<sp/>string<sp/>length.<sp/><sp/>Make<sp/>sure<sp/>we&apos;re<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>exceeding<sp/>it<sp/>(if<sp/>present).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>full<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structzcl__attribute__full__t" kindref="compound">zcl_attribute_full_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)<sp/>entry;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxlength<sp/>=<sp/>(int)<sp/>full-&gt;max._signed;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((entry-&gt;flags<sp/>&amp;<sp/><ref refid="group__zcl_1ga40104652d30fa17b7ea5dde9e8b788b8" kindref="member">ZCL_ATTRIB_FLAG_FULL</ref>)</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>maxlength<sp/>&amp;&amp;<sp/>length<sp/>&gt;<sp/>maxlength)</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newstatus<sp/>=<sp/>ZCL_STATUS_INVALID_VALUE;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(assign)</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>(<ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)(entry-&gt;value);</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_f_memcpy(<sp/>p,<sp/>rec-&gt;<ref refid="group__zcl_1ga669940d05e1abc9807300f7d34169496" kindref="member">buffer</ref><sp/>+<sp/>1,<sp/>length);</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p[<ref refid="group__zdo_1gab2b3adeb2a67e656ff030b56727fd0ac" kindref="member">length</ref>]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>null<sp/>terminator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZCL_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>assigned<sp/>&apos;%&quot;</highlight><highlight class="normal"><sp/><ref refid="group__hal_1ga379022d2cd3136d8f3500c88658056b7" kindref="member">PRIsFAR</ref><sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>to<sp/>attribute<sp/>0x%04x\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__,<sp/>p,<sp/>entry-&gt;id);</highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/>length<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_TYPE_NO_DATA:</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__zcl__types_1ga856105c2b5037b8406a294b668dfe755" kindref="member">ZCL_TYPE_UNKNOWN</ref>:</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newstatus<sp/>=<sp/>ZCL_STATUS_INVALID_DATA_TYPE;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>status<sp/>if<sp/>it<sp/>was<sp/>set<sp/>to<sp/>SUCCESS<sp/>at<sp/>start<sp/>of<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rec-&gt;<ref refid="group__zcl_1gade818037fd6c985038ff29656089758d" kindref="member">status</ref><sp/>==<sp/>ZCL_STATUS_SUCCESS)</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rec-&gt;<ref refid="group__zcl_1gade818037fd6c985038ff29656089758d" kindref="member">status</ref><sp/>=<sp/>newstatus;</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>bytes<sp/>consumed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal">}</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>_zcl_write_attributes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__zcl_1gaff3abb5d2022101c2873e7a8e8b027e5" kindref="member">_zcl_write_attributes</ref>(<sp/><ref refid="structzcl__command__t" kindref="compound">zcl_command_t</ref><sp/>*cmd);</highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight></codeline>
<codeline lineno="840"><highlight class="normal">zigbee_zcl_debug</highlight></codeline>
<codeline lineno="841" refid="group__zcl_1gaff3abb5d2022101c2873e7a8e8b027e5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__zcl_1gaff3abb5d2022101c2873e7a8e8b027e5" kindref="member">_zcl_write_attributes</ref>(<sp/><ref refid="structzcl__command__t" kindref="compound">zcl_command_t</ref><sp/>*cmd)</highlight></codeline>
<codeline lineno="842"><highlight class="normal">{</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1ga2140805d08462d474b82ddc8d1c2f3e6" kindref="member">int16_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zdo_1gab2b3adeb2a67e656ff030b56727fd0ac" kindref="member">length</ref>;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/>uint_fast8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><ref refid="group___s_x_a_1ga4233297bd31be5c273d4fb0758cc54d7" kindref="member">PACKED_STRUCT</ref><sp/>{</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zcl_1gaeac1f6671916dd0ad92b271080ec272a" kindref="member">zcl_header_response_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header;</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zcl_1ga22e48ce5d4bb199b52f155f53e396f87" kindref="member">zcl_rec_write_attrib_status_t</ref><sp/><ref refid="group__xbee__atcmd_1gade818037fd6c985038ff29656089758d" kindref="member">status</ref>[25];<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>limit<sp/>to<sp/>how<sp/>many<sp/>recs?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/>}<sp/>response;</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*start_response;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__zcl_1ga22e48ce5d4bb199b52f155f53e396f87" kindref="member">zcl_rec_write_attrib_status_t</ref><sp/><sp/><sp/><sp/>*status_rec;</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><ref refid="structzcl__attribute__write__rec__t" kindref="compound">zcl_attribute_write_rec_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parse_record;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZCL_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Write<sp/>Attributes<sp/>(cmd=0x%02x)\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd-&gt;<ref refid="group__zcl_1ga1a5aaa930940857f68f245eeb89506b5" kindref="member">command</ref>);</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__util_1gaa321236a0cb6f4e0dad592fdf1b550d2" kindref="member">hex_dump</ref>(<sp/>cmd-&gt;<ref refid="group__zcl_1gaf0e34793a3febabcdb61c020aecbf805" kindref="member">zcl_payload</ref>,<sp/>cmd-&gt;<ref refid="group__zcl_1ga0ff9f63e333676ba1359f505d02dd281" kindref="member">length</ref>,<sp/><ref refid="group__hal_1ga696f6553e33cbd20eda34e220ec9939a" kindref="member">HEX_DUMP_FLAG_TAB</ref>);</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/>response.header.command<sp/>=<sp/><ref refid="group__zcl_1ga0595c0f6957be4e80265ecd36158c0ae" kindref="member">ZCL_CMD_WRITE_ATTRIB_RESP</ref>;</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/>start_response<sp/>=<sp/>(<ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/>*)&amp;response</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><ref refid="group__zcl_1ga592c970c1f0bda49f1c618d2895dbc6d" kindref="member">zcl_build_header</ref>(<sp/>&amp;response.header,<sp/>cmd);</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/>status_rec<sp/>=<sp/>response.status;</highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="865"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>outer<sp/>loop<sp/>handles<sp/>the<sp/>Write<sp/>Attributes<sp/>Undivided<sp/>command.<sp/><sp/>The</highlight></codeline>
<codeline lineno="866"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>other<sp/>two<sp/>write<sp/>commands<sp/>(standard<sp/>and<sp/>No<sp/>Response)<sp/>set<sp/>pass<sp/>to<sp/>1,</highlight></codeline>
<codeline lineno="867"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>so<sp/>the<sp/>loop<sp/>only<sp/>executes<sp/>once.</highlight></codeline>
<codeline lineno="868"><highlight class="comment"></highlight></codeline>
<codeline lineno="869"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>For<sp/>Undivided,<sp/>the<sp/>loop<sp/>runs<sp/>once<sp/>with<sp/>assignment<sp/>disabled<sp/>(just<sp/>checks</highlight></codeline>
<codeline lineno="870"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>errors<sp/>in<sp/>the<sp/>request)<sp/>and<sp/>if<sp/>there<sp/>aren&apos;t<sp/>any<sp/>errors<sp/>(status_rec</highlight></codeline>
<codeline lineno="871"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>still<sp/>set<sp/>to<sp/>response.status)<sp/>runs<sp/>a<sp/>second<sp/>time<sp/>with<sp/>assignment</highlight></codeline>
<codeline lineno="872"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>enabled.</highlight></codeline>
<codeline lineno="873"><highlight class="comment"></highlight></codeline>
<codeline lineno="874"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>WARNING:<sp/>There<sp/>is<sp/>an<sp/>assumption<sp/>that<sp/>if<sp/>there<sp/>aren&apos;t<sp/>any<sp/>errors<sp/>on<sp/>the</highlight></codeline>
<codeline lineno="875"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>first<sp/>pass,<sp/>there<sp/>won&apos;t<sp/>be<sp/>any<sp/>on<sp/>the<sp/>second<sp/>pass.</highlight></codeline>
<codeline lineno="876"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/>pass<sp/>=<sp/>(cmd-&gt;<ref refid="group__zcl_1ga1a5aaa930940857f68f245eeb89506b5" kindref="member">command</ref><sp/>==<sp/><ref refid="group__zcl_1ga9d67bef86e1ec74d60c06e1a09cfb86a" kindref="member">ZCL_CMD_WRITE_ATTRIB_UNDIV</ref>)<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pass<sp/>&lt;=<sp/>1<sp/>&amp;&amp;<sp/>status_rec<sp/>==<sp/>response.status)</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reset<sp/>the<sp/>parse<sp/>record<sp/>to<sp/>the<sp/>start<sp/>of<sp/>the<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parse_record.<ref refid="group__zcl_1ga669940d05e1abc9807300f7d34169496" kindref="member">buffer</ref><sp/>=<sp/>cmd-&gt;<ref refid="group__zcl_1gaf0e34793a3febabcdb61c020aecbf805" kindref="member">zcl_payload</ref>;</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parse_record.<ref refid="group__zcl_1ga0d88b9a4d20f93d09002c72ef71cf861" kindref="member">buflen</ref><sp/>=<sp/>cmd-&gt;<ref refid="group__zcl_1ga0ff9f63e333676ba1359f505d02dd281" kindref="member">length</ref>;</highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(parse_record.<ref refid="group__zcl_1ga0d88b9a4d20f93d09002c72ef71cf861" kindref="member">buflen</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>attribute<sp/>ID<sp/>to<sp/>status<sp/>record<sp/>before<sp/>advancing<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status_rec-&gt;id_le<sp/>=<sp/>xbee_get_unaligned16(<sp/>parse_record.<ref refid="group__zcl_1ga669940d05e1abc9807300f7d34169496" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reset<sp/>flag<sp/>to<sp/>do<sp/>assignment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parse_record.<ref refid="group__zcl_1gaa2585d779da0ab21273a8d92de9a0ebe" kindref="member">flags</ref><sp/>=</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass<sp/>?<sp/><ref refid="group__zcl_1ga2bb65a6c04a14957000feaa12de9769c" kindref="member">ZCL_ATTR_WRITE_FLAG_ASSIGN</ref><sp/>:<sp/>ZCL_ATTR_WRITE_FLAG_NONE;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>assume<sp/>success;<sp/>zcl_parse_attribute_record()<sp/>will<sp/>modify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parse_record.<ref refid="group__zcl_1gade818037fd6c985038ff29656089758d" kindref="member">status</ref><sp/>=<sp/>ZCL_STATUS_SUCCESS;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zcl_1ga9f9ac99001185554fe24dc7b09c0b0b0" kindref="member">zcl_parse_attribute_record</ref>(<sp/>cmd-&gt;<ref refid="group__zcl_1ga04c31df34f50e8dd1efaf1105631b2bc" kindref="member">attributes</ref>,<sp/>&amp;parse_record);</highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>.buffer,<sp/>.buflen<sp/>and<sp/>.status<sp/>are<sp/>modified<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>zcl_parse_attribute_record()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parse_record.<ref refid="group__zcl_1gade818037fd6c985038ff29656089758d" kindref="member">status</ref><sp/>!=<sp/>ZCL_STATUS_SUCCESS)</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status_rec-&gt;status<sp/>=<sp/>parse_record.<ref refid="group__zcl_1gade818037fd6c985038ff29656089758d" kindref="member">status</ref>;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++status_rec;</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++pass;</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmd-&gt;<ref refid="group__zcl_1ga1a5aaa930940857f68f245eeb89506b5" kindref="member">command</ref><sp/>==<sp/><ref refid="group__zcl_1ga57091c6a11fbc2680ac63fa262bf74ca" kindref="member">ZCL_CMD_WRITE_ATTRIB_NORESP</ref>)</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Client<sp/>doesn&apos;t<sp/>want<sp/>a<sp/>response,<sp/>so<sp/>just<sp/>return.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status_rec<sp/>==<sp/>response.status)</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Successfully<sp/>wrote<sp/>all<sp/>attributes<sp/>--<sp/>response<sp/>is<sp/>a<sp/>single<sp/>SUCCESS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>status<sp/>with<sp/>the<sp/>attribute<sp/>ID<sp/>omitted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>response.status[0].status<sp/>=<sp/>ZCL_STATUS_SUCCESS;</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>length<sp/>=<sp/>&amp;response.status[0].status<sp/>+<sp/>1<sp/>-<sp/>start_response;</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>length<sp/>=<sp/>(<ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/>*)status_rec<sp/>-<sp/>start_response;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__zcl_1ga947f6103f6bbe716ddeacbaed65e3ce3" kindref="member">zcl_send_response</ref>(<sp/>cmd,<sp/>start_response,<sp/>length);</highlight></codeline>
<codeline lineno="927"><highlight class="normal">}</highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>zcl_encode_attribute_value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight></codeline>
<codeline lineno="952"><highlight class="normal">zigbee_zcl_debug</highlight></codeline>
<codeline lineno="953" refid="group__zcl_1ga4387e5f016fb26d1ac43b24f78aa066a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__zcl_1ga4387e5f016fb26d1ac43b24f78aa066a" kindref="member">_zcl_encode_struct_value</ref>(<sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*buffer,<sp/><ref refid="group__hal__dos_1ga2140805d08462d474b82ddc8d1c2f3e6" kindref="member">int16_t</ref><sp/>bufsize,</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structzcl__struct__t" kindref="compound">zcl_struct_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*zcl_struct)</highlight></codeline>
<codeline lineno="955"><highlight class="normal">{</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structzcl__struct__element__t" kindref="compound">zcl_struct_element_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*elem;</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/><sp/><sp/><sp/>element_count;</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><ref refid="structzcl__attribute__base__t" kindref="compound">zcl_attribute_base_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>fake_attr<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>written<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>encode;</highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>even<sp/>an<sp/>struct<sp/>of<sp/>0<sp/>elements<sp/>requires<sp/>2<sp/>bytes<sp/>to<sp/>encode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bufsize<sp/>&lt;<sp/>2)</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-ZCL_STATUS_INSUFFICIENT_SPACE;</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/>element_count<sp/>=<sp/>zcl_struct-&gt;element_count;</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/>buffer[0]<sp/>=<sp/>element_count<sp/>&amp;<sp/>0xFF;</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/>buffer[1]<sp/>=<sp/>element_count<sp/>&gt;&gt;<sp/>8;</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/>written<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/>elem<sp/>=<sp/>zcl_struct-&gt;element;</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>we<sp/>only<sp/>set<sp/>the<sp/>.type<sp/>and<sp/>.value<sp/>fields<sp/>of<sp/>fake_attr;<sp/>the<sp/>.id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>.flags<sp/>fields<sp/>remain<sp/>initialized<sp/>to<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(element_count--)</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(written<sp/>==<sp/>bufsize)</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-ZCL_STATUS_INSUFFICIENT_SPACE;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>room<sp/>for<sp/>type<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffer[written++]<sp/>=<sp/>fake_attr.type<sp/>=<sp/>elem-&gt;zcl_type;</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fake_attr.value<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)zcl_struct-&gt;base_address</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>elem-&gt;offset;</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>encode<sp/>=<sp/><ref refid="group__zcl_1gae3f7f58d3b08caf95aa11f90e3995397" kindref="member">zcl_encode_attribute_value</ref>(<sp/>&amp;buffer[written],<sp/>bufsize<sp/>-<sp/>written,</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;fake_attr);</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(encode<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>error<sp/>encoding<sp/>attribute<sp/>(typ.<sp/>INSUFFICIENT_SPACE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>encode;</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>written<sp/>+=<sp/>encode;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>to<sp/>count<sp/>of<sp/>bytes<sp/>encoded<sp/>into<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++elem;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>point<sp/>to<sp/>next<sp/>element<sp/>to<sp/>encode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>written;</highlight></codeline>
<codeline lineno="998"><highlight class="normal">}</highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal">zigbee_zcl_debug</highlight></codeline>
<codeline lineno="1022" refid="group__zcl_1gaae79107724236347a5e22612869df2bf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__zcl_1gaae79107724236347a5e22612869df2bf" kindref="member">_zcl_encode_array_value</ref>(<sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*buffer,<sp/><ref refid="group__hal__dos_1ga2140805d08462d474b82ddc8d1c2f3e6" kindref="member">int16_t</ref><sp/>bufsize,</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structzcl__array__t" kindref="compound">zcl_array_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*array)</highlight></codeline>
<codeline lineno="1024"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/><sp/><sp/><sp/>element_count;</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><ref refid="structzcl__attribute__base__t" kindref="compound">zcl_attribute_base_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>fake_attr<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>written<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>encode;</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>even<sp/>an<sp/>array<sp/>of<sp/>0<sp/>elements<sp/>requires<sp/>3<sp/>bytes<sp/>to<sp/>encode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bufsize<sp/>&lt;<sp/>3)</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-ZCL_STATUS_INSUFFICIENT_SPACE;</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/>buffer[0]<sp/>=<sp/>fake_attr.type<sp/>=<sp/>array-&gt;type;</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/>element_count<sp/>=<sp/>array-&gt;current_count;</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/>buffer[1]<sp/>=<sp/>element_count<sp/>&amp;<sp/>0xFF;</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/>buffer[2]<sp/>=<sp/>element_count<sp/>&gt;&gt;<sp/>8;</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/>written<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/>fake_attr.value<sp/>=<sp/>array-&gt;value;</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>fake_attr.type<sp/>remains<sp/>the<sp/>same,<sp/>but<sp/>fake_attr.value<sp/>changes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>as<sp/>we<sp/>walk<sp/>the<sp/>elements<sp/>of<sp/>the<sp/>array<sp/>to<sp/>encode.<sp/><sp/>The<sp/>other<sp/>fields<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fake_attr<sp/>remain<sp/>initialized<sp/>to<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(element_count--)</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>encode<sp/>=<sp/><ref refid="group__zcl_1gae3f7f58d3b08caf95aa11f90e3995397" kindref="member">zcl_encode_attribute_value</ref>(<sp/>&amp;buffer[written],<sp/>bufsize<sp/>-<sp/>written,</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;fake_attr);</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(encode<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>error<sp/>encoding<sp/>attribute<sp/>(typ.<sp/>INSUFFICIENT_SPACE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>encode;</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>written<sp/>+=<sp/>encode;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>to<sp/>count<sp/>of<sp/>bytes<sp/>encoded<sp/>into<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>point<sp/>to<sp/>next<sp/>attribute<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fake_attr.value<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)fake_attr.value<sp/>+<sp/>array-&gt;element_size;</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>written;</highlight></codeline>
<codeline lineno="1063"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal">zigbee_zcl_debug</highlight></codeline>
<codeline lineno="1087" refid="group__zcl_1gae3f7f58d3b08caf95aa11f90e3995397" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__zcl_1gae3f7f58d3b08caf95aa11f90e3995397" kindref="member">zcl_encode_attribute_value</ref>(<sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*buffer,</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1ga2140805d08462d474b82ddc8d1c2f3e6" kindref="member">int16_t</ref><sp/>bufsize,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structzcl__attribute__base__t" kindref="compound">zcl_attribute_base_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*entry)</highlight></codeline>
<codeline lineno="1089"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*end,<sp/>*start;</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*p;</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><sp/><ref refid="group__zcl_1ga1d127017fb298b889f4ba24752d08b8e" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><sp/><ref refid="group__xbee__atcmd_1gade818037fd6c985038ff29656089758d" kindref="member">status</ref><sp/>=<sp/>ZCL_STATUS_SUCCESS;</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sizeof_type;</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structzcl__attribute__full__t" kindref="compound">zcl_attribute_full_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*full;</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(entry<sp/>==<sp/>NULL<sp/>||<sp/>buffer<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-ZCL_STATUS_SOFTWARE_FAILURE;</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/>type<sp/>=<sp/>entry-&gt;type;</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/>sizeof_type<sp/>=<sp/><ref refid="group__zcl__types_1ga6134ab27d38abd300d008345e21fe560" kindref="member">zcl_sizeof_type</ref>(<sp/>type);</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sizeof_type<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>nothing<sp/>to<sp/>encode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(entry-&gt;value<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-ZCL_STATUS_DEFINED_OUT_OF_BAND;</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Call<sp/>associated<sp/>.read<sp/>function<sp/>if<sp/>present<sp/>so<sp/>it<sp/>can<sp/>update<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>underlying<sp/>variable<sp/>if<sp/>necessary<sp/>(e.g.,<sp/>read<sp/>status<sp/>of<sp/>digital<sp/>input).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/>full<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structzcl__attribute__full__t" kindref="compound">zcl_attribute_full_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)<sp/>entry;</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((entry-&gt;flags<sp/>&amp;<sp/><ref refid="group__zcl_1ga40104652d30fa17b7ea5dde9e8b788b8" kindref="member">ZCL_ATTRIB_FLAG_FULL</ref>)<sp/>&amp;&amp;<sp/>full-&gt;read)</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>full-&gt;read(<sp/>full);</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/>ZCL_STATUS_SUCCESS)</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZCL_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>attribute&apos;s<sp/>read_fn<sp/>failed<sp/>(0x%02x)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__,<sp/>status);</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-(int)status;</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/><ref refid="group__zcl__types_1ga5f609d45e4eb91ae4187bf912e4f870b" kindref="member">ZCL_TYPE_ARRAY</ref><sp/>||<sp/>type<sp/>==<sp/><ref refid="group__zcl__types_1ga21ab004d25434d25e1e17865e895f1a7" kindref="member">ZCL_TYPE_SET</ref><sp/>||<sp/>type<sp/>==<sp/><ref refid="group__zcl__types_1gacd6bd1e469abc59bab04e247bc85997b" kindref="member">ZCL_TYPE_BAG</ref>)</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__zcl_1gaae79107724236347a5e22612869df2bf" kindref="member">_zcl_encode_array_value</ref>(<sp/>buffer,<sp/>bufsize,<sp/>entry-&gt;value);</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/><ref refid="group__zcl__types_1ga2d94a79998fd3cdd13a2cd9ed25b88cb" kindref="member">ZCL_TYPE_STRUCT</ref>)</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__zcl_1ga4387e5f016fb26d1ac43b24f78aa066a" kindref="member">_zcl_encode_struct_value</ref>(<sp/>buffer,<sp/>bufsize,<sp/>entry-&gt;value);</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sizeof_type<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bufsize<sp/>&lt;<sp/>sizeof_type)</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZCL_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>out<sp/>of<sp/>space<sp/>(need<sp/>%d,<sp/>have<sp/>%d)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__,<sp/>sizeof_type,<sp/>bufsize);</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-ZCL_STATUS_INSUFFICIENT_SPACE;</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(entry-&gt;flags<sp/>&amp;<sp/><ref refid="group__zcl_1gae40d06ea09e652f6c68fd13e61eb9624" kindref="member">ZCL_ATTRIB_FLAG_RAW</ref>)</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_f_memcpy(<sp/>buffer,<sp/>entry-&gt;value,<sp/>sizeof_type);</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sizeof_type;</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"></highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/>start<sp/>=<sp/>buffer;</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/>end<sp/>=<sp/>start<sp/>+<sp/>bufsize;</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(type)</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_TYPE_LOGICAL_BOOLEAN:</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>special<sp/>case<sp/>--<sp/>convert<sp/>non-zero<sp/>to<sp/>ZCL_BOOL_TRUE<sp/>and<sp/>zero<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ZCL_BOOL_FALSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*buffer++<sp/>=<sp/>*(<ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)<sp/>entry-&gt;value</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>ZCL_BOOL_TRUE<sp/>:<sp/>ZCL_BOOL_FALSE;</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__zcl__types_1ga64286e0c69e0ed344a6eb8756ac81f95" kindref="member">ZCL_TYPE_STRING_CHAR</ref>:</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>the<sp/>string<sp/>if<sp/>there&apos;s<sp/>space,<sp/>keep<sp/>track<sp/>of<sp/>length<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>that<sp/>out<sp/>to<sp/>the<sp/>first<sp/>byte.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>(<ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)<sp/>entry-&gt;value;</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(++buffer<sp/>&lt;<sp/>end<sp/>&amp;&amp;<sp/>*p)</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*buffer<sp/>=<sp/>*p;</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++p;</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*p)</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZCL_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>string<sp/>too<sp/>large<sp/>for<sp/>buffer\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__);</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-ZCL_STATUS_INSUFFICIENT_SPACE;</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fill<sp/>in<sp/>length<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*start<sp/>=<sp/>(<ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref>)<sp/>(buffer<sp/>-<sp/>start<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"></highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>special<sp/>case<sp/>for<sp/>24-bit<sp/>values<sp/>on<sp/>big-endian</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>need<sp/>to<sp/>demote<sp/>from<sp/>32-bits<sp/>on<sp/>host</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>default<sp/>case<sp/>works<sp/>for<sp/>24-bit<sp/>values<sp/>on<sp/>little-endian<sp/>host</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#if<sp/>BYTE_ORDER<sp/>==<sp/>BIG_ENDIAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_TYPE_GENERAL_24BIT:</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_TYPE_BITMAP_24BIT:</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_TYPE_UNSIGNED_24BIT:</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_TYPE_SIGNED_24BIT:</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>3<sp/>least-significant<sp/>bytes<sp/>(starts<sp/>at<sp/>second<sp/>byte<sp/>of<sp/>value)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>while<sp/>reversing<sp/>byte<sp/>order<sp/>(big-endian<sp/>to<sp/>little-endian).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__util__byteorder_1gaf677c5c03da581dab8015e8350750c00" kindref="member">memcpy_htole</ref>(<sp/>buffer,<sp/>(<ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)<sp/>entry-&gt;value<sp/>+<sp/>1,<sp/>3);</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer<sp/>+=<sp/>3;</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"></highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>covers<sp/>most<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__zcl__types_1ga639712ec7549d1bb6a5bcb05097386e2" kindref="member">ZCL_TYPE_IS_INVALID</ref>(<sp/>type))</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>a<sp/>failure<sp/>on<sp/>our<sp/>part<sp/>--<sp/>type<sp/>used<sp/>in<sp/>OUR<sp/>attribute<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>this<sp/>function<sp/>doesn&apos;t<sp/>support</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1209"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZCL_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>unsupported<sp/>type<sp/>0x%02x\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>type);</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-ZCL_STATUS_FAILURE;</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sizeof_type<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__util__byteorder_1gaf677c5c03da581dab8015e8350750c00" kindref="member">memcpy_htole</ref>(<sp/>buffer,<sp/>entry-&gt;value,<sp/>(<ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref>)<sp/>sizeof_type);</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer<sp/>+=<sp/>sizeof_type;</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"></highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(buffer<sp/>-<sp/>start);</highlight></codeline>
<codeline lineno="1223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>_zcl_read_attributes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__zcl_1gaa34c917bf05a57503e63553efcb77dc9" kindref="member">_zcl_read_attributes</ref>(<sp/><ref refid="structzcl__command__t" kindref="compound">zcl_command_t</ref><sp/>*cmd);</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight></codeline>
<codeline lineno="1239"><highlight class="normal">zigbee_zcl_debug</highlight></codeline>
<codeline lineno="1240" refid="group__zcl_1gaa34c917bf05a57503e63553efcb77dc9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__zcl_1gaa34c917bf05a57503e63553efcb77dc9" kindref="member">_zcl_read_attributes</ref>(<sp/><ref refid="structzcl__command__t" kindref="compound">zcl_command_t</ref><sp/>*cmd)</highlight></codeline>
<codeline lineno="1241"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>requests;</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>payload_length;</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attribute;</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/><sp/><sp/>*id_le;</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structzcl__attribute__base__t" kindref="compound">zcl_attribute_base_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/><sp/><sp/>*entry;</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><ref refid="group___s_x_a_1ga4233297bd31be5c273d4fb0758cc54d7" kindref="member">PACKED_STRUCT</ref><sp/>{</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zcl_1gaeac1f6671916dd0ad92b271080ec272a" kindref="member">zcl_header_response_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header;</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[80];<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>limit<sp/>to<sp/>how<sp/>many<sp/>bytes?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/>}<sp/>response;</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*start_response;</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*end_response;</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytesleft;</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byteswritten;</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmd<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZCL_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>returning<sp/>-EINVAL\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__);</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>;</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DEVNOTE:<sp/>This<sp/>could<sp/>be<sp/>an<sp/>assert,<sp/>or<sp/>only<sp/>compiled<sp/>in<sp/>for<sp/>debug<sp/>mode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>request<sp/>has<sp/>odd<sp/>byte,<sp/>we&apos;ll<sp/>ignore<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/>payload_length<sp/>=<sp/>cmd-&gt;<ref refid="group__zcl_1ga0ff9f63e333676ba1359f505d02dd281" kindref="member">length</ref>;</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(payload_length<sp/>&amp;<sp/>0x0001)</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZCL_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>ERROR<sp/>--<sp/>length<sp/>(%u)<sp/>is<sp/>not<sp/>even\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>payload_length);</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__zcl_1gab5c99acba0d864acd326bcab46d1416e" kindref="member">zcl_default_response</ref>(<sp/>cmd,<sp/>ZCL_STATUS_MALFORMED_COMMAND);</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"></highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/>response.header.command<sp/>=<sp/><ref refid="group__zcl_1ga85ca2068c5dc26db307b60b0ac54bc9c" kindref="member">ZCL_CMD_READ_ATTRIB_RESP</ref>;</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/>start_response<sp/>=<sp/>(<ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/>*)&amp;response</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><ref refid="group__zcl_1ga592c970c1f0bda49f1c618d2895dbc6d" kindref="member">zcl_build_header</ref>(<sp/>&amp;response.header,<sp/>cmd);</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/>end_response<sp/>=<sp/>response.buffer;</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>can&apos;t<sp/>go<sp/>beyond<sp/>(sizeof<sp/>response<sp/>+<sp/>(uint8_t<sp/>*)<sp/>&amp;response)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/>requests<sp/>=<sp/>payload_length<sp/>&gt;&gt;<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2<sp/>bytes<sp/>per<sp/>request</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(id_le<sp/>=<sp/>(<ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)<sp/>cmd-&gt;<ref refid="group__zcl_1gaf0e34793a3febabcdb61c020aecbf805" kindref="member">zcl_payload</ref>;<sp/>requests;</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>--requests,<sp/>++id_le)</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bytesleft<sp/>=<sp/>(<ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/>*)(&amp;response<sp/>+<sp/>1)<sp/>-<sp/>end_response;</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytesleft<sp/>&lt;<sp/>3)</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>enough<sp/>room<sp/>for<sp/>attribute<sp/>id<sp/>and<sp/>status</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>ID<sp/>to<sp/>response<sp/>(still<sp/>little-endian)...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xbee_set_unaligned16(<sp/>end_response,<sp/>*id_le);</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>...and<sp/>convert<sp/>to<sp/>host-order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>attribute<sp/>=<sp/><ref refid="group__util__byteorder_1ga684a5d26d1989cbd925e97292cc81c72" kindref="member">le16toh</ref>(<sp/>*id_le);</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>end_response<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bytesleft<sp/>-=<sp/>2;</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>entry<sp/>=<sp/><ref refid="group__zcl_1ga00ac8dd36cad01d9479a84c296380f40" kindref="member">zcl_find_attribute</ref>(<sp/>cmd-&gt;<ref refid="group__zcl_1ga04c31df34f50e8dd1efaf1105631b2bc" kindref="member">attributes</ref>,<sp/>attribute);</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(entry<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZCL_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>couldn&apos;t<sp/>find<sp/>attribute<sp/>0x%04x\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attribute);</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*end_response++<sp/>=<sp/>ZCL_STATUS_UNSUPPORTED_ATTRIBUTE;</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(entry-&gt;flags<sp/>&amp;<sp/>ZCL_ATTRIB_FLAG_WRITEONLY)</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZCL_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>attribute<sp/>0x%04x<sp/>is<sp/>write-only\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attribute);</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*end_response++<sp/>=<sp/>ZCL_STATUS_WRITE_ONLY;</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZCL_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>found<sp/>attribute<sp/>0x%04x<sp/>@<sp/>index<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attribute,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)<sp/>(entry<sp/>-<sp/>cmd-&gt;<ref refid="group__zcl_1ga04c31df34f50e8dd1efaf1105631b2bc" kindref="member">attributes</ref>));</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"></highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>the<sp/>attribute<sp/>value<sp/>after<sp/>the<sp/>status<sp/>and<sp/>type<sp/>fields<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>response<sp/>--<sp/>+2<sp/>to<sp/>skip<sp/>fields,<sp/>-2<sp/>to<sp/>reduce<sp/>space<sp/>available</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byteswritten<sp/>=<sp/><ref refid="group__zcl_1gae3f7f58d3b08caf95aa11f90e3995397" kindref="member">zcl_encode_attribute_value</ref>(<sp/>end_response<sp/>+<sp/>2,</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytesleft<sp/>-<sp/>2,<sp/>entry);</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(byteswritten<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>byteswritten<sp/>is<sp/>a<sp/>negative<sp/>ZCL_STATUS_*<sp/>macro</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*end_response++<sp/>=<sp/>(<ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref>)<sp/>-byteswritten;</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fill<sp/>in<sp/>the<sp/>status<sp/>and<sp/>attribute<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*end_response++<sp/>=<sp/>ZCL_STATUS_SUCCESS;</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*end_response++<sp/>=<sp/>entry-&gt;type;</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end_response<sp/>+=<sp/>byteswritten;</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"></highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__zcl_1ga947f6103f6bbe716ddeacbaed65e3ce3" kindref="member">zcl_send_response</ref>(<sp/>cmd,<sp/>start_response,</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end_response<sp/>-<sp/>start_response);</highlight></codeline>
<codeline lineno="1344"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"></highlight></codeline>
<codeline lineno="1346"><highlight class="normal"></highlight></codeline>
<codeline lineno="1347"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>_zcl_discover_attributes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1348"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__zcl_1ga385c41594437cdf661bfb518f11ee0fc" kindref="member">_zcl_discover_attributes</ref>(<sp/><ref refid="structzcl__command__t" kindref="compound">zcl_command_t</ref><sp/>*cmd);</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZCL_DISCOVER_ATTRIB_MAX<sp/><sp/><sp/><sp/><sp/>20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1351"><highlight class="normal"></highlight></codeline>
<codeline lineno="1360"><highlight class="normal">zigbee_zcl_debug</highlight></codeline>
<codeline lineno="1361" refid="group__zcl_1ga385c41594437cdf661bfb518f11ee0fc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__zcl_1ga385c41594437cdf661bfb518f11ee0fc" kindref="member">_zcl_discover_attributes</ref>(<sp/><ref refid="structzcl__command__t" kindref="compound">zcl_command_t</ref><sp/>*cmd)</highlight></codeline>
<codeline lineno="1362"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__zcl_1gab0970af8e1b078745a55523dd60bdff6" kindref="member">zcl_discover_attrib_t</ref><sp/><sp/><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/><sp/><sp/>*discover;</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><ref refid="group___s_x_a_1ga4233297bd31be5c273d4fb0758cc54d7" kindref="member">PACKED_STRUCT</ref><sp/>{</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zcl_1gaeac1f6671916dd0ad92b271080ec272a" kindref="member">zcl_header_response_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header;</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>complete;</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zcl_1ga4c81303b52f05c2819ac615fa92e0e5f" kindref="member">zcl_rec_attrib_report_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attribs[ZCL_DISCOVER_ATTRIB_MAX];</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/>}<sp/>response;</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*start_response;</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__zcl_1ga4c81303b52f05c2819ac615fa92e0e5f" kindref="member">zcl_rec_attrib_report_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*write_attrib;</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structzcl__attribute__base__t" kindref="compound">zcl_attribute_base_t</ref><sp/><sp/><sp/><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/><sp/><sp/>*attribute;</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"></highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/>start_attrib_id;</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/>uint_fast8_t<sp/>remaining;</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"></highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmd<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZCL_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>returning<sp/>-EINVAL\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__);</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>;</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"></highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/>discover<sp/>=<sp/>cmd-&gt;<ref refid="group__zcl_1gaf0e34793a3febabcdb61c020aecbf805" kindref="member">zcl_payload</ref>;</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZCL_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>---<sp/>discover<sp/>attributes,<sp/>start<sp/>@<sp/>0x%04x,<sp/>return<sp/>%u<sp/>max\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__,<sp/><ref refid="group__util__byteorder_1ga684a5d26d1989cbd925e97292cc81c72" kindref="member">le16toh</ref>(<sp/>discover-&gt;start_attrib_id_le),</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>discover-&gt;max_return_count);</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1390"><highlight class="normal"></highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/>start_response<sp/>=<sp/>(<ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/>*)&amp;response</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><ref refid="group__zcl_1ga592c970c1f0bda49f1c618d2895dbc6d" kindref="member">zcl_build_header</ref>(<sp/>&amp;response.header,<sp/>cmd);</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/>response.header.command<sp/>=<sp/><ref refid="group__zcl_1gae15c30229c1d8a8cdee1bd92b2cc6a15" kindref="member">ZCL_CMD_DISCOVER_ATTRIB_RESP</ref>;</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/>write_attrib<sp/>=<sp/>response.attribs;</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/>attribute<sp/>=<sp/>cmd-&gt;<ref refid="group__zcl_1ga04c31df34f50e8dd1efaf1105631b2bc" kindref="member">attributes</ref>;</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>attribute)</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZCL_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>cluster<sp/>has<sp/>no<sp/>attributes\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__);</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>response.complete<sp/>=<sp/>ZCL_BOOL_TRUE;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>attributes<sp/>to<sp/>send</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>since<sp/>end<sp/>of<sp/>list<sp/>ID<sp/>0xFFFF,<sp/>we&apos;ll<sp/>always<sp/>stop<sp/>when<sp/>we<sp/>hit<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>start_attrib_id<sp/>=<sp/><ref refid="group__util__byteorder_1ga684a5d26d1989cbd925e97292cc81c72" kindref="member">le16toh</ref>(<sp/>discover-&gt;start_attrib_id_le);</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(attribute-&gt;id<sp/>&lt;<sp/>start_attrib_id)</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attribute<sp/>=<sp/><ref refid="group__zcl_1ga66d9c3c646422e71fed6c94d67c14fdd" kindref="member">zcl_attribute_get_next</ref>(<sp/>attribute);</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"></highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>limit<sp/>response<sp/>to<sp/>minimum<sp/>of<sp/>requested<sp/>amount<sp/>or<sp/>our<sp/>buffer<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>remaining<sp/>=<sp/>discover-&gt;max_return_count;</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(remaining<sp/>&gt;<sp/>ZCL_DISCOVER_ATTRIB_MAX)</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remaining<sp/>=<sp/>ZCL_DISCOVER_ATTRIB_MAX;</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"></highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Odd<sp/>loop<sp/>construct<sp/>(with<sp/>two<sp/>breaks)<sp/>allows<sp/>for<sp/>setting<sp/>&quot;complete&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>field<sp/>to<sp/>TRUE,<sp/>even<sp/>if<sp/>we&apos;ve<sp/>run<sp/>out<sp/>of<sp/>room<sp/>or<sp/>requestor<sp/>doesn&apos;t<sp/>want</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>more<sp/>attributes,<sp/>or<sp/>our<sp/>attribute<sp/>list<sp/>was<sp/>empty.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>response.complete<sp/>=<sp/>ZCL_BOOL_FALSE;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>default<sp/>to<sp/>incomplete</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>see<sp/>if<sp/>there<sp/>are<sp/>any<sp/>more<sp/>attributes<sp/>to<sp/>send</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attribute-&gt;id<sp/>==<sp/><ref refid="group__zcl_1gab05da20cf1dfaef97e20dfca2fd26d14" kindref="member">ZCL_ATTRIBUTE_END_OF_LIST</ref>)</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response.complete<sp/>=<sp/>ZCL_BOOL_TRUE;</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Break<sp/>out<sp/>of<sp/>loop<sp/>if<sp/>we&apos;re<sp/>out<sp/>of<sp/>space,<sp/>or<sp/>filled<sp/>the<sp/>request.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Leave<sp/>response.complete<sp/>set<sp/>to<sp/>FALSE<sp/>since<sp/>there&apos;s<sp/>more</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>attributes<sp/>left.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>remaining--)</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_attrib-&gt;id_le<sp/>=<sp/><ref refid="group__util__byteorder_1ga3ea73a6089f61223b225c46e2ba58a47" kindref="member">htole16</ref>(<sp/>attribute-&gt;id);</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_attrib-&gt;type<sp/>=<sp/>attribute-&gt;type;</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++write_attrib;</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attribute<sp/>=<sp/><ref refid="group__zcl_1ga66d9c3c646422e71fed6c94d67c14fdd" kindref="member">zcl_attribute_get_next</ref>(<sp/>attribute);</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"></highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__zcl_1ga947f6103f6bbe716ddeacbaed65e3ce3" kindref="member">zcl_send_response</ref>(<sp/>cmd,<sp/>start_response,</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/>*)write_attrib<sp/>-<sp/>start_response);</highlight></codeline>
<codeline lineno="1447"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"></highlight></codeline>
<codeline lineno="1449"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>zcl_command_build<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1450"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1451"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__XBEE_PLATFORM_HCS08</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1452"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#pragma<sp/>MESSAGE<sp/>DISABLE<sp/>C4000<sp/><sp/><sp/><sp/>//<sp/>Condition<sp/>always<sp/>TRUE<sp/>is<sp/>OK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1453"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1454"><highlight class="normal"></highlight></codeline>
<codeline lineno="1473"><highlight class="normal">zigbee_zcl_debug</highlight></codeline>
<codeline lineno="1474" refid="group__zcl_1gadeb35ab493fffec9ba1c33f658929136" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__zcl_1gadeb35ab493fffec9ba1c33f658929136" kindref="member">zcl_command_build</ref>(<sp/><ref refid="structzcl__command__t" kindref="compound">zcl_command_t</ref><sp/>*cmd,</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*envelope,<sp/><ref refid="structzcl__attribute__tree__t" kindref="compound">zcl_attribute_tree_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*tree)</highlight></codeline>
<codeline lineno="1476"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__zcl_1gafc361d46dded7f1761048d78e3d4e18d" kindref="member">zcl_header_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/><sp/><sp/>*header;</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__zcl_1gaece1b64b04ac629f83358d6d815451a5" kindref="member">zcl_header_common_t</ref><sp/><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/><sp/><sp/>*common;</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><ref refid="structzcl__command__t" kindref="compound">zcl_command_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__xbee__atcmd_1ga1a5aaa930940857f68f245eeb89506b5" kindref="member">command</ref>;</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"></highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmd<sp/>==<sp/>NULL<sp/>||<sp/>envelope<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZCL_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>returning<sp/>-EINVAL\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__);</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>;</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"></highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/>header<sp/>=<sp/>envelope-&gt;payload;</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/>command.<ref refid="group__zcl_1ga1c24c7848d60bc6aa335a8ba9fd14b7a" kindref="member">envelope</ref><sp/>=<sp/>envelope;</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/>command.<ref refid="group__zcl_1ga5226462a41663bc81a5d67c04f18868a" kindref="member">frame_control</ref><sp/>=<sp/>header-&gt;frame_control;</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(command.<ref refid="group__zcl_1ga5226462a41663bc81a5d67c04f18868a" kindref="member">frame_control</ref><sp/>&amp;<sp/><ref refid="group__zcl_1ga48ffbdfe840975527d8e9e6d86c12dae" kindref="member">ZCL_FRAME_MFG_SPECIFIC</ref>)</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>common<sp/>=<sp/>&amp;header-&gt;type.mfg.common;</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>command.<ref refid="group__zcl_1ga011fb17c1112658806badaccba7a246d" kindref="member">mfg_code</ref><sp/>=<sp/><ref refid="group__util__byteorder_1ga684a5d26d1989cbd925e97292cc81c72" kindref="member">le16toh</ref>(<sp/>header-&gt;type.mfg.mfg_code_le);</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>command.<ref refid="group__zcl_1ga0ff9f63e333676ba1359f505d02dd281" kindref="member">length</ref><sp/>=<sp/>(<ref refid="group__hal__dos_1ga2140805d08462d474b82ddc8d1c2f3e6" kindref="member">int16_t</ref>)<sp/>envelope-&gt;length<sp/>-<sp/>5;</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>common<sp/>=<sp/>&amp;header-&gt;type.std.common;</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>command.<ref refid="group__zcl_1ga011fb17c1112658806badaccba7a246d" kindref="member">mfg_code</ref><sp/>=<sp/>ZCL_MFG_NONE;</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>command.<ref refid="group__zcl_1ga0ff9f63e333676ba1359f505d02dd281" kindref="member">length</ref><sp/>=<sp/>(<ref refid="group__hal__dos_1ga2140805d08462d474b82ddc8d1c2f3e6" kindref="member">int16_t</ref>)<sp/>envelope-&gt;length<sp/>-<sp/>3;</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"></highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(command.<ref refid="group__zcl_1ga0ff9f63e333676ba1359f505d02dd281" kindref="member">length</ref><sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memset(<sp/>cmd,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*cmd);</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__hal_1ga251e9b536ed96ccb16aa28ca2d5bd656" kindref="member">EBADMSG</ref>;</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"></highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/>command.<ref refid="group__zcl_1gacb5c8866a58116314f6c8eda9dc3544c" kindref="member">sequence</ref><sp/>=<sp/>common-&gt;sequence;</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/>command.<ref refid="group__zcl_1ga1a5aaa930940857f68f245eeb89506b5" kindref="member">command</ref><sp/>=<sp/>common-&gt;command;</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/>command.<ref refid="group__zcl_1gaf0e34793a3febabcdb61c020aecbf805" kindref="member">zcl_payload</ref><sp/>=<sp/>&amp;common-&gt;payload;</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"></highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/>command.<ref refid="group__zcl_1ga04c31df34f50e8dd1efaf1105631b2bc" kindref="member">attributes</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tree)</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tree-&gt;manufacturer_id<sp/>==<sp/>command.<ref refid="group__zcl_1ga011fb17c1112658806badaccba7a246d" kindref="member">mfg_code</ref>)</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>found<sp/>the<sp/>attributes<sp/>for<sp/>the<sp/>manufacturer<sp/>ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((command.<ref refid="group__zcl_1ga5226462a41663bc81a5d67c04f18868a" kindref="member">frame_control</ref><sp/>&amp;<sp/><ref refid="group__zcl_1ga38975849d925ebb3643cb9f5d62b68fe" kindref="member">ZCL_FRAME_DIRECTION</ref>)</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/><ref refid="group__zcl_1ga245f966df7431d5b9268bbf227770173" kindref="member">ZCL_FRAME_CLIENT_TO_SERVER</ref>)</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>command.<ref refid="group__zcl_1ga04c31df34f50e8dd1efaf1105631b2bc" kindref="member">attributes</ref><sp/>=<sp/>tree-&gt;server;</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>command.<ref refid="group__zcl_1ga04c31df34f50e8dd1efaf1105631b2bc" kindref="member">attributes</ref><sp/>=<sp/>tree-&gt;client;</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tree-&gt;manufacturer_id<sp/>==<sp/>ZCL_MFG_NONE)</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>the<sp/>last<sp/>branch<sp/>of<sp/>the<sp/>tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++tree;</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"></highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/>*cmd<sp/>=<sp/><ref refid="group__xbee__atcmd_1ga1a5aaa930940857f68f245eeb89506b5" kindref="member">command</ref>;</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1545"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__XBEE_PLATFORM_HCS08</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1547"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#pragma<sp/>MESSAGE<sp/>DEFAULT<sp/>C4000<sp/><sp/><sp/><sp/>//<sp/>restore<sp/>C4000<sp/>(Condition<sp/>always<sp/>TRUE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1548"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1549"><highlight class="normal"></highlight></codeline>
<codeline lineno="1550"><highlight class="normal"></highlight></codeline>
<codeline lineno="1551"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>zcl_command_dump<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1552"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight></codeline>
<codeline lineno="1559"><highlight class="normal">zigbee_zcl_debug</highlight></codeline>
<codeline lineno="1560" refid="group__zcl_1gaca5c04dd787b041bf40f3b2a4463bb70" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__zcl_1gaca5c04dd787b041bf40f3b2a4463bb70" kindref="member">zcl_command_dump</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structzcl__command__t" kindref="compound">zcl_command_t</ref><sp/>*cmd)</highlight></codeline>
<codeline lineno="1561"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/>frame_control;</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*b;</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__zdo_1gab2b3adeb2a67e656ff030b56727fd0ac" kindref="member">length</ref>;</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*zcl_frame_type[]<sp/>=</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;profile&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;cluster&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;reserved1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;reserved2&quot;</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*zcl_general_cmd[]<sp/>=</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/></highlight><highlight class="stringliteral">&quot;read_attrib&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;read_attrib_resp&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;write_attrib&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;write_attrib_undiv&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;write_attrib_resp&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;write_attrib_noresp&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;configure_report&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;configure_report_resp&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;read_report_cfg&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;read_report_cfg_resp&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;report_attrib&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;default_resp&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;discover_attrib&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;discover_attrib_resp&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;read_struct_attrib&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;write_struct_attrib&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;write_struct_attrib_resp&quot;</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"></highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmd<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZCL_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>puts(<sp/></highlight><highlight class="stringliteral">&quot;can&apos;t<sp/>dump<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"></highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/>frame_control<sp/>=<sp/>cmd-&gt;<ref refid="group__zcl_1ga5226462a41663bc81a5d67c04f18868a" kindref="member">frame_control</ref>;</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>command,<sp/>%s,<sp/>&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>zcl_frame_type[frame_control<sp/>&amp;<sp/><ref refid="group__zcl_1gad2e6a61d29cd303e906699a49fa2eb8e" kindref="member">ZCL_FRAME_TYPE_MASK</ref>],</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(frame_control<sp/>&amp;<sp/><ref refid="group__zcl_1ga38975849d925ebb3643cb9f5d62b68fe" kindref="member">ZCL_FRAME_DIRECTION</ref>)<sp/>==<sp/><ref refid="group__zcl_1ga245f966df7431d5b9268bbf227770173" kindref="member">ZCL_FRAME_CLIENT_TO_SERVER</ref><sp/>?</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;client-to-server&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;server-to-client&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(frame_control<sp/>&amp;<sp/><ref refid="group__zcl_1ga080b9f73f48767fc6af9b5da27d30d70" kindref="member">ZCL_FRAME_DISABLE_DEF_RESP</ref>)</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;disable<sp/>default<sp/>response,<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"></highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmd-&gt;<ref refid="group__zcl_1ga011fb17c1112658806badaccba7a246d" kindref="member">mfg_code</ref>)</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;MFG<sp/>0x%04X&quot;</highlight><highlight class="normal">,<sp/>cmd-&gt;<ref refid="group__zcl_1ga011fb17c1112658806badaccba7a246d" kindref="member">mfg_code</ref>);</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"></highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;\nsequence<sp/>=<sp/>0x%02X,<sp/>command<sp/>=<sp/>0x%02X&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cmd-&gt;<ref refid="group__zcl_1gacb5c8866a58116314f6c8eda9dc3544c" kindref="member">sequence</ref>,<sp/>cmd-&gt;<ref refid="group__zcl_1ga1a5aaa930940857f68f245eeb89506b5" kindref="member">command</ref>);</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"></highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((frame_control<sp/>&amp;<sp/>ZCL_FRAME_TYPE_MASK)<sp/>==<sp/><ref refid="group__zcl_1ga332a452ea08eb67a3ebf962320bf8819" kindref="member">ZCL_FRAME_TYPE_PROFILE</ref></highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>cmd-&gt;<ref refid="group__zcl_1ga1a5aaa930940857f68f245eeb89506b5" kindref="member">command</ref><sp/>&lt;<sp/><ref refid="group__hal_1ga2fb602f8a5b3533a57c2c4b92f248569" kindref="member">_TABLE_ENTRIES</ref>(<sp/>zcl_general_cmd))</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>zcl_general_cmd[cmd-&gt;<ref refid="group__zcl_1ga1a5aaa930940857f68f245eeb89506b5" kindref="member">command</ref>]);</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>cmd-&gt;<ref refid="group__zcl_1gaf0e34793a3febabcdb61c020aecbf805" kindref="member">zcl_payload</ref>;</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>length<sp/>=<sp/>cmd-&gt;<ref refid="group__zcl_1ga0ff9f63e333676ba1359f505d02dd281" kindref="member">length</ref>;</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"></highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>parse<sp/>certain<sp/>general<sp/>commands</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(cmd-&gt;<ref refid="group__zcl_1ga1a5aaa930940857f68f245eeb89506b5" kindref="member">command</ref>)</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__zcl_1ga92499f538455b8d5a525510fba54adb2" kindref="member">ZCL_CMD_DEFAULT_RESP</ref>:</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(length<sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>puts(<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;\tCommand<sp/>0x%02X:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>b[0],<sp/><ref refid="group__zcl_1ga04c32f1b9f6c36fae06e9bed5bd8f7dd" kindref="member">zcl_status_text</ref>(<sp/>b[1]));</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"></highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__zcl_1ga0595c0f6957be4e80265ecd36158c0ae" kindref="member">ZCL_CMD_WRITE_ATTRIB_RESP</ref>:</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(length<sp/>==<sp/>1<sp/>&amp;&amp;<sp/>*b<sp/>==<sp/>ZCL_STATUS_SUCCESS)</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>puts(<sp/></highlight><highlight class="stringliteral">&quot;<sp/>SUCCESS&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>puts(<sp/></highlight><highlight class="stringliteral">&quot;<sp/>with<sp/>errors:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(length<sp/>&gt;=<sp/>3)</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;\tattribute<sp/>0x%02X%02X:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>b[2],<sp/>b[1],</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zcl_1ga04c32f1b9f6c36fae06e9bed5bd8f7dd" kindref="member">zcl_status_text</ref>(<sp/>b[0]));</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length<sp/>-=<sp/>3;</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>+=<sp/>3;</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(length<sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;\tunmatched<sp/>bytes<sp/>0x%02X<sp/>0x%02X\n&quot;</highlight><highlight class="normal">,<sp/>b[0],<sp/>b[1]);</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(length<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;\tunmatched<sp/>byte<sp/>0x%02X\n&quot;</highlight><highlight class="normal">,<sp/>b[0]);</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"></highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;<sp/>with<sp/>%u-byte<sp/>payload:\n&quot;</highlight><highlight class="normal">,<sp/>cmd-&gt;<ref refid="group__zcl_1ga0ff9f63e333676ba1359f505d02dd281" kindref="member">length</ref>);</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__util_1gaa321236a0cb6f4e0dad592fdf1b550d2" kindref="member">hex_dump</ref>(<sp/>cmd-&gt;<ref refid="group__zcl_1gaf0e34793a3febabcdb61c020aecbf805" kindref="member">zcl_payload</ref>,<sp/>cmd-&gt;<ref refid="group__zcl_1ga0ff9f63e333676ba1359f505d02dd281" kindref="member">length</ref>,<sp/><ref refid="group__hal_1ga696f6553e33cbd20eda34e220ec9939a" kindref="member">HEX_DUMP_FLAG_TAB</ref>);</highlight></codeline>
<codeline lineno="1650"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"></highlight></codeline>
<codeline lineno="1652"><highlight class="normal"></highlight></codeline>
<codeline lineno="1653"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>zcl_envelope_dump<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1654"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight></codeline>
<codeline lineno="1661" refid="group__zcl_1ga2057f6176d44e9fad2df4f619e5777d3" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__zcl_1ga2057f6176d44e9fad2df4f619e5777d3" kindref="member">zcl_envelope_payload_dump</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref><sp/>*envelope)</highlight></codeline>
<codeline lineno="1662"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><ref refid="structzcl__command__t" kindref="compound">zcl_command_t</ref><sp/>zcl;</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"></highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(envelope<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>NULL<sp/>envelope<sp/>passed\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__);</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"></highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="group__zcl_1gadeb35ab493fffec9ba1c33f658929136" kindref="member">zcl_command_build</ref>(<sp/>&amp;zcl,<sp/>envelope,<sp/>NULL);</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err)</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>zcl_command_dump()<sp/>returned<sp/>%d<sp/>for<sp/>%u-byte<sp/>payload\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__,<sp/>err,<sp/>envelope-&gt;<ref refid="group__wpan__aps_1ga1892eba2086d12ac2b09005aeb09ea3b" kindref="member">length</ref>);</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__util_1gaa321236a0cb6f4e0dad592fdf1b550d2" kindref="member">hex_dump</ref>(<sp/>envelope-&gt;<ref refid="group__wpan__aps_1ga8737375e27cb391ff381fff10dc0c132" kindref="member">payload</ref>,<sp/>envelope-&gt;<ref refid="group__wpan__aps_1ga1892eba2086d12ac2b09005aeb09ea3b" kindref="member">length</ref>,<sp/><ref refid="group__hal_1gaec79525addd1a70fda55b1ea11534832" kindref="member">HEX_DUMP_FLAG_OFFSET</ref>);</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"></highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__zcl_1gaca5c04dd787b041bf40f3b2a4463bb70" kindref="member">zcl_command_dump</ref>(<sp/>&amp;zcl);</highlight></codeline>
<codeline lineno="1682"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"></highlight></codeline>
<codeline lineno="1684"><highlight class="normal"></highlight></codeline>
<codeline lineno="1685"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>zcl_invalid_cluster<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1686"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight></codeline>
<codeline lineno="1701"><highlight class="normal">zigbee_zcl_debug</highlight></codeline>
<codeline lineno="1702" refid="group__zcl_1ga23e4657d006b8b39ac54f0ee61786910" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__zcl_1ga23e4657d006b8b39ac54f0ee61786910" kindref="member">zcl_invalid_cluster</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*envelope,</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><ref refid="structwpan__ep__state__t" kindref="compound">wpan_ep_state_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*ep_state)</highlight></codeline>
<codeline lineno="1704"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><ref refid="structzcl__command__t" kindref="compound">zcl_command_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zcl;</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error;</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"></highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>endpoint<sp/>handlers<sp/>follow<sp/>specific<sp/>API,<sp/>this<sp/>one<sp/>doesn&apos;t<sp/>use<sp/>ep_state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal_1gacddb73dac3fd1bdec26cd7dc0a652c00" kindref="member">XBEE_UNUSED_PARAMETER</ref>(<sp/>ep_state);</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"></highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>note<sp/>that<sp/>zcl_command_build<sp/>will<sp/>check<sp/>for<sp/>NULL<sp/>envelope</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1712"><highlight class="normal"></highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="group__zcl_1gadeb35ab493fffec9ba1c33f658929136" kindref="member">zcl_command_build</ref>(<sp/>&amp;zcl,<sp/>envelope,<sp/>NULL);</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="group__zcl_1gab5c99acba0d864acd326bcab46d1416e" kindref="member">zcl_default_response</ref>(<sp/>&amp;zcl,<sp/>ZCL_STATUS_FAILURE);</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"></highlight></codeline>
<codeline lineno="1719"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZCL_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>returning<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>error);</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="1723"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"></highlight></codeline>
<codeline lineno="1725"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>zcl_invalid_command<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1726"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight></codeline>
<codeline lineno="1746"><highlight class="normal">zigbee_zcl_debug</highlight></codeline>
<codeline lineno="1747" refid="group__zcl_1ga4251fbed33d85d2f7bbccb48857cae95" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__zcl_1ga4251fbed33d85d2f7bbccb48857cae95" kindref="member">zcl_invalid_command</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*envelope)</highlight></codeline>
<codeline lineno="1748"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__xbee__atcmd_1gade818037fd6c985038ff29656089758d" kindref="member">status</ref>;</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><ref refid="structzcl__command__t" kindref="compound">zcl_command_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zcl;</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error;</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"></highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>note<sp/>that<sp/>zcl_command_build<sp/>checks<sp/>for<sp/>NULL<sp/>envelope</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="group__zcl_1gadeb35ab493fffec9ba1c33f658929136" kindref="member">zcl_command_build</ref>(<sp/>&amp;zcl,<sp/>envelope,<sp/>NULL);</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>(zcl.<ref refid="group__zcl_1ga5226462a41663bc81a5d67c04f18868a" kindref="member">frame_control</ref><sp/>&amp;<sp/><ref refid="group__zcl_1ga48ffbdfe840975527d8e9e6d86c12dae" kindref="member">ZCL_FRAME_MFG_SPECIFIC</ref>)</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>ZCL_STATUS_UNSUP_MANUF_GENERAL_COMMAND</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>ZCL_STATUS_UNSUP_GENERAL_COMMAND;</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((zcl.<ref refid="group__zcl_1ga5226462a41663bc81a5d67c04f18868a" kindref="member">frame_control</ref><sp/>&amp;<sp/><ref refid="group__zcl_1gad2e6a61d29cd303e906699a49fa2eb8e" kindref="member">ZCL_FRAME_TYPE_MASK</ref>)<sp/>==<sp/><ref refid="group__zcl_1ga75efeedff171558e183dbf8d646ea5dd" kindref="member">ZCL_FRAME_TYPE_CLUSTER</ref>)</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cluster-specific<sp/>error<sp/>codes<sp/>are<sp/>one<sp/>less<sp/>than<sp/>general<sp/>error<sp/>codes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--<ref refid="group__xbee__atcmd_1gade818037fd6c985038ff29656089758d" kindref="member">status</ref>;</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"></highlight></codeline>
<codeline lineno="1766"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZCL_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>status<sp/>0x%02x<sp/>for<sp/>invalid<sp/>cluster<sp/>0x%04x/cmd<sp/>0x%02x\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__,<sp/>status,<sp/>envelope-&gt;cluster_id,<sp/>zcl.<ref refid="group__zcl_1ga1a5aaa930940857f68f245eeb89506b5" kindref="member">command</ref>);</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1770"><highlight class="normal"></highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="group__zcl_1gab5c99acba0d864acd326bcab46d1416e" kindref="member">zcl_default_response</ref>(<sp/>&amp;zcl,<sp/>status);</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"></highlight></codeline>
<codeline lineno="1774"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZCL_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>returning<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>error);</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="1778"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"></highlight></codeline>
<codeline lineno="1780"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>zcl_general_command<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1781"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight></codeline>
<codeline lineno="1802"><highlight class="normal">zigbee_zcl_debug</highlight></codeline>
<codeline lineno="1803" refid="group__zcl_1gac3849121e93e777ce9a7510d24517b9b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__zcl_1gac3849121e93e777ce9a7510d24517b9b" kindref="member">zcl_general_command</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*envelope,</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*context)</highlight></codeline>
<codeline lineno="1805"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><ref refid="structzcl__command__t" kindref="compound">zcl_command_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zcl;</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conversation;</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error;</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"></highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="group__zcl_1gadeb35ab493fffec9ba1c33f658929136" kindref="member">zcl_command_build</ref>(<sp/>&amp;zcl,<sp/>envelope,<sp/>context);</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZCL_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>returning<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>error);</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"></highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((zcl.<ref refid="group__zcl_1ga5226462a41663bc81a5d67c04f18868a" kindref="member">frame_control</ref><sp/>&amp;<sp/><ref refid="group__zcl_1gad2e6a61d29cd303e906699a49fa2eb8e" kindref="member">ZCL_FRAME_TYPE_MASK</ref>)<sp/>!=<sp/><ref refid="group__zcl_1ga332a452ea08eb67a3ebf962320bf8819" kindref="member">ZCL_FRAME_TYPE_PROFILE</ref>)</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZCL_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>ERROR,<sp/>non-profile<sp/>frame<sp/>type<sp/>on<sp/>%u-byte<sp/>command\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__,<sp/>envelope-&gt;length);</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__util_1gaa321236a0cb6f4e0dad592fdf1b550d2" kindref="member">hex_dump</ref>(<sp/>envelope-&gt;payload,<sp/>envelope-&gt;length,<sp/><ref refid="group__hal_1ga696f6553e33cbd20eda34e220ec9939a" kindref="member">HEX_DUMP_FLAG_TAB</ref>);</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1826"><highlight class="normal"></highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__zcl_1ga4251fbed33d85d2f7bbccb48857cae95" kindref="member">zcl_invalid_command</ref>(<sp/>envelope);</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"></highlight></codeline>
<codeline lineno="1830"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZCL_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>processing<sp/>%u-byte<sp/>GENERAL<sp/>command\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__,<sp/>envelope-&gt;length);</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__util_1gaa321236a0cb6f4e0dad592fdf1b550d2" kindref="member">hex_dump</ref>(<sp/>envelope-&gt;payload,<sp/>envelope-&gt;length,<sp/><ref refid="group__hal_1ga696f6553e33cbd20eda34e220ec9939a" kindref="member">HEX_DUMP_FLAG_TAB</ref>);</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1835"><highlight class="normal"></highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1837"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>Note<sp/>regarding<sp/>manufacturer-specific<sp/>flag.<sp/><sp/>On<sp/>general<sp/>commands</highlight></codeline>
<codeline lineno="1838"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>(where<sp/>the<sp/>frame<sp/>type<sp/>is<sp/>PROFILE),<sp/>the<sp/>flag<sp/>indicates<sp/>manufacturer-</highlight></codeline>
<codeline lineno="1839"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>specific<sp/>ATTRIBUTES,<sp/>not<sp/>COMMANDS.</highlight></codeline>
<codeline lineno="1840"><highlight class="comment"></highlight></codeline>
<codeline lineno="1841"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>zcl_command_build()<sp/>function<sp/>will<sp/>select<sp/>the<sp/>correct<sp/>attributes</highlight></codeline>
<codeline lineno="1842"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>branch<sp/>of<sp/>the<sp/>attribute<sp/>tree,<sp/>based<sp/>on<sp/>the<sp/>manufacturer<sp/>ID<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="1843"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>request.</highlight></codeline>
<codeline lineno="1844"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1845"><highlight class="normal"></highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(zcl.<ref refid="group__zcl_1ga1a5aaa930940857f68f245eeb89506b5" kindref="member">command</ref>)</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__zcl_1ga2919d6fc8068efac4c9969938a4b9ff5" kindref="member">ZCL_CMD_DISCOVER_ATTRIB</ref>:</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__zcl_1ga385c41594437cdf661bfb518f11ee0fc" kindref="member">_zcl_discover_attributes</ref>(<sp/>&amp;zcl);</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"></highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__zcl_1ga7a3d858b466e4202c6f2148a1b6a3eb2" kindref="member">ZCL_CMD_READ_ATTRIB</ref>:</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__zcl_1gaa34c917bf05a57503e63553efcb77dc9" kindref="member">_zcl_read_attributes</ref>(<sp/>&amp;zcl);</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"></highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__zcl_1ga8843c2bcb861c091ae6f9a4e36f7e4d8" kindref="member">ZCL_CMD_WRITE_ATTRIB</ref>:</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__zcl_1ga9d67bef86e1ec74d60c06e1a09cfb86a" kindref="member">ZCL_CMD_WRITE_ATTRIB_UNDIV</ref>:</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__zcl_1ga57091c6a11fbc2680ac63fa262bf74ca" kindref="member">ZCL_CMD_WRITE_ATTRIB_NORESP</ref>:</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__zcl_1gaff3abb5d2022101c2873e7a8e8b027e5" kindref="member">_zcl_write_attributes</ref>(<sp/>&amp;zcl);</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"></highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__zcl_1ga92499f538455b8d5a525510fba54adb2" kindref="member">ZCL_CMD_DEFAULT_RESP</ref>:</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZCL_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__zcl_1ga71b28f3a9303e556e06d1a4d18c7a834" kindref="member">zcl_default_response_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*resp<sp/>=<sp/>zcl.<ref refid="group__zcl_1gaf0e34793a3febabcdb61c020aecbf805" kindref="member">zcl_payload</ref>;</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>got<sp/>default<sp/>response<sp/>(%s)<sp/>for<sp/>command<sp/>0x%02x\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__,<sp/><ref refid="group__zcl_1ga04c32f1b9f6c36fae06e9bed5bd8f7dd" kindref="member">zcl_status_text</ref>(<sp/>resp-&gt;status),<sp/>resp-&gt;command);</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>need<sp/>to<sp/>match<sp/>transaction<sp/>ID<sp/>in<sp/>conversation<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fall<sp/>through<sp/>to<sp/>other<sp/>response<sp/>handlers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__zcl_1ga85ca2068c5dc26db307b60b0ac54bc9c" kindref="member">ZCL_CMD_READ_ATTRIB_RESP</ref>:</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__zcl_1ga0595c0f6957be4e80265ecd36158c0ae" kindref="member">ZCL_CMD_WRITE_ATTRIB_RESP</ref>:</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__zcl_1gae15c30229c1d8a8cdee1bd92b2cc6a15" kindref="member">ZCL_CMD_DISCOVER_ATTRIB_RESP</ref>:</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_CMD_WRITE_STRUCT_ATTRIB_RESP:</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conversation<sp/>=<sp/><ref refid="group__wpan__aps_1gaf56e4d0e52462b5cf41c5fa5f23ea952" kindref="member">wpan_conversation_response</ref>(<sp/>NULL,<sp/>zcl.<ref refid="group__zcl_1gacb5c8866a58116314f6c8eda9dc3544c" kindref="member">sequence</ref>,</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>envelope);</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(conversation<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>successfully<sp/>dispatched<sp/>to<sp/>an<sp/>existing<sp/>conversation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>conversation;</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>exit<sp/>to<sp/>default<sp/>response</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1881"><highlight class="normal"></highlight></codeline>
<codeline lineno="1882"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>case<sp/>ZCL_CMD_READ_STRUCT_ATTRIB:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1883"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>case<sp/>ZCL_CMD_WRITE_STRUCT_ATTRIB:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reading/writing<sp/>of<sp/>structured<sp/>attributes<sp/>(arrays,<sp/>structures,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sets,<sp/>bags)<sp/>not<sp/>implemented</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"></highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__zcl_1ga4251fbed33d85d2f7bbccb48857cae95" kindref="member">zcl_invalid_command</ref>(<sp/>envelope);</highlight></codeline>
<codeline lineno="1889"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"></highlight></codeline>
<codeline lineno="1891"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>zcl_status_text<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1892"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight></codeline>
<codeline lineno="1901"><highlight class="normal">zigbee_zcl_debug</highlight></codeline>
<codeline lineno="1902" refid="group__zcl_1ga04c32f1b9f6c36fae06e9bed5bd8f7dd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="group__zcl_1ga04c32f1b9f6c36fae06e9bed5bd8f7dd" kindref="member">zcl_status_text</ref>(<sp/>uint_fast8_t<sp/><ref refid="group__xbee__atcmd_1gade818037fd6c985038ff29656089758d" kindref="member">status</ref>)</highlight></codeline>
<codeline lineno="1903"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>unknown[15];</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"></highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(status)</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_STATUS_SUCCESS:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Success&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_STATUS_FAILURE:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Failure&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_STATUS_NOT_AUTHORIZED:<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Not<sp/>Authorized&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_STATUS_RESERVED_FIELD_NOT_ZERO:</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Rerserved<sp/>Field<sp/>Not<sp/>Zero&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_STATUS_MALFORMED_COMMAND:<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Malformed<sp/>Command&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_STATUS_UNSUP_CLUSTER_COMMAND:</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Unsupported<sp/>Cluster<sp/>Command&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_STATUS_UNSUP_GENERAL_COMMAND:</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Unsupported<sp/>General<sp/>Command&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_STATUS_UNSUP_MANUF_CLUSTER_COMMAND:</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Unsup.<sp/>Mfg<sp/>Cluster<sp/>Command&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_STATUS_UNSUP_MANUF_GENERAL_COMMAND:</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Unsup.<sp/>Mfg<sp/>General<sp/>Command&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_STATUS_INVALID_FIELD:<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>Field&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_STATUS_UNSUPPORTED_ATTRIBUTE:</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Unsupported<sp/>Attribute&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_STATUS_INVALID_VALUE:<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>Value&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_STATUS_READ_ONLY:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Read-only&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_STATUS_INSUFFICIENT_SPACE:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Insufficient<sp/>Space&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_STATUS_DUPLICATE_EXISTS:<sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Duplicate<sp/>Exists&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_STATUS_NOT_FOUND:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Not<sp/>Found&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_STATUS_UNREPORTABLE_ATTRIBUTE:</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Unreportable<sp/>Attribute&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_STATUS_INVALID_DATA_TYPE:<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>Data<sp/>Type&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_STATUS_INVALID_SELECTOR:<sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>Selector&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_STATUS_WRITE_ONLY:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Write-only&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_STATUS_INCONSISTENT_STARTUP_STATE:</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Inconsistent<sp/>Startup<sp/>State&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_STATUS_DEFINED_OUT_OF_BAND:</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Defined<sp/>Out<sp/>Of<sp/>Band&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_STATUS_HARDWARE_FAILURE:<sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Hardware<sp/>Failure&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_STATUS_SOFTWARE_FAILURE:<sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Software<sp/>Failure&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_STATUS_CALIBRATION_ERROR:<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Calibration<sp/>Error&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"></highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(<sp/>unknown,<sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>(0x%02x)&quot;</highlight><highlight class="normal">,<sp/>status);</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>unknown;</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1947"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/zigbee/zigbee_zcl.c"/>
  </compounddef>
</doxygen>
