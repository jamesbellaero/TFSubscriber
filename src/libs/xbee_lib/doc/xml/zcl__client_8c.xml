<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="zcl__client_8c" kind="file" language="C++">
    <compoundname>zcl_client.c</compoundname>
    <includes local="no">ctype.h</includes>
    <includes local="no">stddef.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">time.h</includes>
    <includes refid="platform_8h" local="yes">xbee/platform.h</includes>
    <includes local="yes">xbee/time.h</includes>
    <includes refid="zdo_8h" local="yes">zigbee/zdo.h</includes>
    <includes refid="zcl_8h" local="yes">zigbee/zcl.h</includes>
    <includes refid="zcl__client_8h" local="yes">zigbee/zcl_client.h</includes>
    <incdepgraph>
      <node id="1598">
        <label>errno.h</label>
      </node>
      <node id="1599">
        <label>xbee/jslong_glue.h</label>
        <link refid="jslong__glue_8h_source"/>
        <childnode refid="1600" relation="include">
        </childnode>
      </node>
      <node id="1592">
        <label>src/zigbee/zcl_client.c</label>
        <link refid="zcl__client_8c"/>
        <childnode refid="1593" relation="include">
        </childnode>
        <childnode refid="1594" relation="include">
        </childnode>
        <childnode refid="1595" relation="include">
        </childnode>
        <childnode refid="1596" relation="include">
        </childnode>
        <childnode refid="1597" relation="include">
        </childnode>
        <childnode refid="1601" relation="include">
        </childnode>
        <childnode refid="1602" relation="include">
        </childnode>
        <childnode refid="1605" relation="include">
        </childnode>
        <childnode refid="1610" relation="include">
        </childnode>
      </node>
      <node id="1601">
        <label>xbee/time.h</label>
      </node>
      <node id="1594">
        <label>stddef.h</label>
      </node>
      <node id="1610">
        <label>zigbee/zcl_client.h</label>
        <link refid="zcl__client_8h"/>
        <childnode refid="1604" relation="include">
        </childnode>
        <childnode refid="1605" relation="include">
        </childnode>
      </node>
      <node id="1604">
        <label>wpan/aps.h</label>
        <link refid="aps_8h"/>
        <childnode refid="1603" relation="include">
        </childnode>
      </node>
      <node id="1607">
        <label>xbee/byteorder.h</label>
        <link refid="byteorder_8h"/>
        <childnode refid="1608" relation="include">
        </childnode>
        <childnode refid="1597" relation="include">
        </childnode>
      </node>
      <node id="1605">
        <label>zigbee/zcl.h</label>
        <link refid="zcl_8h"/>
        <childnode refid="1597" relation="include">
        </childnode>
        <childnode refid="1604" relation="include">
        </childnode>
        <childnode refid="1606" relation="include">
        </childnode>
      </node>
      <node id="1608">
        <label>string.h</label>
      </node>
      <node id="1603">
        <label>wpan/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="1597" relation="include">
        </childnode>
      </node>
      <node id="1597">
        <label>xbee/platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="1598" relation="include">
        </childnode>
        <childnode refid="1594" relation="include">
        </childnode>
        <childnode refid="1599" relation="include">
        </childnode>
      </node>
      <node id="1606">
        <label>zigbee/zcl_types.h</label>
        <link refid="zcl__types_8h"/>
        <childnode refid="1597" relation="include">
        </childnode>
        <childnode refid="1607" relation="include">
        </childnode>
        <childnode refid="1609" relation="include">
        </childnode>
      </node>
      <node id="1609">
        <label>zigbee/zcl64.h</label>
        <link refid="zcl64_8h"/>
        <childnode refid="1597" relation="include">
        </childnode>
      </node>
      <node id="1596">
        <label>time.h</label>
      </node>
      <node id="1602">
        <label>zigbee/zdo.h</label>
        <link refid="zdo_8h"/>
        <childnode refid="1603" relation="include">
        </childnode>
        <childnode refid="1604" relation="include">
        </childnode>
      </node>
      <node id="1593">
        <label>ctype.h</label>
      </node>
      <node id="1600">
        <label>xbee/jslong.h</label>
        <link refid="jslong_8h_source"/>
      </node>
      <node id="1595">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__zcl__client_1ga83ae98abbceb7019002dd43103073552" prot="public" static="no">
        <name>zcl_client_debug</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zcl_client.c" line="34" column="10" bodyfile="src/zigbee/zcl_client.c" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group__zcl__client_1gaece15f78359a3bae016be1d24e7d9ad9" prot="public" static="no" mutable="no">
        <type>zcl_format_utctime_fn</type>
        <definition>zcl_format_utctime_fn zcl_format_utctime</definition>
        <argsstring></argsstring>
        <name>zcl_format_utctime</name>
        <initializer>= <ref refid="group__zcl__client_1gab6b575402b7ce107943e7d7c29499559" kindref="member">_zcl_format_utctime</ref></initializer>
        <briefdescription>
<para>Pointer to function that converts a zcl_utctime_t value to a human-readable timestamp. </para>        </briefdescription>
        <detaileddescription>
<para>Defaults to a function that formats timestamps as &quot;YYYY-MM-DD HH:MM:SS UTC&quot; or "[Invalid Timestamp] if <computeroutput>utctime</computeroutput> is 0xFFFFFFFF. Can be overriden by the user program to a function that uses another format. Strings must be limited to 40 characters.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">dest</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer to hold the formatted string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">utctime</parametername>
</parameternamelist>
<parameterdescription>
<para>time value to format</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Value of parameter <computeroutput>dest</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zcl_client.c" line="590" column="1" bodyfile="src/zigbee/zcl_client.c" bodystart="590" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__zcl__client_1gae0892d22ee69940130d1111960401339" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>zcl_client_debug int</type>
        <definition>int zcl_process_read_attr_response</definition>
        <argsstring>(zcl_command_t *zcl, const zcl_attribute_base_t FAR *attr_table)</argsstring>
        <name>zcl_process_read_attr_response</name>
        <param>
          <type><ref refid="structzcl__command__t" kindref="compound">zcl_command_t</ref> *</type>
          <declname>zcl</declname>
        </param>
        <param>
          <type>const <ref refid="structzcl__attribute__base__t" kindref="compound">zcl_attribute_base_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>attr_table</declname>
        </param>
        <briefdescription>
<para>Process a Read Attributes Response and populate the attibute values into an attribute table as if it was a Write Attributes Request. </para>        </briefdescription>
        <detaileddescription>
<para>Used in ZCL clients that want to read a lot of ZCL attributes. The client has a mirrored copy of the attributes on the target, and this function is used to populate that copy using the Read Attributes Responses.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">zcl</parametername>
</parameternamelist>
<parameterdescription>
<para>ZCL command to process </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">attr_list</parametername>
</parameternamelist>
<parameterdescription>
<para>start of the attribute list to use for storing attribute responses</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ZCL status value to send in a default response </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zcl_client.c" line="60" column="1" bodyfile="src/zigbee/zcl_client.c" bodystart="60" bodyend="84"/>
        <references refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" compoundref="platform_8h" startline="370">FAR</references>
      </memberdef>
      <memberdef kind="function" id="group__zcl__client_1ga24a7c15cdfe484aff260848694fccae2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>zcl_client_debug int</type>
        <definition>int zcl_client_read_attributes</definition>
        <argsstring>(wpan_envelope_t FAR *envelope, const zcl_client_read_t *client_read)</argsstring>
        <name>zcl_client_read_attributes</name>
        <param>
          <type><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>envelope</declname>
        </param>
        <param>
          <type>const <ref refid="structzcl__client__read__t" kindref="compound">zcl_client_read_t</ref> *</type>
          <declname>client_read</declname>
        </param>
        <briefdescription>
<para>Send a Read Attributes request for attributes listed in <computeroutput>client_read</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">envelope</parametername>
</parameternamelist>
<parameterdescription>
<para>addressing information for sending a ZCL Read Attributes request; this function fills in the <computeroutput>payload</computeroutput> and <computeroutput>length</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">client_read</parametername>
</parameternamelist>
<parameterdescription>
<para>data structure used by ZCL clients to do ZDO discovery followed by ZCL attribute reads</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>successfully sent request </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!0</parametername>
</parameternamelist>
<parameterdescription>
<para>error sending request </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zcl_client.c" line="103" column="1" bodyfile="src/zigbee/zcl_client.c" bodystart="103" bodyend="152"/>
        <references refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" compoundref="platform_8h" startline="370">FAR</references>
        <references refid="group___s_x_a_1ga4233297bd31be5c273d4fb0758cc54d7" compoundref="sxa_8h" startline="70">PACKED_STRUCT</references>
      </memberdef>
      <memberdef kind="function" id="group__zcl__client_1ga15f191f3166c71f3f436b2a32d108a9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>zcl_client_debug int</type>
        <definition>int _zcl_send_read_from_zdo_match</definition>
        <argsstring>(wpan_conversation_t FAR *conversation, const wpan_envelope_t FAR *envelope)</argsstring>
        <name>_zcl_send_read_from_zdo_match</name>
        <param>
          <type><ref refid="structwpan__conversation__t" kindref="compound">wpan_conversation_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>conversation</declname>
        </param>
        <param>
          <type>const <ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>envelope</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<internal><para>Process responses to ZDO Match_Desc broadcast sent by <ref refid="group__zcl__client_1ga4c75937cc0fa5c70c63f30b59a4ddebc" kindref="member">zdo_send_match_desc()</ref> and generate ZCL Read Attributes request for the attributes in the related conversation&apos;s context (a pointer to a <ref refid="structzcl__client__read__t" kindref="compound">zcl_client_read_t</ref> object).</para><para>The Read Attributes Responses are handled by the function registered to the cluster in the endpoint table.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">conversation</parametername>
</parameternamelist>
<parameterdescription>
<para>matching entry in converstation table (which contains a context pointer) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">envelope</parametername>
</parameternamelist>
<parameterdescription>
<para>envelope of response or NULL if conversation timed out</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>send ZCL request for current time </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!0</parametername>
</parameternamelist>
<parameterdescription>
<para>error sending ZCL request for current time</para></parameterdescription>
</parameteritem>
</parameterlist>
<xrefsect id="todo_1_todo000013"><xreftitle>Todo</xreftitle><xrefdescription><para>support a flag in the client_read object for sending ZCL request to first endpoint in list (current behavior) or all endpoints (for example, to query ALL meter endpoints on ALL radios).</para></xrefdescription></xrefsect></para><para><xrefsect id="todo_1_todo000014"><xreftitle>Todo</xreftitle><xrefdescription><para>find a way to track whether frame came in from broadcast or unicast response <ndash/> if unicast, can return WPAN_CONVERSATION_END </para></xrefdescription></xrefsect></para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zcl_client.c" line="182" column="1" bodyfile="src/zigbee/zcl_client.c" bodystart="182" bodyend="278"/>
        <references refid="group__zdo_1ga7d397493728da2bca8d55b2d61c4ec5d" compoundref="zdo_8h" startline="403">endpoint</references>
        <references refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" compoundref="platform_8h" startline="370">FAR</references>
        <references refid="group___s_x_a_1ga4233297bd31be5c273d4fb0758cc54d7" compoundref="sxa_8h" startline="70">PACKED_STRUCT</references>
        <referencedby refid="group__zcl__client_1gae673efbd325cea1f3befacda58332191" compoundref="zcl__client_8c" startline="300" endline="305">zcl_find_and_read_attributes</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__zcl__client_1gae673efbd325cea1f3befacda58332191" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>zcl_client_debug int</type>
        <definition>int zcl_find_and_read_attributes</definition>
        <argsstring>(wpan_dev_t *dev, const uint16_t *clusters, const zcl_client_read_t FAR *cr)</argsstring>
        <name>zcl_find_and_read_attributes</name>
        <param>
          <type><ref refid="structwpan__dev__t" kindref="compound">wpan_dev_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>const <ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref> *</type>
          <declname>clusters</declname>
        </param>
        <param>
          <type>const <ref refid="structzcl__client__read__t" kindref="compound">zcl_client_read_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>cr</declname>
        </param>
        <briefdescription>
<para>Use ZDO Match Descriptor Requests to find devices with a given profile/cluster and then automatically send a ZCL Read Attributes request for some of that cluster&apos;s attributes. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>device to use for time request</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">clusters</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to list of server clusters to search for, must end with <ref refid="group__wpan__aps_1gacbfdff1cef70167f178c4e05b69f65fe" kindref="member">WPAN_CLUSTER_END_OF_LIST</ref></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cr</parametername>
</parameternamelist>
<parameterdescription>
<para>zcl_client_read record containing information on the request (endpoint, attributes, etc.); must be a static object (not an auto variable) since the ZDO responder will need to access it</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>request sent </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!0</parametername>
</parameternamelist>
<parameterdescription>
<para>error sending request </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zcl_client.c" line="300" column="1" bodyfile="src/zigbee/zcl_client.c" bodystart="300" bodyend="305"/>
        <references refid="group__zcl__client_1ga15f191f3166c71f3f436b2a32d108a9f" compoundref="zcl__client_8c" startline="182" endline="278">_zcl_send_read_from_zdo_match</references>
        <references refid="group__zcl__client_1ga4c75937cc0fa5c70c63f30b59a4ddebc" compoundref="zcl__client_8c" startline="334" endline="402">zdo_send_match_desc</references>
      </memberdef>
      <memberdef kind="function" id="group__zcl__client_1ga4c75937cc0fa5c70c63f30b59a4ddebc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>zcl_client_debug int</type>
        <definition>int zdo_send_match_desc</definition>
        <argsstring>(wpan_dev_t *dev, const uint16_t *clusters, uint16_t profile_id, wpan_response_fn callback, const void FAR *context)</argsstring>
        <name>zdo_send_match_desc</name>
        <param>
          <type><ref refid="structwpan__dev__t" kindref="compound">wpan_dev_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>const <ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref> *</type>
          <declname>clusters</declname>
        </param>
        <param>
          <type><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref></type>
          <declname>profile_id</declname>
        </param>
        <param>
          <type><ref refid="group__wpan__aps_1gabf0a6b85c9ff3ff9104c8b58c1436d72" kindref="member">wpan_response_fn</ref></type>
          <declname>callback</declname>
        </param>
        <param>
          <type>const void <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Send a ZDO Match Descriptor request for a list of cluster IDs. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>device to use for time request </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">clusters</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to list of server clusters to search for, must end with <ref refid="group__wpan__aps_1gacbfdff1cef70167f178c4e05b69f65fe" kindref="member">WPAN_CLUSTER_END_OF_LIST</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">profile_id</parametername>
</parameternamelist>
<parameterdescription>
<para>profile ID associated with the cluster IDs (cannot be WPAN_APS_PROFILE_ANY) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">callback</parametername>
</parameternamelist>
<parameterdescription>
<para>function that will process the ZDO Match Descriptor responses; see wpan_response_fn for the callback&apos;s API </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">context</parametername>
</parameternamelist>
<parameterdescription>
<para>context to pass to <computeroutput>callback</computeroutput> in the <ref refid="structwpan__conversation__t" kindref="compound">wpan_conversation_t</ref> structure</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>request sent </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!0</parametername>
</parameternamelist>
<parameterdescription>
<para>error sending request</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__zcl__client_1gae673efbd325cea1f3befacda58332191" kindref="member">zcl_find_and_read_attributes()</ref></para></simplesect>
<xrefsect id="todo_1_todo000015"><xreftitle>Todo</xreftitle><xrefdescription><para>update API to allow for unicast request in addition to broadcast </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zcl_client.c" line="334" column="1" bodyfile="src/zigbee/zcl_client.c" bodystart="334" bodyend="402"/>
        <references refid="group__wpan__types_1ga83c0da7da25848a435da46b80fb70933" compoundref="wpan__types_8c" startline="36">_WPAN_IEEE_ADDR_BROADCAST</references>
        <references refid="group__wpan__aps_1ga262a92f94287e77cb56350951893bae2" compoundref="aps_8h" startline="46">wpan_envelope_t::cluster_id</references>
        <references refid="group__wpan__aps_1ga7f9a38312b9025348d42a4ed0042ce37" compoundref="aps_8h" startline="42">wpan_envelope_t::dev</references>
        <references refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" compoundref="platform_8h" startline="95">EINVAL</references>
        <references refid="group__wpan__aps_1ga2549f921e25a72dfa05a2154a792e2bf" compoundref="aps_8h" startline="43">wpan_envelope_t::ieee_address</references>
        <references refid="group__wpan__aps_1ga30948a7f8d096191895f50b80d81ca12" compoundref="aps_8h" startline="44">wpan_envelope_t::network_address</references>
        <references refid="group__wpan__types_1ga08ec03f67d0d74ba6f98da543baee129" compoundref="types_8h" startline="63">WPAN_NET_ADDR_BCAST_NOT_ASLEEP</references>
        <references refid="group__wpan__types_1ga1674d7b825e528a482725d1c06b02c10" compoundref="types_8h" startline="68">WPAN_NET_ADDR_UNDEFINED</references>
        <references refid="group__zdo_1ga8c614773175b0518e3a1f5a512dfe4d1" compoundref="zdo_8h" startline="485">ZDO_MATCH_DESC_REQ</references>
        <references refid="group__zdo_1ga5746efffb4b90718eb973796f2b4bb41" compoundref="zigbee__zdo_8c" startline="247" endline="292">zdo_match_desc_request</references>
        <referencedby refid="group__zcl__client_1gae673efbd325cea1f3befacda58332191" compoundref="zcl__client_8c" startline="300" endline="305">zcl_find_and_read_attributes</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__zcl__client_1ga11f72950e4467286ef18468fbcb4bed4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>zcl_client_debug int</type>
        <definition>int zcl_create_attribute_records</definition>
        <argsstring>(void FAR *buffer, uint8_t bufsize, const zcl_attribute_base_t FAR **p_attr_list)</argsstring>
        <name>zcl_create_attribute_records</name>
        <param>
          <type>void <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref></type>
          <declname>bufsize</declname>
        </param>
        <param>
          <type>const <ref refid="structzcl__attribute__base__t" kindref="compound">zcl_attribute_base_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> **</type>
          <declname>p_attr_list</declname>
        </param>
        <briefdescription>
<para>From a list of attributes, write ID (in little-endian byte order), type and value to a buffer as would be done in a Write Attributes Request. </para>        </briefdescription>
        <detaileddescription>
<para>The attribute list should be an array of attribute records, ending with an attribute ID of ZCL_ATTRIBUTE_END_OF_LIST.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer to write values to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bufsize</parametername>
</parameternamelist>
<parameterdescription>
<para>size of <computeroutput>buffer</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">p_attr_list</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the attribute list to encode in <computeroutput>buffer</computeroutput>; points to next attribute to encode if buffer is filled</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of bytes written to buffer </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zcl_client.c" line="426" column="1" bodyfile="src/zigbee/zcl_client.c" bodystart="426" bodyend="465"/>
        <references refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" compoundref="platform_8h" startline="370">FAR</references>
        <references refid="group__util__byteorder_1ga3ea73a6089f61223b225c46e2ba58a47" compoundref="byteorder_8h" startline="135">htole16</references>
        <references refid="group__zcl_1gab05da20cf1dfaef97e20dfca2fd26d14" compoundref="zcl_8h" startline="852">ZCL_ATTRIBUTE_END_OF_LIST</references>
        <references refid="group__zcl_1ga66d9c3c646422e71fed6c94d67c14fdd" compoundref="zigbee__zcl_8c" startline="118" endline="143">zcl_attribute_get_next</references>
        <references refid="group__zcl_1gae3f7f58d3b08caf95aa11f90e3995397" compoundref="zigbee__zcl_8c" startline="1087" endline="1223">zcl_encode_attribute_value</references>
      </memberdef>
      <memberdef kind="function" id="group__zcl__client_1ga98550adc25d4a19e4048ef9b251321ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>zcl_client_debug int</type>
        <definition>int zcl_send_write_attributes</definition>
        <argsstring>(wpan_envelope_t *envelope, const zcl_attribute_base_t FAR *attr_list)</argsstring>
        <name>zcl_send_write_attributes</name>
        <param>
          <type><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref> *</type>
          <declname>envelope</declname>
        </param>
        <param>
          <type>const <ref refid="structzcl__attribute__base__t" kindref="compound">zcl_attribute_base_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>attr_list</declname>
        </param>
        <briefdescription>
<para>Send one or more Write Attributes Requests to a node on the network. </para>        </briefdescription>
        <detaileddescription>
<internal><para><simplesect kind="note"><para>This function API and is likely to change in a future release to include a Manufacturer ID and flags for sending server-to-client and &quot;undivided&quot; write requests.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">envelope</parametername>
</parameternamelist>
<parameterdescription>
<para>envelope to use for sending request; <computeroutput>payload</computeroutput> and <computeroutput>length</computeroutput> cleared on function exit </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">attr_list</parametername>
</parameternamelist>
<parameterdescription>
<para>attributes with values to send a Write Attributes Request for</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>NULL parameter passed, or couldn&apos;t find source endpoint based on envelope </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>&lt;0</parametername>
</parameternamelist>
<parameterdescription>
<para>error trying to send request (for large writes, one or more requests may have been successful) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>request(s) sent </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zcl_client.c" line="496" column="1" bodyfile="src/zigbee/zcl_client.c" bodystart="496" bodyend="547"/>
      </memberdef>
      <memberdef kind="function" id="group__zcl__client_1gab6b575402b7ce107943e7d7c29499559" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* _zcl_format_utctime</definition>
        <argsstring>(char dest[40], zcl_utctime_t utctime)</argsstring>
        <name>_zcl_format_utctime</name>
        <param>
          <type>char</type>
          <declname>dest</declname>
          <array>[40]</array>
        </param>
        <param>
          <type>zcl_utctime_t</type>
          <declname>utctime</declname>
        </param>
        <briefdescription>
<para>Default function for zcl_format_utctime function pointer. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zcl_client.c" line="555" column="1" bodyfile="src/zigbee/zcl_client.c" bodystart="555" bodyend="575"/>
      </memberdef>
      <memberdef kind="function" id="group__zcl__client_1ga4e831f4977e3c0eb5ad556a991b7da5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int zcl_print_array_value</definition>
        <argsstring>(const void *value, int value_length)</argsstring>
        <name>zcl_print_array_value</name>
        <param>
          <type>const void *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value_length</declname>
        </param>
        <briefdescription>
<para>Print Read Attributes Response value of an array attribute. </para>        </briefdescription>
        <detaileddescription>
<para>Helper function for <ref refid="group__zcl__client_1gaa21e1a258a8cc7899586920a0247ee6d" kindref="member">zcl_print_attribute_value()</ref>, takes a pointer to the &quot;value&quot; field of a Read Attributes Response for an array type, formats it and prints to stdout.</para><para><programlisting><codeline><highlight class="normal"><sp/>Example:</highlight></codeline>
<codeline><highlight class="normal">of<sp/>3<sp/>UNSIGNED_8BIT</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>[0]<sp/>=<sp/>0x54<sp/>=<sp/>84</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>[1]<sp/>=<sp/>0x42<sp/>=<sp/>66</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>[2]<sp/>=<sp/>0x43<sp/>=<sp/>67</highlight></codeline>
</programlisting></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to ZCL-encoded array value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value_length</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes at value</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>value</computeroutput> is NULL or  is too small </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>&gt;=3</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes from <computeroutput>value</computeroutput> consumed by function</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__zcl__client_1gaa21e1a258a8cc7899586920a0247ee6d" kindref="member">zcl_print_attribute_value</ref>, <ref refid="group__zcl__client_1gadd1b745da67ffd49ec948ff56ec218fa" kindref="member">zcl_print_struct_value</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zcl_client.c" line="617" column="1" bodyfile="src/zigbee/zcl_client.c" bodystart="617" bodyend="654"/>
        <references refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" compoundref="platform_8h" startline="95">EINVAL</references>
        <references refid="group__zcl_1ga1d127017fb298b889f4ba24752d08b8e" compoundref="zcl_8h" startline="416">type</references>
        <references refid="group__xbee__atcmd_1ga5bf2410fa8ec37f47f8afeba8dcc7f1b" compoundref="atcmd_8h" startline="360">value</references>
        <references refid="group__zcl__client_1gaa21e1a258a8cc7899586920a0247ee6d" compoundref="zcl__client_8c" startline="731" endline="914">zcl_print_attribute_value</references>
        <references refid="group__zcl__types_1ga798e87a8b8f240a33706b7bc37c9ede1" compoundref="zcl__types_8c" startline="316" endline="372">zcl_type_name</references>
      </memberdef>
      <memberdef kind="function" id="group__zcl__client_1gadd1b745da67ffd49ec948ff56ec218fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int zcl_print_struct_value</definition>
        <argsstring>(const void *value, int value_length)</argsstring>
        <name>zcl_print_struct_value</name>
        <param>
          <type>const void *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value_length</declname>
        </param>
        <briefdescription>
<para>Print Read Attributes Response value of a structure attribute. </para>        </briefdescription>
        <detaileddescription>
<para>Helper function for <ref refid="group__zcl__client_1gaa21e1a258a8cc7899586920a0247ee6d" kindref="member">zcl_print_attribute_value()</ref>, takes a pointer to the &quot;value&quot; field of a Read Attributes Response for a structure type, formats it and prints to stdout.</para><para><programlisting><codeline><highlight class="normal"><sp/>Example:</highlight></codeline>
<codeline><highlight class="normal">with<sp/>3<sp/>elements</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>.element0<sp/>(TIME_UTCTIME)<sp/>=<sp/>2012-01-01<sp/>00:00:00</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>.element1<sp/>(UNSIGNED_8BIT)<sp/>=<sp/>0xAA<sp/>=<sp/>170</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>.element2<sp/>(SIGNED_8BIT)<sp/>=<sp/>0xAA<sp/>=<sp/>-86</highlight></codeline>
</programlisting></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to ZCL-encoded structure value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value_length</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes at value</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>value</computeroutput> is NULL or  is too small </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>&gt;=2</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes from <computeroutput>value</computeroutput> consumed by function</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__zcl__client_1gaa21e1a258a8cc7899586920a0247ee6d" kindref="member">zcl_print_attribute_value</ref>, <ref refid="group__zcl__client_1ga4e831f4977e3c0eb5ad556a991b7da5f" kindref="member">zcl_print_array_value</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zcl_client.c" line="678" column="1" bodyfile="src/zigbee/zcl_client.c" bodystart="678" bodyend="717"/>
        <references refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" compoundref="platform_8h" startline="95">EINVAL</references>
        <references refid="group__zcl_1ga1d127017fb298b889f4ba24752d08b8e" compoundref="zcl_8h" startline="416">type</references>
        <references refid="group__xbee__atcmd_1ga5bf2410fa8ec37f47f8afeba8dcc7f1b" compoundref="atcmd_8h" startline="360">value</references>
        <references refid="group__zcl__client_1gaa21e1a258a8cc7899586920a0247ee6d" compoundref="zcl__client_8c" startline="731" endline="914">zcl_print_attribute_value</references>
        <references refid="group__zcl__types_1ga798e87a8b8f240a33706b7bc37c9ede1" compoundref="zcl__types_8c" startline="316" endline="372">zcl_type_name</references>
      </memberdef>
      <memberdef kind="function" id="group__zcl__client_1gaa21e1a258a8cc7899586920a0247ee6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int zcl_print_attribute_value</definition>
        <argsstring>(uint8_t type, const void *value, int value_length)</argsstring>
        <name>zcl_print_attribute_value</name>
        <param>
          <type><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value_length</declname>
        </param>
        <briefdescription>
<para>Formats an attribute value and prints it to stdout. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">type</parametername>
</parameternamelist>
<parameterdescription>
<para>ZCL datatype of attribute&apos;s value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the ZCL-encoded value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value_length</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes at value</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>value</computeroutput> is NULL or  is too small </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>&gt;=2</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes from <computeroutput>value</computeroutput> consumed by function</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__zcl__client_1ga4e831f4977e3c0eb5ad556a991b7da5f" kindref="member">zcl_print_array_value</ref>, <ref refid="group__zcl__client_1gadd1b745da67ffd49ec948ff56ec218fa" kindref="member">zcl_print_struct_value</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zcl_client.c" line="731" column="1" bodyfile="src/zigbee/zcl_client.c" bodystart="731" bodyend="914"/>
        <referencedby refid="group__zcl__client_1ga4e831f4977e3c0eb5ad556a991b7da5f" compoundref="zcl__client_8c" startline="617" endline="654">zcl_print_array_value</referencedby>
        <referencedby refid="group__zcl__client_1gadd1b745da67ffd49ec948ff56ec218fa" compoundref="zcl__client_8c" startline="678" endline="717">zcl_print_struct_value</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Code to support ZCL client clusters. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2010-2012<sp/>Digi<sp/>International<sp/>Inc.,</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>not<sp/>expressly<sp/>granted<sp/>are<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>Source<sp/>Code<sp/>Form<sp/>is<sp/>subject<sp/>to<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>Mozilla<sp/>Public</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>License,<sp/>v.<sp/>2.0.<sp/>If<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>MPL<sp/>was<sp/>not<sp/>distributed<sp/>with<sp/>this<sp/>file,</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>You<sp/>can<sp/>obtain<sp/>one<sp/>at<sp/>http://mozilla.org/MPL/2.0/.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>Digi<sp/>International<sp/>Inc.<sp/>11001<sp/>Bren<sp/>Road<sp/>East,<sp/>Minnetonka,<sp/>MN<sp/>55343</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>=======================================================================</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="comment">/***<sp/>BeginHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctype.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="platform_8h" kindref="compound">xbee/platform.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xbee/time.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="zdo_8h" kindref="compound">zigbee/zdo.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="zcl_8h" kindref="compound">zigbee/zcl.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="zcl__client_8h" kindref="compound">zigbee/zcl_client.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__DC__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>zcl_client_debug</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>ZCL_CLIENT_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>zcl_client_debug<sp/><sp/><sp/><sp/><sp/><sp/>__debug</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>zcl_client_debug<sp/><sp/><sp/><sp/><sp/><sp/>__nodebug</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>zcl_process_read_attr_response<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight></codeline>
<codeline lineno="59"><highlight class="normal">zcl_client_debug</highlight></codeline>
<codeline lineno="60" refid="group__zcl__client_1gae0892d22ee69940130d1111960401339" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__zcl__client_1gae0892d22ee69940130d1111960401339" kindref="member">zcl_process_read_attr_response</ref>(<sp/><ref refid="structzcl__command__t" kindref="compound">zcl_command_t</ref><sp/>*zcl,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structzcl__attribute__base__t" kindref="compound">zcl_attribute_base_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*attr_table)</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*payload_end;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><ref refid="structzcl__attribute__write__rec__t" kindref="compound">zcl_attribute_write_rec_t</ref><sp/>write_rec;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(zcl<sp/>==<sp/>NULL<sp/>||<sp/>attr_table<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ZCL_STATUS_FAILURE;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/>write_rec.<ref refid="group__zcl_1ga669940d05e1abc9807300f7d34169496" kindref="member">buffer</ref><sp/>=<sp/>zcl-&gt;<ref refid="group__zcl_1gaf0e34793a3febabcdb61c020aecbf805" kindref="member">zcl_payload</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/>payload_end<sp/>=<sp/>write_rec.<ref refid="group__zcl_1ga669940d05e1abc9807300f7d34169496" kindref="member">buffer</ref><sp/>+<sp/>zcl-&gt;<ref refid="group__zcl_1ga0ff9f63e333676ba1359f505d02dd281" kindref="member">length</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/>write_rec.<ref refid="group__zcl_1gade818037fd6c985038ff29656089758d" kindref="member">status</ref><sp/>=<sp/>ZCL_STATUS_SUCCESS;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(write_rec.<ref refid="group__zcl_1gade818037fd6c985038ff29656089758d" kindref="member">status</ref><sp/>==<sp/>ZCL_STATUS_SUCCESS</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>write_rec.<ref refid="group__zcl_1ga669940d05e1abc9807300f7d34169496" kindref="member">buffer</ref><sp/>&lt;<sp/>payload_end)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>write_rec.<ref refid="group__zcl_1gaa2585d779da0ab21273a8d92de9a0ebe" kindref="member">flags</ref><sp/>=<sp/><ref refid="group__zcl_1ga2bb65a6c04a14957000feaa12de9769c" kindref="member">ZCL_ATTR_WRITE_FLAG_ASSIGN</ref></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="group__zcl_1ga928e86b414e2662235b7bb39ffaf0635" kindref="member">ZCL_ATTR_WRITE_FLAG_READ_RESP</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>write_rec.<ref refid="group__zcl_1ga0d88b9a4d20f93d09002c72ef71cf861" kindref="member">buflen</ref><sp/>=<sp/>(<ref refid="group__hal__dos_1ga2140805d08462d474b82ddc8d1c2f3e6" kindref="member">int16_t</ref>)(payload_end<sp/>-<sp/>write_rec.<ref refid="group__zcl_1ga669940d05e1abc9807300f7d34169496" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zcl_1ga9f9ac99001185554fe24dc7b09c0b0b0" kindref="member">zcl_parse_attribute_record</ref>(<sp/>attr_table,<sp/>&amp;write_rec);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>write_rec.<ref refid="group__zcl_1gade818037fd6c985038ff29656089758d" kindref="member">status</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>zcl_client_read_attributes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight></codeline>
<codeline lineno="102"><highlight class="normal">zcl_client_debug</highlight></codeline>
<codeline lineno="103" refid="group__zcl__client_1ga24a7c15cdfe484aff260848694fccae2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__zcl__client_1ga24a7c15cdfe484aff260848694fccae2" kindref="member">zcl_client_read_attributes</ref>(<sp/><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*envelope,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structzcl__client__read__t" kindref="compound">zcl_client_read_t</ref><sp/>*client_read)</highlight></codeline>
<codeline lineno="105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><ref refid="group___s_x_a_1ga4233297bd31be5c273d4fb0758cc54d7" kindref="member">PACKED_STRUCT</ref><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zcl_1gaeac1f6671916dd0ad92b271080ec272a" kindref="member">zcl_header_response_t</ref><sp/><sp/><sp/>header;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attrib_le[20];</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/>}<sp/>zcl_req;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*request_start;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*attrib_src;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*attrib_dst_le;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/>uint_fast8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Generate<sp/>a<sp/>Read<sp/>Attributes<sp/>request<sp/>for<sp/>attributes<sp/>in<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(client_read-&gt;mfg_id<sp/>==<sp/>ZCL_MFG_NONE)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>zcl_req.header.u.std.frame_control<sp/>=<sp/><ref refid="group__zcl_1ga332a452ea08eb67a3ebf962320bf8819" kindref="member">ZCL_FRAME_TYPE_PROFILE</ref><sp/>|</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zcl_1ga09fb05e268f791031acb037c9b5df555" kindref="member">ZCL_FRAME_GENERAL</ref><sp/>|<sp/><ref refid="group__zcl_1ga245f966df7431d5b9268bbf227770173" kindref="member">ZCL_FRAME_CLIENT_TO_SERVER</ref>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>request_start<sp/>=<sp/>&amp;zcl_req.header.u.std.frame_control;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>zcl_req.header.u.mfg.mfg_code_le<sp/>=<sp/><ref refid="group__util__byteorder_1ga3ea73a6089f61223b225c46e2ba58a47" kindref="member">htole16</ref>(<sp/>client_read-&gt;mfg_id);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>zcl_req.header.u.mfg.frame_control<sp/>=<sp/><ref refid="group__zcl_1ga332a452ea08eb67a3ebf962320bf8819" kindref="member">ZCL_FRAME_TYPE_PROFILE</ref><sp/>|</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zcl_1ga48ffbdfe840975527d8e9e6d86c12dae" kindref="member">ZCL_FRAME_MFG_SPECIFIC</ref><sp/>|<sp/><ref refid="group__zcl_1ga245f966df7431d5b9268bbf227770173" kindref="member">ZCL_FRAME_CLIENT_TO_SERVER</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>request_start<sp/>=<sp/>&amp;zcl_req.header.u.mfg.frame_control;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/>zcl_req.header.sequence<sp/>=<sp/><ref refid="group__wpan__aps_1gaab1c77ccbd237270f11499fb6411599c" kindref="member">wpan_endpoint_next_trans</ref>(<sp/>client_read-&gt;ep);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/>zcl_req.header.command<sp/>=<sp/><ref refid="group__zcl_1ga7a3d858b466e4202c6f2148a1b6a3eb2" kindref="member">ZCL_CMD_READ_ATTRIB</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>attribute<sp/>list<sp/>into<sp/>request</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/>attrib_src<sp/>=<sp/>client_read-&gt;attribute_list;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/>attrib_dst_le<sp/>=<sp/>zcl_req.attrib_le;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>20;<sp/>i<sp/>&amp;&amp;<sp/>*attrib_src<sp/>!=<sp/><ref refid="group__zcl_1gab05da20cf1dfaef97e20dfca2fd26d14" kindref="member">ZCL_ATTRIBUTE_END_OF_LIST</ref>;<sp/>--i)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*attrib_dst_le<sp/>=<sp/><ref refid="group__util__byteorder_1ga3ea73a6089f61223b225c46e2ba58a47" kindref="member">htole16</ref>(<sp/>*attrib_src);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++attrib_dst_le;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++attrib_src;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/>envelope-&gt;payload<sp/>=<sp/>request_start;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/>envelope-&gt;length<sp/>=<sp/>(<ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/>*)attrib_dst_le<sp/>-<sp/>request_start;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>ZCL_CLIENT_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>sending<sp/>%d-byte<sp/>ZCL<sp/>request\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>envelope-&gt;length);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wpan__aps_1ga2a4e8b3e2022e55e6607243a5feb25cd" kindref="member">wpan_envelope_dump</ref>(<sp/>envelope);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__wpan__aps_1ga06f1e9e86b74ef807ded44b79b13e283" kindref="member">wpan_envelope_send</ref>(<sp/>envelope);</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>zcl_find_and_read_attributes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight></codeline>
<codeline lineno="181"><highlight class="normal">zcl_client_debug</highlight></codeline>
<codeline lineno="182" refid="group__zcl__client_1ga15f191f3166c71f3f436b2a32d108a9f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__zcl__client_1ga15f191f3166c71f3f436b2a32d108a9f" kindref="member">_zcl_send_read_from_zdo_match</ref>(<sp/><ref refid="structwpan__conversation__t" kindref="compound">wpan_conversation_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*conversation,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*envelope)</highlight></codeline>
<codeline lineno="184"><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___s_x_a_1ga4233297bd31be5c273d4fb0758cc54d7" kindref="member">PACKED_STRUCT</ref><sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transaction_id;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zdo_1ga92bab7ada78e3865e606ce81bb610935" kindref="member">zdo_match_desc_rsp_header_t</ref><sp/><sp/><sp/>header;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zdo_1ga7d397493728da2bca8d55b2d61c4ec5d" kindref="member">endpoint</ref>;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*zdo_rsp;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><ref refid="structzcl__client__read__t" kindref="compound">zcl_client_read_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>client_read;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reply_envelope;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>sending<sp/>ZCL<sp/>request</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwpan__cluster__table__entry__t" kindref="compound">wpan_cluster_table_entry_t</ref><sp/>*cluster;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>note<sp/>that<sp/>conversation<sp/>is<sp/>never<sp/>NULL<sp/>in<sp/>wpan_response_fn<sp/>callbacks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(envelope<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>conversation<sp/>timed<sp/>out,<sp/>that&apos;s<sp/>OK.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>WPAN_CONVERSATION_END;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/>zdo_rsp<sp/>=<sp/>envelope-&gt;payload;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/>client_read<sp/>=<sp/>*(<ref refid="structzcl__client__read__t" kindref="compound">zcl_client_read_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)conversation-&gt;context;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/>#ifdef<sp/>ZCL_CLIENT_VERBOSE</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>generating<sp/>ZCL<sp/>request<sp/>from<sp/>ZDO<sp/>response\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__util_1gaa321236a0cb6f4e0dad592fdf1b550d2" kindref="member">hex_dump</ref>(<sp/>envelope-&gt;payload,<sp/>envelope-&gt;length,<sp/><ref refid="group__hal_1ga696f6553e33cbd20eda34e220ec9939a" kindref="member">HEX_DUMP_FLAG_TAB</ref>);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>this<sp/>is<sp/>a<sp/>Match<sp/>Descriptor<sp/>Response.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(envelope-&gt;cluster_id<sp/>!=<sp/><ref refid="group__zdo_1ga693e5c00189b7ea1e748d35fce6c8501" kindref="member">ZDO_MATCH_DESC_RSP</ref>)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZCL_CLIENT_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>ignoring<sp/>response<sp/>(cluster=0x%04x,<sp/>not<sp/>MatchDescRsp)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__,<sp/>envelope-&gt;cluster_id);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>WPAN_CONVERSATION_CONTINUE;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>respond<sp/>to<sp/>successful<sp/>responses<sp/>with<sp/>a<sp/>length<sp/>&gt;<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(zdo_rsp-&gt;header.status<sp/>!=<sp/>ZDO_STATUS_SUCCESS</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>zdo_rsp-&gt;header.match_length<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZCL_CLIENT_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>ignoring<sp/>response<sp/>(status=0x%02x,<sp/>length=%u)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__,<sp/>zdo_rsp-&gt;header.status,</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zdo_rsp-&gt;header.match_length);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>WPAN_CONVERSATION_CONTINUE;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reply<sp/>on<sp/>the<sp/>same<sp/>device<sp/>that<sp/>received<sp/>the<sp/>response.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="group__wpan__aps_1gaaaee02ff456d4f6103a5e94c2ba106c5" kindref="member">wpan_envelope_reply</ref>(<sp/>&amp;reply_envelope,<sp/>envelope);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZCL_CLIENT_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>%s<sp/>returned<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/></highlight><highlight class="stringliteral">&quot;wpan_envelope_reply&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>WPAN_CONVERSATION_CONTINUE;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>assert<sp/>that<sp/>network_address<sp/>==<sp/>zdo_rsp-&gt;header.network_addr_le?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reply_envelope.<ref refid="group__wpan__aps_1ga30948a7f8d096191895f50b80d81ca12" kindref="member">network_address</ref><sp/>!=</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__util__byteorder_1ga684a5d26d1989cbd925e97292cc81c72" kindref="member">le16toh</ref>(<sp/>zdo_rsp-&gt;header.network_addr_le))</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZCL_CLIENT_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>ERROR<sp/>net<sp/>addr<sp/>mismatch<sp/>(env=0x%04x,<sp/>zdo=0x%04x)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__,<sp/>reply_envelope.<ref refid="group__wpan__aps_1ga30948a7f8d096191895f50b80d81ca12" kindref="member">network_address</ref>,</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__util__byteorder_1ga684a5d26d1989cbd925e97292cc81c72" kindref="member">le16toh</ref>(<sp/>zdo_rsp-&gt;header.network_addr_le));</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>WPAN_CONVERSATION_CONTINUE;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DEVNOTE:<sp/>exit<sp/>here,<sp/>or<sp/>send<sp/>request<sp/>anyway?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>change<sp/>source<sp/>endpoint<sp/>from<sp/>ZDO<sp/>(0)<sp/>to<sp/>selected<sp/>ZCL<sp/>client</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/>reply_envelope.<ref refid="group__wpan__aps_1ga9781a5a281ee97f7f67d8ebe2c4f54db" kindref="member">source_endpoint</ref><sp/>=<sp/>client_read.ep-&gt;<ref refid="group__wpan__aps_1ga7d397493728da2bca8d55b2d61c4ec5d" kindref="member">endpoint</ref>;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/>reply_envelope.<ref refid="group__wpan__aps_1ga5ca7f19e5697de2baf0e2147a41a5792" kindref="member">profile_id</ref><sp/>=<sp/>client_read.ep-&gt;<ref refid="group__wpan__aps_1ga5ca7f19e5697de2baf0e2147a41a5792" kindref="member">profile_id</ref>;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/>reply_envelope.<ref refid="group__wpan__aps_1ga262a92f94287e77cb56350951893bae2" kindref="member">cluster_id</ref><sp/>=<sp/>client_read.cluster_id;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>change<sp/>dest<sp/>endpoint<sp/>to<sp/>the<sp/>one<sp/>specified<sp/>in<sp/>the<sp/>ZDO<sp/>response</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/>reply_envelope.<ref refid="group__wpan__aps_1ga0992896b3999455a300e8ba25c368ae8" kindref="member">dest_endpoint</ref><sp/>=<sp/>zdo_rsp-&gt;endpoint;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>look<sp/>up<sp/>the<sp/>cluster<sp/>on<sp/>the<sp/>endpoint<sp/>to<sp/>set<sp/>envelope<sp/>options<sp/>(like</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>encryption<sp/>flag)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/>cluster<sp/>=<sp/><ref refid="group__wpan__aps_1ga1c725384b21faf5953683d7b028c7be3" kindref="member">wpan_cluster_match</ref>(<sp/>client_read.cluster_id,</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wpan__aps_1ga9aae0646b212af63cbb07c98a33cd986" kindref="member">WPAN_CLUST_FLAG_CLIENT</ref>,<sp/>client_read.ep-&gt;<ref refid="group__wpan__aps_1gac7944498524739a9becec626bf9bcb15" kindref="member">cluster_table</ref>);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cluster)</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reply_envelope.options<sp/>=<sp/>cluster-&gt;<ref refid="group__wpan__aps_1gaa2585d779da0ab21273a8d92de9a0ebe" kindref="member">flags</ref>;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__zcl__client_1ga24a7c15cdfe484aff260848694fccae2" kindref="member">zcl_client_read_attributes</ref>(<sp/>&amp;reply_envelope,<sp/>&amp;client_read);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>WPAN_CONVERSATION_CONTINUE;</highlight></codeline>
<codeline lineno="278"><highlight class="normal">}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal">zcl_client_debug</highlight></codeline>
<codeline lineno="300" refid="group__zcl__client_1gae673efbd325cea1f3befacda58332191" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__zcl__client_1gae673efbd325cea1f3befacda58332191" kindref="member">zcl_find_and_read_attributes</ref>(<sp/><ref refid="structwpan__dev__t" kindref="compound">wpan_dev_t</ref><sp/>*dev,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/>*clusters,</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structzcl__client__read__t" kindref="compound">zcl_client_read_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*cr)</highlight></codeline>
<codeline lineno="302"><highlight class="normal">{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__zcl__client_1ga4c75937cc0fa5c70c63f30b59a4ddebc" kindref="member">zdo_send_match_desc</ref>(<sp/>dev,<sp/>clusters,<sp/>cr-&gt;ep-&gt;profile_id,</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zcl__client_1ga15f191f3166c71f3f436b2a32d108a9f" kindref="member">_zcl_send_read_from_zdo_match</ref>,<sp/>cr);</highlight></codeline>
<codeline lineno="305"><highlight class="normal">}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>zdo_send_match_desc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal">zcl_client_debug</highlight></codeline>
<codeline lineno="334" refid="group__zcl__client_1ga4c75937cc0fa5c70c63f30b59a4ddebc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__zcl__client_1ga4c75937cc0fa5c70c63f30b59a4ddebc" kindref="member">zdo_send_match_desc</ref>(<sp/><ref refid="structwpan__dev__t" kindref="compound">wpan_dev_t</ref><sp/>*dev,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/>*clusters,</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/>profile_id,<sp/><ref refid="group__wpan__aps_1gabf0a6b85c9ff3ff9104c8b58c1436d72" kindref="member">wpan_response_fn</ref><sp/>callback,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*context)</highlight></codeline>
<codeline lineno="336"><highlight class="normal">{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref><sp/><sp/><sp/>envelope<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[50];</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame_length;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trans;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dev<sp/>==<sp/>NULL<sp/>||<sp/>clusters<sp/>==<sp/>NULL<sp/>||<sp/>callback<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>build<sp/>the<sp/>envelope<sp/>--<sp/>use<sp/>broadcast<sp/>to<sp/>find<sp/>all<sp/>matching<sp/>devices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/>envelope.<ref refid="group__wpan__aps_1ga7f9a38312b9025348d42a4ed0042ce37" kindref="member">dev</ref><sp/>=<sp/>dev;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/>envelope.<ref refid="group__wpan__aps_1ga2549f921e25a72dfa05a2154a792e2bf" kindref="member">ieee_address</ref><sp/>=<sp/><ref refid="group__wpan__types_1ga83c0da7da25848a435da46b80fb70933" kindref="member">_WPAN_IEEE_ADDR_BROADCAST</ref>;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/>envelope.<ref refid="group__wpan__aps_1ga30948a7f8d096191895f50b80d81ca12" kindref="member">network_address</ref><sp/>=<sp/><ref refid="group__wpan__types_1ga1674d7b825e528a482725d1c06b02c10" kindref="member">WPAN_NET_ADDR_UNDEFINED</ref>;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sending<sp/>a<sp/>ZDO<sp/>Match<sp/>Descriptor<sp/>request</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/>envelope.<ref refid="group__wpan__aps_1ga262a92f94287e77cb56350951893bae2" kindref="member">cluster_id</ref><sp/>=<sp/><ref refid="group__zdo_1ga8c614773175b0518e3a1f5a512dfe4d1" kindref="member">ZDO_MATCH_DESC_REQ</ref>;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>build<sp/>the<sp/>request<sp/>(return<sp/>error<sp/>if<sp/>not<sp/>enough<sp/>space)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/>frame_length<sp/>=<sp/><ref refid="group__zdo_1ga5746efffb4b90718eb973796f2b4bb41" kindref="member">zdo_match_desc_request</ref>(<sp/>buffer,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buffer),</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wpan__types_1ga08ec03f67d0d74ba6f98da543baee129" kindref="member">WPAN_NET_ADDR_BCAST_NOT_ASLEEP</ref>,<sp/>profile_id,<sp/>clusters,<sp/>NULL);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(frame_length<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZCL_CLIENT_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>error<sp/>%d<sp/>calling<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__,<sp/>frame_length,<sp/></highlight><highlight class="stringliteral">&quot;zdo_match_desc_request&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>frame_length;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>register<sp/>the<sp/>conversation<sp/>to<sp/>get<sp/>a<sp/>transaction<sp/>id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/>trans<sp/>=<sp/><ref refid="group__wpan__aps_1gae5f88ed40bd334d963e261947b77b980" kindref="member">wpan_conversation_register</ref>(<sp/><ref refid="group__zdo_1gaaf992619b06595291c2aead8a3d4dba1" kindref="member">zdo_endpoint_state</ref>(<sp/>dev),<sp/>callback,</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>context,<sp/>60);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(trans<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZCL_CLIENT_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>error<sp/>%d<sp/>calling<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__,<sp/>trans,<sp/></highlight><highlight class="stringliteral">&quot;wpan_conversation_register&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>trans;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>the<sp/>transaction<sp/>ID<sp/>into<sp/>the<sp/>request<sp/>and<sp/>send<sp/>it.<sp/><sp/>Should<sp/>I<sp/>add<sp/>these</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>three<sp/>parameters<sp/>to<sp/>the<sp/>conversation_register<sp/>function?<sp/><sp/>Lots<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>parameters<sp/>to<sp/>pass<sp/>around!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/>*buffer<sp/>=<sp/>(<ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref>)trans;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/>envelope.<ref refid="group__wpan__aps_1ga8737375e27cb391ff381fff10dc0c132" kindref="member">payload</ref><sp/>=<sp/>buffer;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/>envelope.<ref refid="group__wpan__aps_1ga1892eba2086d12ac2b09005aeb09ea3b" kindref="member">length</ref><sp/>=<sp/>frame_length;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>ZCL_CLIENT_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>sending<sp/>%u-byte<sp/>ZDO<sp/>Match<sp/>Desc<sp/>request\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame_length);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wpan__aps_1ga2a4e8b3e2022e55e6607243a5feb25cd" kindref="member">wpan_envelope_dump</ref>(<sp/>&amp;envelope);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/>retval<sp/>=<sp/><ref refid="group__wpan__aps_1ga06f1e9e86b74ef807ded44b79b13e283" kindref="member">wpan_envelope_send</ref>(<sp/>&amp;envelope);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>ZCL_CLIENT_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retval)</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>error<sp/>%d<sp/>calling<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__,<sp/>retval,<sp/></highlight><highlight class="stringliteral">&quot;wpan_envelope_send&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="402"><highlight class="normal">}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>zcl_create_attribute_records<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight></codeline>
<codeline lineno="422"><highlight class="preprocessor">#ifdef<sp/>__XBEE_PLATFORM_HCS08</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#pragma<sp/>MESSAGE<sp/>DISABLE<sp/>C5909<sp/><sp/><sp/><sp/>//<sp/>Assignment<sp/>in<sp/>condition<sp/>is<sp/>OK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal">zcl_client_debug</highlight></codeline>
<codeline lineno="426" refid="group__zcl__client_1ga11f72950e4467286ef18468fbcb4bed4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__zcl__client_1ga11f72950e4467286ef18468fbcb4bed4" kindref="member">zcl_create_attribute_records</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*buffer,</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/>bufsize,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structzcl__attribute__base__t" kindref="compound">zcl_attribute_base_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>**p_attr_list)</highlight></codeline>
<codeline lineno="428"><highlight class="normal">{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__zcl_1ga2373217b6694c1cb1a99113c24519a73" kindref="member">zcl_attrib_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*encoded;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*buffer_insert;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structzcl__attribute__base__t" kindref="compound">zcl_attribute_base_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*attr;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_attr_list<sp/>==<sp/>NULL<sp/>||<sp/>buffer<sp/>==<sp/>NULL<sp/>||</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(attr<sp/>=<sp/>*p_attr_list)<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>can&apos;t<sp/>encode<sp/>any<sp/>attributes;<sp/>0<sp/>bytes<sp/>written<sp/>to<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/>buffer_insert<sp/>=<sp/>buffer;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(attr-&gt;id<sp/>!=<sp/><ref refid="group__zcl_1gab05da20cf1dfaef97e20dfca2fd26d14" kindref="member">ZCL_ATTRIBUTE_END_OF_LIST</ref><sp/>&amp;&amp;<sp/>bufsize<sp/>&gt;=<sp/>3)</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>encoded<sp/>=<sp/>(<ref refid="group__zcl_1ga2373217b6694c1cb1a99113c24519a73" kindref="member">zcl_attrib_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)<sp/>buffer_insert;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>encoded-&gt;id_le<sp/>=<sp/><ref refid="group__util__byteorder_1ga3ea73a6089f61223b225c46e2ba58a47" kindref="member">htole16</ref>(<sp/>attr-&gt;id);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>encoded-&gt;type<sp/>=<sp/>attr-&gt;type;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="group__zcl_1gae3f7f58d3b08caf95aa11f90e3995397" kindref="member">zcl_encode_attribute_value</ref>(<sp/>encoded-&gt;value,<sp/>bufsize<sp/>-<sp/>3,<sp/>attr);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>&lt;<sp/>0)<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>enough<sp/>room<sp/>to<sp/>encode<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/>3;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>account<sp/>for<sp/>3<sp/>bytes<sp/>used<sp/>by<sp/>ID<sp/>and<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bufsize<sp/>-=<sp/>result;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffer_insert<sp/>+=<sp/>result;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>attr<sp/>=<sp/><ref refid="group__zcl_1ga66d9c3c646422e71fed6c94d67c14fdd" kindref="member">zcl_attribute_get_next</ref>(<sp/>attr);<sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>next<sp/>attribute<sp/>to<sp/>encode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>*p_attr_list<sp/>to<sp/>point<sp/>to<sp/>the<sp/>next<sp/>attribute<sp/>to<sp/>encode,<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>end<sp/>of<sp/>the<sp/>attribute<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/>*p_attr_list<sp/>=<sp/>attr;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>(buffer_insert<sp/>-<sp/>(<ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)buffer);</highlight></codeline>
<codeline lineno="465"><highlight class="normal">}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__XBEE_PLATFORM_HCS08</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#pragma<sp/>MESSAGE<sp/>DEFAULT<sp/>C5909<sp/><sp/><sp/><sp/>//<sp/>restore<sp/>C5909<sp/>(Assignment<sp/>in<sp/>condition)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>zcl_send_write_attributes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight></codeline>
<codeline lineno="492"><highlight class="comment">//<sp/>Consider<sp/>adding<sp/>mfg_id<sp/>and<sp/>flags<sp/>field<sp/>for<sp/>direction<sp/>and<sp/>undivided?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Should<sp/>this<sp/>function<sp/>send<sp/>a<sp/>single<sp/>request,<sp/>and<sp/>somehow<sp/>return<sp/>the<sp/>next</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight><highlight class="comment">//<sp/>attribute<sp/>to<sp/>write<sp/>(as<sp/>zcl_create_attribute_records<sp/>does)?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal">zcl_client_debug</highlight></codeline>
<codeline lineno="496" refid="group__zcl__client_1ga98550adc25d4a19e4048ef9b251321ef" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__zcl__client_1ga98550adc25d4a19e4048ef9b251321ef" kindref="member">zcl_send_write_attributes</ref>(<sp/><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref><sp/>*envelope,</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structzcl__attribute__base__t" kindref="compound">zcl_attribute_base_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*attr_list)</highlight></codeline>
<codeline lineno="498"><highlight class="normal">{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwpan__endpoint__table__entry__t" kindref="compound">wpan_endpoint_table_entry_t</ref><sp/>*source_endpoint;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><ref refid="group___s_x_a_1ga4233297bd31be5c273d4fb0758cc54d7" kindref="member">PACKED_STRUCT</ref><sp/>request<sp/>{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zcl_1gae988eb59c8a2e75b6cb34aefeca315d1" kindref="member">zcl_header_nomfg_t</ref><sp/><sp/><sp/>header;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__xbee__wpan_1gae6f5e79770e3e599bf8154eac1a2f3fe" kindref="member">payload</ref>[80];</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/>}<sp/>request;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bytecount;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>retval<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wpan_endpoint_of_envelope<sp/>returns<sp/>NULL<sp/>for<sp/>a<sp/>NULL<sp/>envelope</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/>source_endpoint<sp/>=<sp/><ref refid="group__wpan__aps_1gab448ec18a47178272336da5eacfa2290" kindref="member">wpan_endpoint_of_envelope</ref>(<sp/>envelope);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(source_endpoint<sp/>==<sp/>NULL<sp/>||<sp/>attr_list<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/>envelope-&gt;<ref refid="group__wpan__aps_1ga8737375e27cb391ff381fff10dc0c132" kindref="member">payload</ref><sp/>=<sp/>&amp;request;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/>request.header.frame_control<sp/>=<sp/><ref refid="group__zcl_1ga245f966df7431d5b9268bbf227770173" kindref="member">ZCL_FRAME_CLIENT_TO_SERVER</ref></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="group__zcl_1ga332a452ea08eb67a3ebf962320bf8819" kindref="member">ZCL_FRAME_TYPE_PROFILE</ref></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="group__zcl_1ga09fb05e268f791031acb037c9b5df555" kindref="member">ZCL_FRAME_GENERAL</ref></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="group__zcl_1ga080b9f73f48767fc6af9b5da27d30d70" kindref="member">ZCL_FRAME_DISABLE_DEF_RESP</ref>;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/>request.header.command<sp/>=<sp/><ref refid="group__zcl_1ga8843c2bcb861c091ae6f9a4e36f7e4d8" kindref="member">ZCL_CMD_WRITE_ATTRIB</ref>;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>may<sp/>take<sp/>multiple<sp/>packets<sp/>to<sp/>encode<sp/>the<sp/>write<sp/>attributes<sp/>records</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(attr_list-&gt;id<sp/>!=<sp/><ref refid="group__zcl_1gab05da20cf1dfaef97e20dfca2fd26d14" kindref="member">ZCL_ATTRIBUTE_END_OF_LIST</ref><sp/>&amp;&amp;<sp/>retval<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bytecount<sp/>=<sp/><ref refid="group__zcl__client_1ga11f72950e4467286ef18468fbcb4bed4" kindref="member">zcl_create_attribute_records</ref>(<sp/>&amp;request.payload,</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(request.payload),<sp/>&amp;attr_list);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytecount<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>some<sp/>sort<sp/>of<sp/>error,<sp/>or<sp/>attribute<sp/>is<sp/>too<sp/>big<sp/>to<sp/>fit<sp/>in<sp/>request</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/>bytecount;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>request.header.sequence<sp/>=<sp/><ref refid="group__wpan__aps_1gaab1c77ccbd237270f11499fb6411599c" kindref="member">wpan_endpoint_next_trans</ref>(<sp/>source_endpoint);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>envelope-&gt;<ref refid="group__wpan__aps_1ga1892eba2086d12ac2b09005aeb09ea3b" kindref="member">length</ref><sp/>=<sp/>offsetof(<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>request,<sp/><ref refid="group__xbee__wpan_1gae6f5e79770e3e599bf8154eac1a2f3fe" kindref="member">payload</ref>)<sp/>+<sp/>bytecount;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZCL_CLIENT_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>sending<sp/>Write<sp/>Attributes<sp/>Request\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wpan__aps_1ga2a4e8b3e2022e55e6607243a5feb25cd" kindref="member">wpan_envelope_dump</ref>(<sp/>envelope);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/><ref refid="group__wpan__aps_1ga06f1e9e86b74ef807ded44b79b13e283" kindref="member">wpan_envelope_send</ref>(<sp/>envelope);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/>envelope-&gt;<ref refid="group__wpan__aps_1ga8737375e27cb391ff381fff10dc0c132" kindref="member">payload</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/>envelope-&gt;<ref refid="group__wpan__aps_1ga1892eba2086d12ac2b09005aeb09ea3b" kindref="member">length</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="547"><highlight class="normal">}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>zcl_format_utctime<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight></codeline>
<codeline lineno="555" refid="group__zcl__client_1gab6b575402b7ce107943e7d7c29499559" refkind="member"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="group__zcl__client_1gab6b575402b7ce107943e7d7c29499559" kindref="member">_zcl_format_utctime</ref>(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>dest[40],<sp/>zcl_utctime_t<sp/>utctime)</highlight></codeline>
<codeline lineno="556"><highlight class="normal">{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">tm<sp/>tm;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dest<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(utctime<sp/>==<sp/>ZCL_UTCTIME_INVALID)</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(<sp/>dest,<sp/></highlight><highlight class="stringliteral">&quot;[Invalid<sp/>Timestamp]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xbee_gmtime(<sp/>&amp;tm,<sp/>utctime);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(<sp/>dest,<sp/></highlight><highlight class="stringliteral">&quot;%04u-%02u-%02u<sp/>%02u:%02u:%02u<sp/>UTC&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tm.tm_year<sp/>+<sp/>1900,<sp/>tm.tm_mon<sp/>+<sp/>1,<sp/>tm.tm_mday,</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tm.tm_hour,<sp/>tm.tm_min,<sp/>tm.tm_sec);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dest;</highlight></codeline>
<codeline lineno="575"><highlight class="normal">}</highlight></codeline>
<codeline lineno="590" refid="group__zcl__client_1gaece15f78359a3bae016be1d24e7d9ad9" refkind="member"><highlight class="normal">zcl_format_utctime_fn<sp/><ref refid="group__zcl__client_1gaece15f78359a3bae016be1d24e7d9ad9" kindref="member">zcl_format_utctime</ref><sp/>=<sp/><ref refid="group__zcl__client_1gab6b575402b7ce107943e7d7c29499559" kindref="member">_zcl_format_utctime</ref>;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>zcl_print_array_value,<sp/>zcl_print_struct_value,</highlight></codeline>
<codeline lineno="593"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zcl_print_attribute_value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight></codeline>
<codeline lineno="617" refid="group__zcl__client_1ga4e831f4977e3c0eb5ad556a991b7da5f" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__zcl__client_1ga4e831f4977e3c0eb5ad556a991b7da5f" kindref="member">zcl_print_array_value</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="group__xbee__atcmd_1ga5bf2410fa8ec37f47f8afeba8dcc7f1b" kindref="member">value</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value_length)</highlight></codeline>
<codeline lineno="618"><highlight class="normal">{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>result,<sp/>offset;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/>*b<sp/>=<sp/><ref refid="group__xbee__atcmd_1ga5bf2410fa8ec37f47f8afeba8dcc7f1b" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/>count;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><ref refid="group__zcl_1ga1d127017fb298b889f4ba24752d08b8e" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>needs<sp/>to<sp/>be<sp/>at<sp/>least<sp/>3<sp/>bytes,<sp/>type<sp/>and<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>==<sp/>NULL<sp/>||<sp/>value_length<sp/>&lt;<sp/>3)</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/>type<sp/>=<sp/>b[0];</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/>count<sp/>=<sp/>b[1]<sp/>+<sp/>((<ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref>)b[2]<sp/>&lt;&lt;<sp/>8);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count<sp/>==<sp/>0xFFFF<sp/>&amp;&amp;<sp/>value_length<sp/>&gt;=<sp/>3)</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;undefined<sp/>of<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__zcl__types_1ga798e87a8b8f240a33706b7bc37c9ede1" kindref="member">zcl_type_name</ref>(<sp/>type));</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>3;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;of<sp/>%u<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>count,<sp/><ref refid="group__zcl__types_1ga798e87a8b8f240a33706b7bc37c9ede1" kindref="member">zcl_type_name</ref>(<sp/>type));</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0,<sp/>offset<sp/>=<sp/>3;<sp/>i<sp/>&lt;<sp/>count<sp/>&amp;&amp;<sp/>offset<sp/>&lt;<sp/>value_length;<sp/>++i)</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;\t[%2u]<sp/>=<sp/>&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="group__zcl__client_1gaa21e1a258a8cc7899586920a0247ee6d" kindref="member">zcl_print_attribute_value</ref>(<sp/>type,<sp/>&amp;b[offset],</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_length<sp/>-<sp/>offset);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;[error<sp/>%d<sp/>printing<sp/>value]\n&quot;</highlight><highlight class="normal">,<sp/>result);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/>result;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>offset;</highlight></codeline>
<codeline lineno="654"><highlight class="normal">}</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="678" refid="group__zcl__client_1gadd1b745da67ffd49ec948ff56ec218fa" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__zcl__client_1gadd1b745da67ffd49ec948ff56ec218fa" kindref="member">zcl_print_struct_value</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="group__xbee__atcmd_1ga5bf2410fa8ec37f47f8afeba8dcc7f1b" kindref="member">value</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value_length)</highlight></codeline>
<codeline lineno="679"><highlight class="normal">{</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>result,<sp/>offset;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/>*b<sp/>=<sp/><ref refid="group__xbee__atcmd_1ga5bf2410fa8ec37f47f8afeba8dcc7f1b" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/>count;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><ref refid="group__zcl_1ga1d127017fb298b889f4ba24752d08b8e" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>needs<sp/>to<sp/>be<sp/>at<sp/>least<sp/>2<sp/>bytes,<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>==<sp/>NULL<sp/>||<sp/>value_length<sp/>&lt;<sp/>2)</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>to<sp/>display<sp/>the<sp/>elements.<sp/><sp/>If<sp/>we<sp/>can&apos;t,<sp/>then<sp/>fall<sp/>back<sp/>on<sp/>existing<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>will<sp/>perform<sp/>a<sp/>hex<sp/>dump.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/>count<sp/>=<sp/>b[0]<sp/>+<sp/>((<ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref>)b[1]<sp/>&lt;&lt;<sp/>8);</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count<sp/>==<sp/>0xFFFF)</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>puts(<sp/></highlight><highlight class="stringliteral">&quot;undefined&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;with<sp/>%u<sp/>elements\n&quot;</highlight><highlight class="normal">,<sp/>count);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0,<sp/>offset<sp/>=<sp/>2;<sp/>i<sp/>&lt;<sp/>count<sp/>&amp;&amp;<sp/>offset<sp/>&lt;<sp/>value_length;<sp/>++i)</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>=<sp/>b[offset++];</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;\t.element%u<sp/>(%s)<sp/>=<sp/>&quot;</highlight><highlight class="normal">,<sp/>i,<sp/><ref refid="group__zcl__types_1ga798e87a8b8f240a33706b7bc37c9ede1" kindref="member">zcl_type_name</ref>(<sp/>type));</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="group__zcl__client_1gaa21e1a258a8cc7899586920a0247ee6d" kindref="member">zcl_print_attribute_value</ref>(<sp/>type,<sp/>&amp;b[offset],</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_length<sp/>-<sp/>offset);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;[error<sp/>%d<sp/>printing<sp/>value]\n&quot;</highlight><highlight class="normal">,<sp/>result);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/>result;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>offset;</highlight></codeline>
<codeline lineno="717"><highlight class="normal">}</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="731" refid="group__zcl__client_1gaa21e1a258a8cc7899586920a0247ee6d" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__zcl__client_1gaa21e1a258a8cc7899586920a0247ee6d" kindref="member">zcl_print_attribute_value</ref>(<sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><ref refid="group__zcl_1ga1d127017fb298b889f4ba24752d08b8e" kindref="member">type</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="group__xbee__atcmd_1ga5bf2410fa8ec37f47f8afeba8dcc7f1b" kindref="member">value</ref>,</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value_length)</highlight></codeline>
<codeline lineno="733"><highlight class="normal">{</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1ga04dd5074964518403bf944f2b240a5f8" kindref="member">bool_t</ref><sp/>hexdump<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/>*b<sp/>=<sp/><ref refid="group__xbee__atcmd_1ga5bf2410fa8ec37f47f8afeba8dcc7f1b" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1ga09a1e304d66d35dd47daffee9731edaa" kindref="member">uint32_t</ref><sp/>temp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><ref refid="unionaddr64" kindref="compound">addr64</ref><sp/>addr_be;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>typesize,<sp/>datasize;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[80];</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/><ref refid="group__zcl__types_1ga5f609d45e4eb91ae4187bf912e4f870b" kindref="member">ZCL_TYPE_ARRAY</ref><sp/>||<sp/>type<sp/>==<sp/><ref refid="group__zcl__types_1ga21ab004d25434d25e1e17865e895f1a7" kindref="member">ZCL_TYPE_SET</ref><sp/>||<sp/>type<sp/>==<sp/><ref refid="group__zcl__types_1gacd6bd1e469abc59bab04e247bc85997b" kindref="member">ZCL_TYPE_BAG</ref>)</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>datasize<sp/>=<sp/><ref refid="group__zcl__client_1ga4e831f4977e3c0eb5ad556a991b7da5f" kindref="member">zcl_print_array_value</ref>(<sp/>value,<sp/>value_length);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/><ref refid="group__zcl__types_1ga2d94a79998fd3cdd13a2cd9ed25b88cb" kindref="member">ZCL_TYPE_STRUCT</ref>)</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>datasize<sp/>=<sp/><ref refid="group__zcl__client_1gadd1b745da67ffd49ec948ff56ec218fa" kindref="member">zcl_print_struct_value</ref>(<sp/>value,<sp/>value_length);</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>datasize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(datasize<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>zcl_print_{array|struct}_value<sp/>successfully<sp/>parsed<sp/>&lt;datasize&gt;<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>from<sp/>value,<sp/>so<sp/>return<sp/>that<sp/>count.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>datasize;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(datasize<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hexdump<sp/>=<sp/>TRUE;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>problem<sp/>parsing<sp/>structured<sp/>type;<sp/>dump<sp/>it<sp/>raw</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/>datasize<sp/>=<sp/>value_length;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>default<sp/>to<sp/>consuming<sp/>entire<sp/>value_length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/>typesize<sp/>=<sp/><ref refid="group__zcl__types_1ga6134ab27d38abd300d008345e21fe560" kindref="member">zcl_sizeof_type</ref>(<sp/>type);</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(typesize)</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_SIZE_SHORT:</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1-octet<sp/>size<sp/>prefix,<sp/>length<sp/>is<sp/>that<sp/>size<sp/>+1<sp/>for<sp/>the<sp/>size<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>datasize<sp/>=<sp/>b[0]<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_SIZE_LONG:</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2-octet<sp/>size<sp/>prefix,<sp/>length<sp/>is<sp/>that<sp/>size<sp/>+2<sp/>for<sp/>the<sp/>size<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>datasize<sp/>=<sp/>b[1]<sp/>*<sp/>256<sp/>+<sp/>b[0]<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>6:</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>7:</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>8:</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>16:</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>datasize<sp/>=<sp/>typesize;</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_SIZE_INVALID:</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hexdump<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value_length<sp/>&lt;<sp/>datasize)<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>type<sp/>calls<sp/>for<sp/>more<sp/>data<sp/>than<sp/>present</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hexdump<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>datasize<sp/>=<sp/>value_length;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/><ref refid="group__zcl__types_1ga64286e0c69e0ed344a6eb8756ac81f95" kindref="member">ZCL_TYPE_STRING_CHAR</ref>)</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>datasize<sp/>&amp;&amp;<sp/>isprint(<sp/>b[i]);<sp/>++i);</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>datasize)</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(datasize<sp/>&gt;<sp/>32)</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>printing<sp/>string<sp/>length,<sp/>subtract<sp/>length<sp/>byte<sp/>from<sp/>datasize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%u-byte<sp/>string\n\t&quot;</highlight><highlight class="normal">,<sp/>datasize<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;\&quot;%.*s\&quot;\n&quot;</highlight><highlight class="normal">,<sp/>datasize<sp/>-<sp/>1,<sp/>&amp;b[1]);</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>datasize;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>chars<sp/>in<sp/>string<sp/>plus<sp/>length<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>hexdump)<sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(type)</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_TYPE_NO_DATA:</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__zcl__types_1ga856105c2b5037b8406a294b668dfe755" kindref="member">ZCL_TYPE_UNKNOWN</ref>:</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>puts(<sp/></highlight><highlight class="stringliteral">&quot;n/a&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_TYPE_LOGICAL_BOOLEAN:</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*b<sp/>==<sp/>ZCL_BOOL_FALSE)</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>puts(<sp/></highlight><highlight class="stringliteral">&quot;FALSE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*b<sp/>==<sp/>ZCL_BOOL_TRUE)</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>puts(<sp/></highlight><highlight class="stringliteral">&quot;TRUE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>(0x%02X)\n&quot;</highlight><highlight class="normal">,<sp/>*b);</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__zcl__types_1ga13bc9499fe6127a5ce30c31f3ccae2df" kindref="member">ZCL_TYPE_IEEE_ADDR</ref>:</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__util__byteorder_1gac8afbbc0aa0b7d35ebf38f54dbfbe6c2" kindref="member">memcpy_letobe</ref>(<sp/>&amp;addr_be,<sp/>value,<sp/>8);</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__wpan__types_1ga448782f4aed0821758969b47221417ed" kindref="member">addr64_format</ref>(<sp/>buffer,<sp/>&amp;addr_be));</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__zcl__types_1ga8f678e97557cb052c0df4be97e9f1e82" kindref="member">ZCL_TYPE_TIME_UTCTIME</ref>:</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_TYPE_GENERAL_32BIT:</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_TYPE_BITMAP_32BIT:</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_TYPE_UNSIGNED_32BIT:</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_TYPE_SIGNED_32BIT:</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>+=<sp/>(<ref refid="group__hal__dos_1ga09a1e304d66d35dd47daffee9731edaa" kindref="member">uint32_t</ref>)b[3]<sp/>&lt;&lt;<sp/>24;</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fall<sp/>through<sp/>to<sp/>lower<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_TYPE_GENERAL_24BIT:</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_TYPE_BITMAP_24BIT:</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_TYPE_UNSIGNED_24BIT:</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_TYPE_SIGNED_24BIT:</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>+=<sp/>(<ref refid="group__hal__dos_1ga09a1e304d66d35dd47daffee9731edaa" kindref="member">uint32_t</ref>)b[2]<sp/>&lt;&lt;<sp/>16;</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fall<sp/>through<sp/>to<sp/>lower<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_TYPE_GENERAL_16BIT:</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_TYPE_BITMAP_16BIT:</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_TYPE_UNSIGNED_16BIT:</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_TYPE_SIGNED_16BIT:</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_TYPE_ENUM_16BIT:</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__zcl__types_1gabf44aa40c12655d86c012c551bb6834e" kindref="member">ZCL_TYPE_ID_CLUSTER</ref>:</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__zcl__types_1ga1dc09447fe0d1f047c4554975a11b3fa" kindref="member">ZCL_TYPE_ID_ATTRIB</ref>:</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>+=<sp/>(<ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref>)b[1]<sp/>&lt;&lt;<sp/>8;</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fall<sp/>through<sp/>to<sp/>lower<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_TYPE_GENERAL_8BIT:</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_TYPE_BITMAP_8BIT:</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_TYPE_UNSIGNED_8BIT:</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_TYPE_SIGNED_8BIT:</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZCL_TYPE_ENUM_8BIT:</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>+=<sp/>b[0];</highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/><ref refid="group__zcl__types_1ga8f678e97557cb052c0df4be97e9f1e82" kindref="member">ZCL_TYPE_TIME_UTCTIME</ref>)</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__zcl__client_1gaece15f78359a3bae016be1d24e7d9ad9" kindref="member">zcl_format_utctime</ref>(<sp/>buffer,<sp/>temp));</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((type<sp/>&gt;=<sp/>ZCL_TYPE_BITMAP_8BIT<sp/>&amp;&amp;<sp/>type<sp/>&lt;=<sp/>ZCL_TYPE_BITMAP_32BIT)</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>type<sp/>==<sp/><ref refid="group__zcl__types_1gabf44aa40c12655d86c012c551bb6834e" kindref="member">ZCL_TYPE_ID_CLUSTER</ref><sp/>||<sp/>type<sp/>==<sp/><ref refid="group__zcl__types_1ga1dc09447fe0d1f047c4554975a11b3fa" kindref="member">ZCL_TYPE_ID_ATTRIB</ref>)</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>these<sp/>types<sp/>are<sp/>only<sp/>ever<sp/>displayed<sp/>as<sp/>hexadecimal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;0x%0*&quot;</highlight><highlight class="normal"><sp/><ref refid="group__hal_1ga32b0c8a04aae5d4454d15e6cbe109f64" kindref="member">PRIX32</ref><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typesize<sp/>&lt;&lt;<sp/>1,<sp/>temp);</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__zcl__types_1ga0f5737f60f1f37fb3b375e9fd5fe664d" kindref="member">zcl_type_info</ref>[type]<sp/>&amp;<sp/><ref refid="group__zcl__types_1gaacf8dcd439ce0388d90681aec545e4e3" kindref="member">ZCL_T_SIGNED</ref>)</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;0x%0*&quot;</highlight><highlight class="normal"><sp/><ref refid="group__hal_1ga32b0c8a04aae5d4454d15e6cbe109f64" kindref="member">PRIX32</ref><sp/></highlight><highlight class="stringliteral">&quot;<sp/>=<sp/>%&quot;</highlight><highlight class="normal"><sp/>PRId32<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typesize<sp/>&lt;&lt;<sp/>1,<sp/>temp,<sp/>temp);</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;0x%0*&quot;</highlight><highlight class="normal"><sp/><ref refid="group__hal_1ga32b0c8a04aae5d4454d15e6cbe109f64" kindref="member">PRIX32</ref><sp/></highlight><highlight class="stringliteral">&quot;<sp/>=<sp/>%&quot;</highlight><highlight class="normal"><sp/><ref refid="group__hal_1gaaf2af4a10f0bd308e9c349c8382382be" kindref="member">PRIu32</ref><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typesize<sp/>&lt;&lt;<sp/>1,<sp/>temp,<sp/>temp);</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hexdump<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hexdump)</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>puts(<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Value:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__util_1gaa321236a0cb6f4e0dad592fdf1b550d2" kindref="member">hex_dump</ref>(<sp/>value,<sp/>datasize,<sp/><ref refid="group__hal_1ga696f6553e33cbd20eda34e220ec9939a" kindref="member">HEX_DUMP_FLAG_TAB</ref>);</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>datasize;</highlight></codeline>
<codeline lineno="914"><highlight class="normal">}</highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/zigbee/zcl_client.c"/>
  </compounddef>
</doxygen>
