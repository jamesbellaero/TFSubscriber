<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="zigbee__zdo_8c" kind="file" language="C++">
    <compoundname>zigbee_zdo.c</compoundname>
    <includes local="no">stddef.h</includes>
    <includes local="no">stdio.h</includes>
    <includes refid="platform_8h" local="yes">xbee/platform.h</includes>
    <includes refid="aps_8h" local="yes">wpan/aps.h</includes>
    <includes refid="byteorder_8h" local="yes">xbee/byteorder.h</includes>
    <includes refid="zdo_8h" local="yes">zigbee/zdo.h</includes>
    <incdepgraph>
      <node id="1707">
        <label>src/zigbee/zigbee_zdo.c</label>
        <link refid="zigbee__zdo_8c"/>
        <childnode refid="1708" relation="include">
        </childnode>
        <childnode refid="1709" relation="include">
        </childnode>
        <childnode refid="1710" relation="include">
        </childnode>
        <childnode refid="1714" relation="include">
        </childnode>
        <childnode refid="1716" relation="include">
        </childnode>
        <childnode refid="1718" relation="include">
        </childnode>
      </node>
      <node id="1711">
        <label>errno.h</label>
      </node>
      <node id="1712">
        <label>xbee/jslong_glue.h</label>
        <link refid="jslong__glue_8h_source"/>
        <childnode refid="1713" relation="include">
        </childnode>
      </node>
      <node id="1708">
        <label>stddef.h</label>
      </node>
      <node id="1714">
        <label>wpan/aps.h</label>
        <link refid="aps_8h"/>
        <childnode refid="1715" relation="include">
        </childnode>
      </node>
      <node id="1716">
        <label>xbee/byteorder.h</label>
        <link refid="byteorder_8h"/>
        <childnode refid="1717" relation="include">
        </childnode>
        <childnode refid="1710" relation="include">
        </childnode>
      </node>
      <node id="1717">
        <label>string.h</label>
      </node>
      <node id="1715">
        <label>wpan/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="1710" relation="include">
        </childnode>
      </node>
      <node id="1710">
        <label>xbee/platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="1711" relation="include">
        </childnode>
        <childnode refid="1708" relation="include">
        </childnode>
        <childnode refid="1712" relation="include">
        </childnode>
      </node>
      <node id="1718">
        <label>zigbee/zdo.h</label>
        <link refid="zdo_8h"/>
        <childnode refid="1715" relation="include">
        </childnode>
        <childnode refid="1714" relation="include">
        </childnode>
      </node>
      <node id="1713">
        <label>xbee/jslong.h</label>
        <link refid="jslong_8h_source"/>
      </node>
      <node id="1709">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__zdo_1ga126dd7828d5c11842a466f1a792f8674" prot="public" static="no">
        <name>zigbee_zdo_debug</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zigbee_zdo.c" line="41" column="10" bodyfile="src/zigbee/zigbee_zdo.c" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__zdo_1ga00aac62a0e22c8d6accd9bb701188c34" prot="public" static="no">
        <name>ZDO_MAX_ENDPOINTS</name>
        <initializer>20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zigbee_zdo.c" line="49" column="9" bodyfile="src/zigbee/zigbee_zdo.c" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="zigbee__zdo_8c_1a7a0df3b2e59823292a8c201fcb90c0c3" prot="public" static="no">
        <name>MAX_CLUSTERS</name>
        <initializer>((sizeof rsp.clusters - 2) / sizeof(<ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zigbee_zdo.c" line="540" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__zdo_1gab405baf051b6c2b3c85bc4e80aa5c2bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structwpan__endpoint__table__entry__t" kindref="compound">wpan_endpoint_table_entry_t</ref> *</type>
        <definition>zigbee_zdo_debug const wpan_endpoint_table_entry_t * _zdo_endpoint_of</definition>
        <argsstring>(wpan_dev_t *dev)</argsstring>
        <name>_zdo_endpoint_of</name>
        <param>
          <type><ref refid="structwpan__dev__t" kindref="compound">wpan_dev_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
<para>Return the endpoint table entry for the ZDO endpoint. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>search the endpoint table of this device</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>NULL</parametername>
</parameternamelist>
<parameterdescription>
<para>couldn&apos;t find the ZDO endpoint for <computeroutput>dev</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!NULL</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the ZDO endpoint of <computeroutput>dev</computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zigbee_zdo.c" line="53" column="1" bodyfile="src/zigbee/zigbee_zdo.c" bodystart="65" bodyend="68"/>
        <references refid="group__wpan__aps_1ga0a88c1b17d1f9a42a53668b14f15e205" compoundref="wpan__aps_8c" startline="160" endline="179">wpan_endpoint_match</references>
        <references refid="group__wpan__aps_1ga860a08927c4e6d7656281713186c43dd" compoundref="aps_8h" startline="111">WPAN_ENDPOINT_ZDO</references>
        <references refid="group__wpan__aps_1gabdbce33bdd976b65877a241842b73a20" compoundref="aps_8h" startline="80">WPAN_PROFILE_ZDO</references>
        <referencedby refid="group__zdo_1gaaf992619b06595291c2aead8a3d4dba1" compoundref="zigbee__zdo_8c" startline="82" endline="89">zdo_endpoint_state</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__zdo_1gaaf992619b06595291c2aead8a3d4dba1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>zigbee_zdo_debug <ref refid="structwpan__ep__state__t" kindref="compound">wpan_ep_state_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
        <definition>wpan_ep_state_t FAR * zdo_endpoint_state</definition>
        <argsstring>(wpan_dev_t *dev)</argsstring>
        <name>zdo_endpoint_state</name>
        <param>
          <type><ref refid="structwpan__dev__t" kindref="compound">wpan_dev_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
<para>Returns the ZDO endpoint&apos;s state if a device has a ZDO endpoint. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>device to query</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>NULL</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>dev</computeroutput> does not have a ZDO endpoint </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!NULL</parametername>
</parameternamelist>
<parameterdescription>
<para>address of wpan_ep_state variable used for state tracking </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zigbee_zdo.c" line="82" column="1" bodyfile="src/zigbee/zigbee_zdo.c" bodystart="82" bodyend="89"/>
        <references refid="group__zdo_1gab405baf051b6c2b3c85bc4e80aa5c2bb" compoundref="zigbee__zdo_8c" startline="65" endline="68">_zdo_endpoint_of</references>
        <references refid="group__zdo_1gae4b6736d215caf2a10790761ed52443d" compoundref="zigbee__zdo_8c" startline="110" endline="139">_zdo_envelope_create</references>
        <references refid="group__wpan__aps_1ga389966cb276b33004b14ee698c270347" compoundref="aps_8h" startline="264">wpan_endpoint_table_entry_t::ep_state</references>
        <referencedby refid="group__zdo_1gab02e4c1584594c0a96d05399bd69bffa" compoundref="zigbee__zdo_8c" startline="839" endline="885">zdo_send_bind_req</referencedby>
        <referencedby refid="group__zdo_1gac842062e5e1a60d25cddf16ec22ef601" compoundref="zigbee__zdo_8c" startline="925" endline="969">zdo_send_descriptor_req</referencedby>
        <referencedby refid="group__zdo_1ga4af5f8d70054f7883dbc1305e3a3f181" compoundref="zigbee__zdo_8c" startline="1134" endline="1173">zdo_send_ieee_addr_req</referencedby>
        <referencedby refid="group__zdo_1ga40f076c190ab2390836687b8e1f705eb" compoundref="zigbee__zdo_8c" startline="1028" endline="1070">zdo_send_nwk_addr_req</referencedby>
        <referencedby refid="group__zdo_1gafbbece379bc09af360099d1e0825d507" compoundref="zigbee__zdo_8c" startline="422" endline="464">zdo_simple_desc_request</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__zdo_1gae4b6736d215caf2a10790761ed52443d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="unionaddr64" kindref="compound">addr64</ref> *</type>
        <definition>zigbee_zdo_debug const addr64 * _zdo_envelope_create</definition>
        <argsstring>(wpan_envelope_t *envelope, wpan_dev_t *dev, const addr64 *address)</argsstring>
        <name>_zdo_envelope_create</name>
        <param>
          <type><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref> *</type>
          <declname>envelope</declname>
        </param>
        <param>
          <type><ref refid="structwpan__dev__t" kindref="compound">wpan_dev_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>const <ref refid="unionaddr64" kindref="compound">addr64</ref> *</type>
          <declname>address</declname>
        </param>
        <briefdescription>
<para>helper function for creating ZDO request envelopes </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">envelope</parametername>
</parameternamelist>
<parameterdescription>
<para>envelope to populate </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>device that will send this envelope </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">address</parametername>
</parameternamelist>
<parameterdescription>
<para>send request to the given target, or NULL for a self-addressed request</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>either <computeroutput>address</computeroutput> or a pointer to an all-zero IEEE address</para></simplesect>
<simplesect kind="note"><para>return value may change to something more useful in a future release </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zigbee_zdo.c" line="93" column="1" bodyfile="src/zigbee/zigbee_zdo.c" bodystart="110" bodyend="139"/>
        <references refid="group__wpan__aps_1ga66a58a737aee9733019399e2eceabf4a" compoundref="aps_8h" startline="392">wpan_dev_t::address</references>
        <references refid="group__wpan__aps_1ga0992896b3999455a300e8ba25c368ae8" compoundref="aps_8h" startline="50">wpan_envelope_t::dest_endpoint</references>
        <references refid="group__wpan__aps_1ga5ca7f19e5697de2baf0e2147a41a5792" compoundref="aps_8h" startline="45">wpan_envelope_t::profile_id</references>
        <references refid="group__wpan__aps_1ga9781a5a281ee97f7f67d8ebe2c4f54db" compoundref="aps_8h" startline="49">wpan_envelope_t::source_endpoint</references>
        <references refid="group__wpan__aps_1ga860a08927c4e6d7656281713186c43dd" compoundref="aps_8h" startline="111">WPAN_ENDPOINT_ZDO</references>
        <references refid="group__wpan__aps_1ga95e2bb4e4c546191c059f54179064fc3" compoundref="wpan__aps_8c" startline="712" endline="723">wpan_envelope_create</references>
        <references refid="group__wpan__types_1ga014f9d0857312b6a7f80ee10ecfd0935" compoundref="types_8h" startline="93">WPAN_IEEE_ADDR_ALL_ZEROS</references>
        <references refid="group__wpan__types_1ga1674d7b825e528a482725d1c06b02c10" compoundref="types_8h" startline="68">WPAN_NET_ADDR_UNDEFINED</references>
        <references refid="group__wpan__aps_1gabdbce33bdd976b65877a241842b73a20" compoundref="aps_8h" startline="80">WPAN_PROFILE_ZDO</references>
        <referencedby refid="group__zdo_1gaaf992619b06595291c2aead8a3d4dba1" compoundref="zigbee__zdo_8c" startline="82" endline="89">zdo_endpoint_state</referencedby>
        <referencedby refid="group__zdo_1gab02e4c1584594c0a96d05399bd69bffa" compoundref="zigbee__zdo_8c" startline="839" endline="885">zdo_send_bind_req</referencedby>
        <referencedby refid="group__zdo_1ga40f076c190ab2390836687b8e1f705eb" compoundref="zigbee__zdo_8c" startline="1028" endline="1070">zdo_send_nwk_addr_req</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__zdo_1ga1d645805a731e1419b5012a5c8a09bf8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>zigbee_zdo_debug int</type>
        <definition>int zdo_send_response</definition>
        <argsstring>(const wpan_envelope_t FAR *request, const void FAR *response, uint16_t length)</argsstring>
        <name>zdo_send_response</name>
        <param>
          <type>const <ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>request</declname>
        </param>
        <param>
          <type>const void <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>response</declname>
        </param>
        <param>
          <type><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref></type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Send a response to a ZDO request. </para>        </briefdescription>
        <detaileddescription>
<para>Automatically builds the response envelope and sets its cluster ID (to the request&apos;s cluster ID with the high bit set) before sending.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">request</parametername>
</parameternamelist>
<parameterdescription>
<para>envelope of original request </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">response</parametername>
</parameternamelist>
<parameterdescription>
<para>frame to send in response </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>length of <emphasis>response</emphasis> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>sent response </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!0</parametername>
</parameternamelist>
<parameterdescription>
<para>error sending response </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zigbee_zdo.c" line="160" column="1" bodyfile="src/zigbee/zigbee_zdo.c" bodystart="160" bodyend="182"/>
        <references refid="group__wpan__aps_1gaaaee02ff456d4f6103a5e94c2ba106c5" compoundref="wpan__aps_8c" startline="752" endline="776">wpan_envelope_reply</references>
      </memberdef>
      <memberdef kind="function" id="group__zdo_1ga1a65d88af9f0c9906d548aa1ff2586f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _match_desc_cluster_list</definition>
        <argsstring>(uint8_t **buffer, const uint16_t *clust_read, int max_count)</argsstring>
        <name>_match_desc_cluster_list</name>
        <param>
          <type><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref> **</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const <ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref> *</type>
          <declname>clust_read</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max_count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<internal><para>Writes to *buffer, an 8-bit cluster count followed by the 16-bit cluster IDs in little-endian byte order.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>location to store cluster list, updated to point to first byte after bytes written </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cluster_read</parametername>
</parameternamelist>
<parameterdescription>
<para>list of 16-bit cluster IDs, terminated by WPAN_CLUSTER_END_OF_LIST </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">max_count</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum number of clusters to write to *buffer</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>-ENOSPC</parametername>
</parameternamelist>
<parameterdescription>
<para>can&apos;t fit list of clusters into buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>&gt;=0</parametername>
</parameternamelist>
<parameterdescription>
<para>number of clusters written to buffer </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zigbee_zdo.c" line="199" column="1" bodyfile="src/zigbee/zigbee_zdo.c" bodystart="199" bodyend="221"/>
        <references refid="group__hal_1ga088abe8bad2df798edad3053d719b937" compoundref="platform_8h" startline="107">ENOSPC</references>
        <references refid="group__util__byteorder_1ga3ea73a6089f61223b225c46e2ba58a47" compoundref="byteorder_8h" startline="135">htole16</references>
        <references refid="group__wpan__aps_1gacbfdff1cef70167f178c4e05b69f65fe" compoundref="aps_8h" startline="280">WPAN_CLUSTER_END_OF_LIST</references>
        <referencedby refid="group__zdo_1ga5746efffb4b90718eb973796f2b4bb41" compoundref="zigbee__zdo_8c" startline="247" endline="292">zdo_match_desc_request</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__zdo_1ga5746efffb4b90718eb973796f2b4bb41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>zigbee_zdo_debug int</type>
        <definition>int zdo_match_desc_request</definition>
        <argsstring>(void *buffer, int16_t buflen, uint16_t addr_of_interest, uint16_t profile_id, const uint16_t *inClust, const uint16_t *outClust)</argsstring>
        <name>zdo_match_desc_request</name>
        <param>
          <type>void *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="group__hal__dos_1ga2140805d08462d474b82ddc8d1c2f3e6" kindref="member">int16_t</ref></type>
          <declname>buflen</declname>
        </param>
        <param>
          <type><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref></type>
          <declname>addr_of_interest</declname>
        </param>
        <param>
          <type><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref></type>
          <declname>profile_id</declname>
        </param>
        <param>
          <type>const <ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref> *</type>
          <declname>inClust</declname>
        </param>
        <param>
          <type>const <ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref> *</type>
          <declname>outClust</declname>
        </param>
        <briefdescription>
<para>Generate a Match_Desc (Match Descriptor) request (ZigBee spec 2.4.3.1.7) to send on the network. </para>        </briefdescription>
        <detaileddescription>
<para>Note that the first byte of <emphasis>buffer</emphasis> is NOT set, and that the caller should set it to the next sequence number/transaction ID.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to hold generated request. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">buflen</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of <emphasis>buffer</emphasis> used to hold generated request. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">addr_of_interest</parametername>
</parameternamelist>
<parameterdescription>
<para>See ZDO documentation for NWKAddrOfInterest. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">profile_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Profile ID to match, must be an actual profile ID (cannot be WPAN_APS_PROFILE_ANY). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">inClust</parametername>
</parameternamelist>
<parameterdescription>
<para>List of input clusters, ending with <ref refid="group__wpan__aps_1gacbfdff1cef70167f178c4e05b69f65fe" kindref="member">WPAN_CLUSTER_END_OF_LIST</ref>. Can use <computeroutput>NULL</computeroutput> if there aren&apos;t any input clusters. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">outClust</parametername>
</parameternamelist>
<parameterdescription>
<para>List of output clusters, ending with <ref refid="group__wpan__aps_1gacbfdff1cef70167f178c4e05b69f65fe" kindref="member">WPAN_CLUSTER_END_OF_LIST</ref>. Can use <computeroutput>NULL</computeroutput> if there aren&apos;t any output clusters.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>-ENOSPC</parametername>
</parameternamelist>
<parameterdescription>
<para><emphasis>buffer</emphasis> isn&apos;t large enough to hold request; need 7 bytes plus (2 * the number of clusters) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>&gt;0</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes written to <emphasis>buffer</emphasis> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zigbee_zdo.c" line="247" column="1" bodyfile="src/zigbee/zigbee_zdo.c" bodystart="247" bodyend="292"/>
        <references refid="group__zdo_1ga1a65d88af9f0c9906d548aa1ff2586f7" compoundref="zigbee__zdo_8c" startline="199" endline="221">_match_desc_cluster_list</references>
        <references refid="group__zdo_1ga41d93e5e12d9ed4e18d092fe3af779a2" compoundref="zigbee__zdo_8c" startline="316" endline="412">_zdo_match_desc_respond</references>
        <references refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" compoundref="platform_8h" startline="95">EINVAL</references>
        <references refid="group__hal_1ga088abe8bad2df798edad3053d719b937" compoundref="platform_8h" startline="107">ENOSPC</references>
        <references refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" compoundref="platform_8h" startline="370">FAR</references>
        <references refid="group__util__byteorder_1ga3ea73a6089f61223b225c46e2ba58a47" compoundref="byteorder_8h" startline="135">htole16</references>
        <references refid="group__zdo_1gaa7b6adb5a5b6441e4f669337f4ef61e5" compoundref="zdo_8h" startline="184">network_addr_le</references>
        <references refid="group___s_x_a_1ga4233297bd31be5c273d4fb0758cc54d7" compoundref="sxa_8h" startline="70">PACKED_STRUCT</references>
        <references refid="group__zdo_1ga9f7e601c7386ae55f5e6d5ec558af125" compoundref="zdo_8h" startline="419">profile_id_le</references>
        <referencedby refid="group__zcl__client_1ga4c75937cc0fa5c70c63f30b59a4ddebc" compoundref="zcl__client_8c" startline="334" endline="402">zdo_send_match_desc</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__zdo_1ga41d93e5e12d9ed4e18d092fe3af779a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>zigbee_zdo_debug int _zdo_match_desc_respond</definition>
        <argsstring>(const wpan_envelope_t FAR *envelope)</argsstring>
        <name>_zdo_match_desc_respond</name>
        <param>
          <type>const <ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>envelope</declname>
        </param>
        <briefdescription>
<para>Respond to a Match Descriptor (Match_Desc) request (ZigBee spec 2.4.3.1.7). </para>        </briefdescription>
        <detaileddescription>
<internal><para>This ZDO request is used to find endpoints using a particular Profile ID and a cluster from a list of input and output clusters.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">envelope</parametername>
</parameternamelist>
<parameterdescription>
<para>envelope of request</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>successfully sent response, or none of the endpoints matched the request </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENODATA</parametername>
</parameternamelist>
<parameterdescription>
<para>don&apos;t know network address of <computeroutput>envelope-&gt;dev</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!0</parametername>
</parameternamelist>
<parameterdescription>
<para>error parsing request or sending response </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zigbee_zdo.c" line="295" column="1" bodyfile="src/zigbee/zigbee_zdo.c" bodystart="316" bodyend="412"/>
        <references refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" compoundref="platform_8h" startline="370">FAR</references>
        <references refid="group___s_x_a_1ga4233297bd31be5c273d4fb0758cc54d7" compoundref="sxa_8h" startline="70">PACKED_STRUCT</references>
        <references refid="group__zcl_1ga1d127017fb298b889f4ba24752d08b8e" compoundref="zcl_8h" startline="416">type</references>
        <referencedby refid="group__zdo_1ga5746efffb4b90718eb973796f2b4bb41" compoundref="zigbee__zdo_8c" startline="247" endline="292">zdo_match_desc_request</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__zdo_1gafbbece379bc09af360099d1e0825d507" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>zigbee_zdo_debug int</type>
        <definition>int zdo_simple_desc_request</definition>
        <argsstring>(wpan_envelope_t *envelope, uint16_t addr_of_interest, uint_fast8_t endpoint, wpan_response_fn callback, const void FAR *context)</argsstring>
        <name>zdo_simple_desc_request</name>
        <param>
          <type><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref> *</type>
          <declname>envelope</declname>
        </param>
        <param>
          <type><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref></type>
          <declname>addr_of_interest</declname>
        </param>
        <param>
          <type>uint_fast8_t</type>
          <declname>endpoint</declname>
        </param>
        <param>
          <type><ref refid="group__wpan__aps_1gabf0a6b85c9ff3ff9104c8b58c1436d72" kindref="member">wpan_response_fn</ref></type>
          <declname>callback</declname>
        </param>
        <param>
          <type>const void <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Send a ZDO Simple Descriptor Request. </para>        </briefdescription>
        <detaileddescription>
<para>The simple descriptor contains information specific to each of a node&apos;s endpoints. Use the ZDO Simple Descriptor Request to get a descriptor for an endpoint on a remote node.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">envelope</parametername>
</parameternamelist>
<parameterdescription>
<para>Envelope created with <ref refid="group__wpan__aps_1ga95e2bb4e4c546191c059f54179064fc3" kindref="member">wpan_envelope_create()</ref>. Only <computeroutput>dev</computeroutput>, <computeroutput>ieee_address</computeroutput> and <computeroutput>network_address</computeroutput> should be set, all other structure elements should be zero. Address may match <computeroutput>addr_of_interest</computeroutput> or an alternative device that contains the discovery information of that device (like an end device&apos;s parent).</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">addr_of_interest</parametername>
</parameternamelist>
<parameterdescription>
<para>Network address of the device for which the simple descriptor is required.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">endpoint</parametername>
</parameternamelist>
<parameterdescription>
<para>Endpoint of interest, a value from 1 to 254.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">callback</parametername>
</parameternamelist>
<parameterdescription>
<para>Function to receive the Simple Descriptor Response. See documentation for wpan_response_fn for this callback&apos;s API.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">context</parametername>
</parameternamelist>
<parameterdescription>
<para>Context pointer passed to the callback along with the response.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>request sent </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!0</parametername>
</parameternamelist>
<parameterdescription>
<para>error sending request </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zigbee_zdo.c" line="422" column="1" bodyfile="src/zigbee/zigbee_zdo.c" bodystart="422" bodyend="464"/>
        <references refid="group__zdo_1gaa70aa4bcb14a98c69e7a54a9971ea194" compoundref="zigbee__zdo_8c" startline="526" endline="637">_zdo_simple_desc_respond</references>
        <references refid="group__wpan__aps_1ga262a92f94287e77cb56350951893bae2" compoundref="aps_8h" startline="46">wpan_envelope_t::cluster_id</references>
        <references refid="group__wpan__aps_1ga0992896b3999455a300e8ba25c368ae8" compoundref="aps_8h" startline="50">wpan_envelope_t::dest_endpoint</references>
        <references refid="group__wpan__aps_1ga7f9a38312b9025348d42a4ed0042ce37" compoundref="aps_8h" startline="42">wpan_envelope_t::dev</references>
        <references refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" compoundref="platform_8h" startline="95">EINVAL</references>
        <references refid="group__zdo_1ga7d397493728da2bca8d55b2d61c4ec5d" compoundref="zdo_8h" startline="403">endpoint</references>
        <references refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" compoundref="platform_8h" startline="370">FAR</references>
        <references refid="group__util__byteorder_1ga3ea73a6089f61223b225c46e2ba58a47" compoundref="byteorder_8h" startline="135">htole16</references>
        <references refid="group__wpan__aps_1ga1892eba2086d12ac2b09005aeb09ea3b" compoundref="aps_8h" startline="62">wpan_envelope_t::length</references>
        <references refid="group__wpan__aps_1ga8737375e27cb391ff381fff10dc0c132" compoundref="aps_8h" startline="61">wpan_envelope_t::payload</references>
        <references refid="group__wpan__aps_1ga5ca7f19e5697de2baf0e2147a41a5792" compoundref="aps_8h" startline="45">wpan_envelope_t::profile_id</references>
        <references refid="group__wpan__aps_1ga9781a5a281ee97f7f67d8ebe2c4f54db" compoundref="aps_8h" startline="49">wpan_envelope_t::source_endpoint</references>
        <references refid="group__wpan__aps_1gae5f88ed40bd334d963e261947b77b980" compoundref="wpan__aps_8c" startline="299" endline="339">wpan_conversation_register</references>
        <references refid="group__wpan__aps_1ga860a08927c4e6d7656281713186c43dd" compoundref="aps_8h" startline="111">WPAN_ENDPOINT_ZDO</references>
        <references refid="group__wpan__aps_1ga06f1e9e86b74ef807ded44b79b13e283" compoundref="wpan__aps_8c" startline="790" endline="810">wpan_envelope_send</references>
        <references refid="group__wpan__aps_1gabdbce33bdd976b65877a241842b73a20" compoundref="aps_8h" startline="80">WPAN_PROFILE_ZDO</references>
        <references refid="group__zdo_1gae1d68b13491e1e29493f412d984886e7" compoundref="zdo_8h" startline="37">ZDO_CONVERSATION_TIMEOUT</references>
        <references refid="group__zdo_1gaaf992619b06595291c2aead8a3d4dba1" compoundref="zigbee__zdo_8c" startline="82" endline="89">zdo_endpoint_state</references>
        <references refid="group__zdo_1ga273177b195b871fe08bb7e5cab487141" compoundref="zdo_8h" startline="396">ZDO_SIMPLE_DESC_REQ</references>
      </memberdef>
      <memberdef kind="function" id="group__zdo_1gaa70aa4bcb14a98c69e7a54a9971ea194" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>zigbee_zdo_debug int _zdo_simple_desc_respond</definition>
        <argsstring>(const wpan_envelope_t FAR *envelope)</argsstring>
        <name>_zdo_simple_desc_respond</name>
        <param>
          <type>const <ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>envelope</declname>
        </param>
        <briefdescription>
<para>Respond to a Simple Descriptor (Simple_Desc) request (ZigBee spec 2.4.3.1.5). </para>        </briefdescription>
        <detaileddescription>
<internal><para>This ZDO request is used to get information about a single endpoint.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">envelope</parametername>
</parameternamelist>
<parameterdescription>
<para>envelope of request</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>successfully sent response </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENODATA</parametername>
</parameternamelist>
<parameterdescription>
<para>don&apos;t know network address of <computeroutput>envelope-&gt;dev</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!0</parametername>
</parameternamelist>
<parameterdescription>
<para>error parsing request or sending response </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
<para>number of clusters that fit in cluster list, minus 2 count bytes </para>        </inbodydescription>
        <location file="src/zigbee/zigbee_zdo.c" line="467" column="1" bodyfile="src/zigbee/zigbee_zdo.c" bodystart="526" bodyend="637"/>
        <references refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" compoundref="platform_8h" startline="95">EINVAL</references>
        <references refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" compoundref="platform_8h" startline="370">FAR</references>
        <references refid="group___s_x_a_1ga4233297bd31be5c273d4fb0758cc54d7" compoundref="sxa_8h" startline="70">PACKED_STRUCT</references>
        <references refid="group__wpan__types_1ga1674d7b825e528a482725d1c06b02c10" compoundref="types_8h" startline="68">WPAN_NET_ADDR_UNDEFINED</references>
        <referencedby refid="group__zdo_1gafbbece379bc09af360099d1e0825d507" compoundref="zigbee__zdo_8c" startline="422" endline="464">zdo_simple_desc_request</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__zdo_1ga558539813d6a9c8813eeae855e77385f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _simple_desc_cluster_list</definition>
        <argsstring>(uint8_t **buffer, int max_count, uint8_t mask, const wpan_cluster_table_entry_t *entry)</argsstring>
        <name>_simple_desc_cluster_list</name>
        <param>
          <type><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref> **</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max_count</declname>
        </param>
        <param>
          <type><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref></type>
          <declname>mask</declname>
        </param>
        <param>
          <type>const <ref refid="structwpan__cluster__table__entry__t" kindref="compound">wpan_cluster_table_entry_t</ref> *</type>
          <declname>entry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<internal><para>Writes to *buffer, an 8-bit cluster count followed by the 16-bit IDs for entries in a cluster table matching a given mask.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>location to store cluster list, updated to point to first byte after bytes written </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">max_count</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum number of clusters to write to *buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>mask used to restrict entries </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">entry</parametername>
</parameternamelist>
<parameterdescription>
<para>list of clusters, terminated by an entry with and ID of WPAN_CLUSTER_END_OF_LIST</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>-ENOSPC</parametername>
</parameternamelist>
<parameterdescription>
<para>can&apos;t fit list of clusters into buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>&gt;=0</parametername>
</parameternamelist>
<parameterdescription>
<para>number of clusters written to buffer </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zigbee_zdo.c" line="483" column="1" bodyfile="src/zigbee/zigbee_zdo.c" bodystart="483" bodyend="509"/>
        <references refid="group__wpan__aps_1ga262a92f94287e77cb56350951893bae2" compoundref="aps_8h" startline="203">wpan_cluster_table_entry_t::cluster_id</references>
        <references refid="group__hal_1ga088abe8bad2df798edad3053d719b937" compoundref="platform_8h" startline="107">ENOSPC</references>
        <references refid="group__wpan__aps_1gaa2585d779da0ab21273a8d92de9a0ebe" compoundref="aps_8h" startline="216">wpan_cluster_table_entry_t::flags</references>
        <references refid="group__util__byteorder_1ga3ea73a6089f61223b225c46e2ba58a47" compoundref="byteorder_8h" startline="135">htole16</references>
        <references refid="group__wpan__aps_1gacbfdff1cef70167f178c4e05b69f65fe" compoundref="aps_8h" startline="280">WPAN_CLUSTER_END_OF_LIST</references>
      </memberdef>
      <memberdef kind="function" id="group__zdo_1ga233f2d57bc9b9d68cb18bd9d76c08e34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>zigbee_zdo_debug int _zdo_active_ep_respond</definition>
        <argsstring>(const wpan_envelope_t FAR *envelope)</argsstring>
        <name>_zdo_active_ep_respond</name>
        <param>
          <type>const <ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>envelope</declname>
        </param>
        <briefdescription>
<para>Respond to an Active Endpoint (Active_EP) request (ZigBee spec 2.4.3.1.6). </para>        </briefdescription>
        <detaileddescription>
<internal><para>This ZDO request is used to get a list of active endoints on a device.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">envelope</parametername>
</parameternamelist>
<parameterdescription>
<para>envelope of request</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>successfully sent response </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENODATA</parametername>
</parameternamelist>
<parameterdescription>
<para>don&apos;t know network address of <computeroutput>envelope-&gt;dev</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!0</parametername>
</parameternamelist>
<parameterdescription>
<para>error parsing request or sending response </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zigbee_zdo.c" line="641" column="1" bodyfile="src/zigbee/zigbee_zdo.c" bodystart="660" bodyend="711"/>
        <references refid="group___s_x_a_1ga4233297bd31be5c273d4fb0758cc54d7" compoundref="sxa_8h" startline="70">PACKED_STRUCT</references>
      </memberdef>
      <memberdef kind="function" id="group__zdo_1ga2e4465da8204d6c9a67edc3a6f210c1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>zigbee_zdo_debug int</type>
        <definition>int zdo_handler</definition>
        <argsstring>(const wpan_envelope_t FAR *envelope, wpan_ep_state_t FAR *ep_state)</argsstring>
        <name>zdo_handler</name>
        <param>
          <type>const <ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>envelope</declname>
        </param>
        <param>
          <type><ref refid="structwpan__ep__state__t" kindref="compound">wpan_ep_state_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>ep_state</declname>
        </param>
        <briefdescription>
<para>Process ZDO frames (received on endpoint 0 with Profile ID 0). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">envelope</parametername>
</parameternamelist>
<parameterdescription>
<para>envelope of received ZDO frame, contains address, endpoint, profile, and cluster info </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ep_state</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to endpoint&apos;s state structure (used for tracking transactions)</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>successfully processed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!0</parametername>
</parameternamelist>
<parameterdescription>
<para>error trying to process frame </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zigbee_zdo.c" line="731" column="1" bodyfile="src/zigbee/zigbee_zdo.c" bodystart="731" bodyend="833"/>
        <references refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" compoundref="platform_8h" startline="95">EINVAL</references>
        <references refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" compoundref="platform_8h" startline="370">FAR</references>
      </memberdef>
      <memberdef kind="function" id="group__zdo_1gab02e4c1584594c0a96d05399bd69bffa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>zigbee_zdo_debug int</type>
        <definition>int zdo_send_bind_req</definition>
        <argsstring>(wpan_envelope_t *envelope, uint16_t type, wpan_response_fn callback, void FAR *context)</argsstring>
        <name>zdo_send_bind_req</name>
        <param>
          <type><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref> *</type>
          <declname>envelope</declname>
        </param>
        <param>
          <type><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="group__wpan__aps_1gabf0a6b85c9ff3ff9104c8b58c1436d72" kindref="member">wpan_response_fn</ref></type>
          <declname>callback</declname>
        </param>
        <param>
          <type>void <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Send a ZDO Bind (or Unbind) Request to the destination address in the envelope. </para>        </briefdescription>
        <detaileddescription>
<para>Binds <computeroutput></computeroutput>.dest_endpoint on <computeroutput></computeroutput>.ieee_address to <computeroutput></computeroutput>.source_endpoint on <computeroutput></computeroutput>.dev using <computeroutput></computeroutput>.cluster_id.</para><para>Ignores the <computeroutput></computeroutput>.options, <computeroutput></computeroutput>.payload, and <computeroutput></computeroutput>.length members of the envelope.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">envelope</parametername>
</parameternamelist>
<parameterdescription>
<para>addressing information used for the Bind Request </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">type</parametername>
</parameternamelist>
<parameterdescription>
<para>ZDO_BIND_REQ for a Bind Request or ZDO_UNBIND_REQ for an Unbind Request; all other values are invalid </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">callback</parametername>
</parameternamelist>
<parameterdescription>
<para>callback to receive Bind/Unbind (or Default) Response; NULL if you don&apos;t care about the response </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">context</parametername>
</parameternamelist>
<parameterdescription>
<para>context passed to callback</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>successfully sent request </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>bad parameter passed to function </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!0</parametername>
</parameternamelist>
<parameterdescription>
<para>error sending request </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zigbee_zdo.c" line="839" column="1" bodyfile="src/zigbee/zigbee_zdo.c" bodystart="839" bodyend="885"/>
        <references refid="group__zdo_1gae4b6736d215caf2a10790761ed52443d" compoundref="zigbee__zdo_8c" startline="110" endline="139">_zdo_envelope_create</references>
        <references refid="group__wpan__aps_1ga262a92f94287e77cb56350951893bae2" compoundref="aps_8h" startline="46">wpan_envelope_t::cluster_id</references>
        <references refid="group__wpan__aps_1ga7f9a38312b9025348d42a4ed0042ce37" compoundref="aps_8h" startline="42">wpan_envelope_t::dev</references>
        <references refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" compoundref="platform_8h" startline="95">EINVAL</references>
        <references refid="group__wpan__aps_1ga2549f921e25a72dfa05a2154a792e2bf" compoundref="aps_8h" startline="43">wpan_envelope_t::ieee_address</references>
        <references refid="group__wpan__aps_1ga1892eba2086d12ac2b09005aeb09ea3b" compoundref="aps_8h" startline="62">wpan_envelope_t::length</references>
        <references refid="group__wpan__aps_1ga30948a7f8d096191895f50b80d81ca12" compoundref="aps_8h" startline="44">wpan_envelope_t::network_address</references>
        <references refid="group___s_x_a_1ga4233297bd31be5c273d4fb0758cc54d7" compoundref="sxa_8h" startline="70">PACKED_STRUCT</references>
        <references refid="group__wpan__aps_1ga8737375e27cb391ff381fff10dc0c132" compoundref="aps_8h" startline="61">wpan_envelope_t::payload</references>
        <references refid="group__zcl_1ga1d127017fb298b889f4ba24752d08b8e" compoundref="zcl_8h" startline="416">type</references>
        <references refid="group__wpan__aps_1gae5f88ed40bd334d963e261947b77b980" compoundref="wpan__aps_8c" startline="299" endline="339">wpan_conversation_register</references>
        <references refid="group__zdo_1ga9e97bead2ca9d929bb94183ddc2106bb" compoundref="zdo_8h" startline="567">ZDO_BIND_REQ</references>
        <references refid="group__zdo_1gae1d68b13491e1e29493f412d984886e7" compoundref="zdo_8h" startline="37">ZDO_CONVERSATION_TIMEOUT</references>
        <references refid="group__zdo_1gaaf992619b06595291c2aead8a3d4dba1" compoundref="zigbee__zdo_8c" startline="82" endline="89">zdo_endpoint_state</references>
        <references refid="group__zdo_1gad447486341b5d51d91f5a44aad418a99" compoundref="zdo_8h" startline="571">ZDO_UNBIND_REQ</references>
      </memberdef>
      <memberdef kind="function" id="group__zdo_1ga4ab17250ec2957d91a6ef4f1377ab62d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>zigbee_zdo_debug int</type>
        <definition>int zdo_mgmt_leave_req</definition>
        <argsstring>(wpan_dev_t *dev, const addr64 *address, uint16_t flags)</argsstring>
        <name>zdo_mgmt_leave_req</name>
        <param>
          <type><ref refid="structwpan__dev__t" kindref="compound">wpan_dev_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>const <ref refid="unionaddr64" kindref="compound">addr64</ref> *</type>
          <declname>address</declname>
        </param>
        <param>
          <type><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Send a ZDO Management Leave Request. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>device to send request on </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">address</parametername>
</parameternamelist>
<parameterdescription>
<para>address to send request to, or NULL for self-addressed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>one or more of the following flags:<itemizedlist>
<listitem><para>ZDO_MGMT_LEAVE_REQ_FLAG_NONE</para></listitem><listitem><para>ZDO_MGMT_LEAVE_REQ_FLAG_REMOVE_CHILDREN - set the Remove Children flag in the ZDO request</para></listitem><listitem><para>ZDO_MGMT_LEAVE_REQ_FLAG_REJOIN - set the Rejoin flag in the ZDO request</para></listitem><listitem><para>ZDO_MGMT_LEAVE_REQ_ENCRYPTED - send the request with APS encryption</para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>successfully sent request </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>bad parameter passed to function </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!0</parametername>
</parameternamelist>
<parameterdescription>
<para>error sending request </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zigbee_zdo.c" line="892" column="1" bodyfile="src/zigbee/zigbee_zdo.c" bodystart="892" bodyend="920"/>
      </memberdef>
      <memberdef kind="function" id="group__zdo_1gac842062e5e1a60d25cddf16ec22ef601" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>zigbee_zdo_debug int</type>
        <definition>int zdo_send_descriptor_req</definition>
        <argsstring>(wpan_envelope_t *envelope, uint16_t cluster, uint16_t addr_of_interest, wpan_response_fn callback, const void FAR *context)</argsstring>
        <name>zdo_send_descriptor_req</name>
        <param>
          <type><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref> *</type>
          <declname>envelope</declname>
        </param>
        <param>
          <type><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref></type>
          <declname>cluster</declname>
        </param>
        <param>
          <type><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref></type>
          <declname>addr_of_interest</declname>
        </param>
        <param>
          <type><ref refid="group__wpan__aps_1gabf0a6b85c9ff3ff9104c8b58c1436d72" kindref="member">wpan_response_fn</ref></type>
          <declname>callback</declname>
        </param>
        <param>
          <type>const void <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Send a ZDO Node, Power, Complex or User Descriptor request, or an Active Endpoint request. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">envelope</parametername>
</parameternamelist>
<parameterdescription>
<para>Envelope created by wpan_envelope_create; this function will fill in the <emphasis>cluster</emphasis> and reset the <emphasis>payload</emphasis> and <emphasis>length</emphasis>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cluster</parametername>
</parameternamelist>
<parameterdescription>
<para>Any ZDO request with a transaction and 16-bit network address as its only fields, including:<itemizedlist>
<listitem><para>ZDO_NODE_DESC_REQ</para></listitem><listitem><para>ZDO_POWER_DESC_REQ</para></listitem><listitem><para>ZDO_ACTIVE_EP_REQ</para></listitem><listitem><para>ZDO_COMPLEX_DESC_REQ</para></listitem><listitem><para>ZDO_USER_DESC_REQ </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">addr_of_interest</parametername>
</parameternamelist>
<parameterdescription>
<para>address to use in ZDO request </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">callback</parametername>
</parameternamelist>
<parameterdescription>
<para>function to receive response </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">context</parametername>
</parameternamelist>
<parameterdescription>
<para>context to pass to <emphasis>callback</emphasis> with response</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>!0</parametername>
</parameternamelist>
<parameterdescription>
<para>error sending request </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>request sent </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zigbee_zdo.c" line="925" column="1" bodyfile="src/zigbee/zigbee_zdo.c" bodystart="925" bodyend="969"/>
        <references refid="group__wpan__aps_1ga262a92f94287e77cb56350951893bae2" compoundref="aps_8h" startline="46">wpan_envelope_t::cluster_id</references>
        <references refid="group__wpan__aps_1ga0992896b3999455a300e8ba25c368ae8" compoundref="aps_8h" startline="50">wpan_envelope_t::dest_endpoint</references>
        <references refid="group__wpan__aps_1ga7f9a38312b9025348d42a4ed0042ce37" compoundref="aps_8h" startline="42">wpan_envelope_t::dev</references>
        <references refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" compoundref="platform_8h" startline="95">EINVAL</references>
        <references refid="group__util__byteorder_1ga3ea73a6089f61223b225c46e2ba58a47" compoundref="byteorder_8h" startline="135">htole16</references>
        <references refid="group__wpan__aps_1ga1892eba2086d12ac2b09005aeb09ea3b" compoundref="aps_8h" startline="62">wpan_envelope_t::length</references>
        <references refid="group__zdo_1gaa7b6adb5a5b6441e4f669337f4ef61e5" compoundref="zdo_8h" startline="184">network_addr_le</references>
        <references refid="group___s_x_a_1ga4233297bd31be5c273d4fb0758cc54d7" compoundref="sxa_8h" startline="70">PACKED_STRUCT</references>
        <references refid="group__wpan__aps_1ga8737375e27cb391ff381fff10dc0c132" compoundref="aps_8h" startline="61">wpan_envelope_t::payload</references>
        <references refid="group__wpan__aps_1ga5ca7f19e5697de2baf0e2147a41a5792" compoundref="aps_8h" startline="45">wpan_envelope_t::profile_id</references>
        <references refid="group__wpan__aps_1ga9781a5a281ee97f7f67d8ebe2c4f54db" compoundref="aps_8h" startline="49">wpan_envelope_t::source_endpoint</references>
        <references refid="group__wpan__aps_1gae5f88ed40bd334d963e261947b77b980" compoundref="wpan__aps_8c" startline="299" endline="339">wpan_conversation_register</references>
        <references refid="group__wpan__aps_1ga860a08927c4e6d7656281713186c43dd" compoundref="aps_8h" startline="111">WPAN_ENDPOINT_ZDO</references>
        <references refid="group__wpan__aps_1ga06f1e9e86b74ef807ded44b79b13e283" compoundref="wpan__aps_8c" startline="790" endline="810">wpan_envelope_send</references>
        <references refid="group__wpan__aps_1gabdbce33bdd976b65877a241842b73a20" compoundref="aps_8h" startline="80">WPAN_PROFILE_ZDO</references>
        <references refid="group__zdo_1gae1d68b13491e1e29493f412d984886e7" compoundref="zdo_8h" startline="37">ZDO_CONVERSATION_TIMEOUT</references>
        <references refid="group__zdo_1gaaf992619b06595291c2aead8a3d4dba1" compoundref="zigbee__zdo_8c" startline="82" endline="89">zdo_endpoint_state</references>
      </memberdef>
      <memberdef kind="function" id="group__zdo_1ga9c1afb2178cc3e3b515373c7e351fc02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>zigbee_zdo_debug int</type>
        <definition>zigbee_zdo_debug int _zdo_process_nwk_addr_resp</definition>
        <argsstring>(wpan_conversation_t FAR *conversation, const wpan_envelope_t FAR *envelope)</argsstring>
        <name>_zdo_process_nwk_addr_resp</name>
        <param>
          <type><ref refid="structwpan__conversation__t" kindref="compound">wpan_conversation_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>conversation</declname>
        </param>
        <param>
          <type>const <ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>envelope</declname>
        </param>
        <briefdescription>
<para>Callback function to process NWK_addr response frames. </para>        </briefdescription>
        <detaileddescription>
<internal><para>The <emphasis>context</emphasis> field of the conversation is the location to store the 16-bit address returned in the response.</para><para><simplesect kind="see"><para><ref refid="group__zdo_1ga40f076c190ab2390836687b8e1f705eb" kindref="member">zdo_send_nwk_addr_req()</ref> </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zigbee_zdo.c" line="982" column="1" bodyfile="src/zigbee/zigbee_zdo.c" bodystart="982" bodyend="1024"/>
        <references refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" compoundref="platform_8h" startline="370">FAR</references>
        <references refid="group___s_x_a_1ga4233297bd31be5c273d4fb0758cc54d7" compoundref="sxa_8h" startline="70">PACKED_STRUCT</references>
        <referencedby refid="group__zdo_1ga40f076c190ab2390836687b8e1f705eb" compoundref="zigbee__zdo_8c" startline="1028" endline="1070">zdo_send_nwk_addr_req</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__zdo_1ga40f076c190ab2390836687b8e1f705eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>zigbee_zdo_debug int</type>
        <definition>int zdo_send_nwk_addr_req</definition>
        <argsstring>(wpan_dev_t *dev, const addr64 FAR *ieee_be, uint16_t FAR *net)</argsstring>
        <name>zdo_send_nwk_addr_req</name>
        <param>
          <type><ref refid="structwpan__dev__t" kindref="compound">wpan_dev_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>const <ref refid="unionaddr64" kindref="compound">addr64</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>ieee_be</declname>
        </param>
        <param>
          <type><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>net</declname>
        </param>
        <briefdescription>
<para>Given a device&apos;s IEEE (64-bit) address, get its 16-bit network address by unicasting a ZDO NWK_addr request to it. </para>        </briefdescription>
        <detaileddescription>
<para>After calling this function, <computeroutput>*net</computeroutput> is set to ZDO_NET_ADDR_PENDING.</para><para>When a SUCCESS response comes back, <computeroutput>*net</computeroutput> is set to the 16-bit network address in the response.</para><para>When an ERROR response comes back, <computeroutput>*net</computeroutput> is set to ZDO_NET_ADDR_ERROR.</para><para>If a timeout occurs waiting for a response, <computeroutput>*net</computeroutput> is set to ZDO_NET_ADDR_TIMEOUT.</para><para>(So the caller needs to wait until (*net != ZDO_NET_ADDR_PENDING)).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structwpan__dev__t" kindref="compound">wpan_dev_t</ref> to send request </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ieee_be</parametername>
</parameternamelist>
<parameterdescription>
<para>IEEE address (in big-endian byte order) of device we&apos;re seeking a network address for </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">net</parametername>
</parameternamelist>
<parameterdescription>
<para>location to store the 16-bit network address when the NWK_addr response comes back.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>invalid parameter passed to function </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOSPC</parametername>
</parameternamelist>
<parameterdescription>
<para>conversation table is full, wait and try sending later </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>request sent </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!0</parametername>
</parameternamelist>
<parameterdescription>
<para>error trying to send request </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zigbee_zdo.c" line="1028" column="1" bodyfile="src/zigbee/zigbee_zdo.c" bodystart="1028" bodyend="1070"/>
        <references refid="group__zdo_1gae4b6736d215caf2a10790761ed52443d" compoundref="zigbee__zdo_8c" startline="110" endline="139">_zdo_envelope_create</references>
        <references refid="group__zdo_1ga9c1afb2178cc3e3b515373c7e351fc02" compoundref="zigbee__zdo_8c" startline="982" endline="1024">_zdo_process_nwk_addr_resp</references>
        <references refid="group__wpan__types_1gac468b40b060897498f923923654c3d4a" compoundref="types_8h" startline="49">ADDR64_STRING_LENGTH</references>
        <references refid="group__wpan__aps_1ga262a92f94287e77cb56350951893bae2" compoundref="aps_8h" startline="46">wpan_envelope_t::cluster_id</references>
        <references refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" compoundref="platform_8h" startline="95">EINVAL</references>
        <references refid="group__wpan__aps_1ga1892eba2086d12ac2b09005aeb09ea3b" compoundref="aps_8h" startline="62">wpan_envelope_t::length</references>
        <references refid="group__util__byteorder_1ga75cf1250c9f15ea3f0d87250c2b43a51" compoundref="byteorder_8h" startline="118">memcpy_betole</references>
        <references refid="group__wpan__aps_1ga8737375e27cb391ff381fff10dc0c132" compoundref="aps_8h" startline="61">wpan_envelope_t::payload</references>
        <references refid="group__wpan__aps_1gae5f88ed40bd334d963e261947b77b980" compoundref="wpan__aps_8c" startline="299" endline="339">wpan_conversation_register</references>
        <references refid="group__zdo_1gae1d68b13491e1e29493f412d984886e7" compoundref="zdo_8h" startline="37">ZDO_CONVERSATION_TIMEOUT</references>
        <references refid="group__zdo_1gaaf992619b06595291c2aead8a3d4dba1" compoundref="zigbee__zdo_8c" startline="82" endline="89">zdo_endpoint_state</references>
        <references refid="group__zdo_1ga1458b65a34a4f94893f5d0ba12a4f4d8" compoundref="zdo_8h" startline="120">ZDO_NWK_ADDR_REQ</references>
      </memberdef>
      <memberdef kind="function" id="group__zdo_1gad723bd899ccda9ec96f6226893c1335b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>zigbee_zdo_debug int</type>
        <definition>zigbee_zdo_debug int _zdo_process_ieee_addr_resp</definition>
        <argsstring>(wpan_conversation_t FAR *conversation, const wpan_envelope_t FAR *envelope)</argsstring>
        <name>_zdo_process_ieee_addr_resp</name>
        <param>
          <type><ref refid="structwpan__conversation__t" kindref="compound">wpan_conversation_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>conversation</declname>
        </param>
        <param>
          <type>const <ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>envelope</declname>
        </param>
        <briefdescription>
<para>Callback function to process IEEE_addr response frames. </para>        </briefdescription>
        <detaileddescription>
<internal><para>The <emphasis>context</emphasis> field of the conversation is the location to store the 64-bit address returned in the response.</para><para><simplesect kind="see"><para><ref refid="group__zdo_1ga4af5f8d70054f7883dbc1305e3a3f181" kindref="member">zdo_send_ieee_addr_req()</ref> </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zigbee_zdo.c" line="1083" column="1" bodyfile="src/zigbee/zigbee_zdo.c" bodystart="1083" bodyend="1130"/>
        <references refid="group__wpan__types_1gac468b40b060897498f923923654c3d4a" compoundref="types_8h" startline="49">ADDR64_STRING_LENGTH</references>
        <references refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" compoundref="platform_8h" startline="370">FAR</references>
        <references refid="group___s_x_a_1ga4233297bd31be5c273d4fb0758cc54d7" compoundref="sxa_8h" startline="70">PACKED_STRUCT</references>
        <referencedby refid="group__zdo_1ga4af5f8d70054f7883dbc1305e3a3f181" compoundref="zigbee__zdo_8c" startline="1134" endline="1173">zdo_send_ieee_addr_req</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__zdo_1ga4af5f8d70054f7883dbc1305e3a3f181" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>zigbee_zdo_debug int</type>
        <definition>int zdo_send_ieee_addr_req</definition>
        <argsstring>(wpan_dev_t *dev, uint16_t net_addr, addr64 FAR *ieee_be)</argsstring>
        <name>zdo_send_ieee_addr_req</name>
        <param>
          <type><ref refid="structwpan__dev__t" kindref="compound">wpan_dev_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref></type>
          <declname>net_addr</declname>
        </param>
        <param>
          <type><ref refid="unionaddr64" kindref="compound">addr64</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>ieee_be</declname>
        </param>
        <briefdescription>
<para>Given a device&apos;s 16-bit network address, get its IEEE (64-bit) address by unicasting a ZDO IEEE_addr request to it. </para>        </briefdescription>
        <detaileddescription>
<para>This function only works with the following XBee firmware versions:<itemizedlist>
<listitem><para>S2C: 401F and later (ZigBee), 5123 and later (Smart Energy)</para></listitem><listitem><para>S2[B]: not supported</para></listitem></itemizedlist>
</para><para>After calling this function, <computeroutput>*ieee_be</computeroutput> is set to *ZDO_IEEE_ADDR_PENDING.</para><para>When a SUCCESS response comes back, <computeroutput>*ieee_be</computeroutput> is set to the 64-bit IEEE address in the response.</para><para>If an ERROR response comes back, <computeroutput>*ieee_be</computeroutput> is set to all zeros (*ZDO_IEEE_ADDR_ERROR).</para><para>If a timeout occurs waiting for a response, <computeroutput>*ieee_be</computeroutput> is set to ZDO_IEEE_ADDR_TIMEOUT.</para><para><programlisting><codeline><highlight class="normal">addr64<sp/>ieee_be;<sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>IEEE<sp/>address<sp/>in<sp/>big-endian<sp/>byte<sp/>order</highlight></codeline>
<codeline><highlight class="normal">uint16_t<sp/>net_addr;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">printf(<sp/>&quot;Sending<sp/>IEEE_addr<sp/>request<sp/>for<sp/>0x%04X\n&quot;,<sp/>net_addr);</highlight></codeline>
<codeline><highlight class="normal">zdo_send_ieee_addr_req(<sp/>dev,<sp/>net_addr,<sp/>&amp;ieee_be);</highlight></codeline>
<codeline><highlight class="normal">do<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>wpan_tick(<sp/>dev);</highlight></codeline>
<codeline><highlight class="normal">}<sp/>while<sp/>(addr64_equal(<sp/>&amp;ieee_be,<sp/>ZDO_IEEE_ADDR_PENDING));</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">if<sp/>(addr64_equal(<sp/>&amp;ieee_be,<sp/>ZDO_IEEE_ADDR_TIMEOUT))</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>printf(<sp/>&quot;IEEE_addr<sp/>request<sp/>for<sp/>0x%04X<sp/>timed<sp/>out\n&quot;,<sp/>net_addr);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal">else<sp/>if<sp/>(addr64_is_zero(<sp/>&amp;ieee_be))</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>printf(<sp/>&quot;Error<sp/>retrieving<sp/>IEEE_addr<sp/>for<sp/>0x%04X\n&quot;,<sp/>net_addr);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal">else</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>printf(<sp/>&quot;IEEE<sp/>address<sp/>of<sp/>0x%04X<sp/>is<sp/>%&quot;<sp/>PRIsFAR<sp/>&quot;\n&quot;,<sp/>net_addr,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>addr64_format(<sp/>buffer,<sp/>&amp;ieee_be));</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structwpan__dev__t" kindref="compound">wpan_dev_t</ref> to send request </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">net_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>network address of device we&apos;re seeking an IEEE address for </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">ieee_be</parametername>
</parameternamelist>
<parameterdescription>
<para>location to store the 64-bit IEEE address when the IEEE_addr response comes back.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>invalid parameter passed to function </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOSPC</parametername>
</parameternamelist>
<parameterdescription>
<para>conversation table is full, wait and try sending later </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>request sent </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!0</parametername>
</parameternamelist>
<parameterdescription>
<para>error trying to send request </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zigbee_zdo.c" line="1134" column="1" bodyfile="src/zigbee/zigbee_zdo.c" bodystart="1134" bodyend="1173"/>
        <references refid="group__zdo_1gad723bd899ccda9ec96f6226893c1335b" compoundref="zigbee__zdo_8c" startline="1083" endline="1130">_zdo_process_ieee_addr_resp</references>
        <references refid="group__wpan__aps_1ga262a92f94287e77cb56350951893bae2" compoundref="aps_8h" startline="46">wpan_envelope_t::cluster_id</references>
        <references refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" compoundref="platform_8h" startline="95">EINVAL</references>
        <references refid="group__util__byteorder_1ga3ea73a6089f61223b225c46e2ba58a47" compoundref="byteorder_8h" startline="135">htole16</references>
        <references refid="group__wpan__aps_1ga1892eba2086d12ac2b09005aeb09ea3b" compoundref="aps_8h" startline="62">wpan_envelope_t::length</references>
        <references refid="group__wpan__aps_1ga8737375e27cb391ff381fff10dc0c132" compoundref="aps_8h" startline="61">wpan_envelope_t::payload</references>
        <references refid="group__wpan__aps_1gae5f88ed40bd334d963e261947b77b980" compoundref="wpan__aps_8c" startline="299" endline="339">wpan_conversation_register</references>
        <references refid="group__wpan__aps_1ga95e2bb4e4c546191c059f54179064fc3" compoundref="wpan__aps_8c" startline="712" endline="723">wpan_envelope_create</references>
        <references refid="group__wpan__types_1ga09e965ef6cfbfd48312d86bb011f125b" compoundref="types_8h" startline="79">WPAN_IEEE_ADDR_UNDEFINED</references>
        <references refid="group__zdo_1gae1d68b13491e1e29493f412d984886e7" compoundref="zdo_8h" startline="37">ZDO_CONVERSATION_TIMEOUT</references>
        <references refid="group__zdo_1gaaf992619b06595291c2aead8a3d4dba1" compoundref="zigbee__zdo_8c" startline="82" endline="89">zdo_endpoint_state</references>
        <references refid="group__zdo_1ga912ec46cfce0729c06fa48e6298cb20f" compoundref="zdo_8h" startline="178">ZDO_IEEE_ADDR_REQ</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>ZigBee Device Objects (ZDO) and ZigBee Device Profile (ZDP). </para>    </briefdescription>
    <detaileddescription>
<para>Note that ZigBee firmware needs to have ATAO set to 3 (or &quot;not 1&quot;) in order to receive the Simple Descriptor, Active Endpoints and Match Descriptor requests. We assume that the Ember stack handles responses to those requests for our children devies, and will only pass requests up for our device to respond to.</para><para><xrefsect id="todo_1_todo000023"><xreftitle>Todo</xreftitle><xrefdescription><para>Create a cluster table and have the <ref refid="group__zdo_1gaef7118e478f5ad9949dcd23f6e0901c9" kindref="member">ZDO_ENDPOINT()</ref> macro use it instead of having zdo_handler use a switch on cluster_id to call the handlers for each command. </para></xrefdescription></xrefsect></para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2010-2012<sp/>Digi<sp/>International<sp/>Inc.,</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>not<sp/>expressly<sp/>granted<sp/>are<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>Source<sp/>Code<sp/>Form<sp/>is<sp/>subject<sp/>to<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>Mozilla<sp/>Public</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>License,<sp/>v.<sp/>2.0.<sp/>If<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>MPL<sp/>was<sp/>not<sp/>distributed<sp/>with<sp/>this<sp/>file,</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>You<sp/>can<sp/>obtain<sp/>one<sp/>at<sp/>http://mozilla.org/MPL/2.0/.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>Digi<sp/>International<sp/>Inc.<sp/>11001<sp/>Bren<sp/>Road<sp/>East,<sp/>Minnetonka,<sp/>MN<sp/>55343</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>=======================================================================</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="comment">/***<sp/>BeginHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="platform_8h" kindref="compound">xbee/platform.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="aps_8h" kindref="compound">wpan/aps.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="byteorder_8h" kindref="compound">xbee/byteorder.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="zdo_8h" kindref="compound">zigbee/zdo.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__DC__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>zigbee_zdo_debug</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>ZIGBEE_ZDO_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>zigbee_zdo_debug<sp/><sp/><sp/>__debug</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>zigbee_zdo_debug<sp/><sp/><sp/>__nodebug</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>maximum<sp/>number<sp/>of<sp/>endpoints;<sp/>arbitrarily<sp/>selected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZDO_MAX_ENDPOINTS<sp/><sp/>20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>_zdo_endpoint_of<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwpan__endpoint__table__entry__t" kindref="compound">wpan_endpoint_table_entry_t</ref><sp/>*<ref refid="group__zdo_1gab405baf051b6c2b3c85bc4e80aa5c2bb" kindref="member">_zdo_endpoint_of</ref>(<sp/><ref refid="structwpan__dev__t" kindref="compound">wpan_dev_t</ref><sp/>*dev);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight></codeline>
<codeline lineno="64"><highlight class="normal">zigbee_zdo_debug</highlight></codeline>
<codeline lineno="65" refid="group__zdo_1gab405baf051b6c2b3c85bc4e80aa5c2bb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwpan__endpoint__table__entry__t" kindref="compound">wpan_endpoint_table_entry_t</ref><sp/>*<ref refid="group__zdo_1gab405baf051b6c2b3c85bc4e80aa5c2bb" kindref="member">_zdo_endpoint_of</ref>(<sp/><ref refid="structwpan__dev__t" kindref="compound">wpan_dev_t</ref><sp/>*dev)</highlight></codeline>
<codeline lineno="66"><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__wpan__aps_1ga0a88c1b17d1f9a42a53668b14f15e205" kindref="member">wpan_endpoint_match</ref>(<sp/>dev,<sp/><ref refid="group__wpan__aps_1ga860a08927c4e6d7656281713186c43dd" kindref="member">WPAN_ENDPOINT_ZDO</ref>,<sp/><ref refid="group__wpan__aps_1gabdbce33bdd976b65877a241842b73a20" kindref="member">WPAN_PROFILE_ZDO</ref>);</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>zdo_endpoint_state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight></codeline>
<codeline lineno="81"><highlight class="normal">zigbee_zdo_debug</highlight></codeline>
<codeline lineno="82" refid="group__zdo_1gaaf992619b06595291c2aead8a3d4dba1" refkind="member"><highlight class="normal"><ref refid="structwpan__ep__state__t" kindref="compound">wpan_ep_state_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*<ref refid="group__zdo_1gaaf992619b06595291c2aead8a3d4dba1" kindref="member">zdo_endpoint_state</ref>(<sp/><ref refid="structwpan__dev__t" kindref="compound">wpan_dev_t</ref><sp/>*dev)</highlight></codeline>
<codeline lineno="83"><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwpan__endpoint__table__entry__t" kindref="compound">wpan_endpoint_table_entry_t</ref><sp/>*ep;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/>ep<sp/>=<sp/><ref refid="group__zdo_1gab405baf051b6c2b3c85bc4e80aa5c2bb" kindref="member">_zdo_endpoint_of</ref>(<sp/>dev);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ep<sp/>?<sp/>ep-&gt;<ref refid="group__wpan__aps_1ga389966cb276b33004b14ee698c270347" kindref="member">ep_state</ref><sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>_zdo_envelope_create<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unionaddr64" kindref="compound">addr64</ref><sp/>*<ref refid="group__zdo_1gae4b6736d215caf2a10790761ed52443d" kindref="member">_zdo_envelope_create</ref>(<sp/><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref><sp/>*envelope,<sp/><ref refid="structwpan__dev__t" kindref="compound">wpan_dev_t</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unionaddr64" kindref="compound">addr64</ref><sp/>*address);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight></codeline>
<codeline lineno="109"><highlight class="normal">zigbee_zdo_debug</highlight></codeline>
<codeline lineno="110" refid="group__zdo_1gae4b6736d215caf2a10790761ed52443d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unionaddr64" kindref="compound">addr64</ref><sp/>*<ref refid="group__zdo_1gae4b6736d215caf2a10790761ed52443d" kindref="member">_zdo_envelope_create</ref>(<sp/><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref><sp/>*envelope,<sp/><ref refid="structwpan__dev__t" kindref="compound">wpan_dev_t</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unionaddr64" kindref="compound">addr64</ref><sp/>*address)</highlight></codeline>
<codeline lineno="112"><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(envelope<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>address<sp/>?<sp/>address<sp/>:<sp/><ref refid="group__wpan__types_1ga014f9d0857312b6a7f80ee10ecfd0935" kindref="member">WPAN_IEEE_ADDR_ALL_ZEROS</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(address)<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>send<sp/>request<sp/>to<sp/>the<sp/>given<sp/>target<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wpan__aps_1ga95e2bb4e4c546191c059f54179064fc3" kindref="member">wpan_envelope_create</ref>(<sp/>envelope,<sp/>dev,<sp/>address,<sp/><ref refid="group__wpan__types_1ga1674d7b825e528a482725d1c06b02c10" kindref="member">WPAN_NET_ADDR_UNDEFINED</ref>);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>self-addressed<sp/>request</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wpan__aps_1ga95e2bb4e4c546191c059f54179064fc3" kindref="member">wpan_envelope_create</ref>(<sp/>envelope,<sp/>dev,<sp/>&amp;dev-&gt;<ref refid="group__wpan__aps_1ga66a58a737aee9733019399e2eceabf4a" kindref="member">address</ref>.ieee,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev-&gt;<ref refid="group__wpan__aps_1ga66a58a737aee9733019399e2eceabf4a" kindref="member">address</ref>.network);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>address<sp/>=<sp/><ref refid="group__wpan__types_1ga014f9d0857312b6a7f80ee10ecfd0935" kindref="member">WPAN_IEEE_ADDR_ALL_ZEROS</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wpan_envelope_create<sp/>leaves<sp/>profile<sp/>and<sp/>endpoints<sp/>set<sp/>to<sp/>0.<sp/><sp/>Only<sp/>need</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>change<sp/>them<sp/>if<sp/>the<sp/>ZDO<sp/>endpoint/profile<sp/>is<sp/>non-zero<sp/>(which<sp/>it<sp/>isn&apos;t).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#if<sp/>WPAN_PROFILE_ZDO<sp/>!=<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>envelope-&gt;<ref refid="group__wpan__aps_1ga5ca7f19e5697de2baf0e2147a41a5792" kindref="member">profile_id</ref><sp/>=<sp/><ref refid="group__wpan__aps_1gabdbce33bdd976b65877a241842b73a20" kindref="member">WPAN_PROFILE_ZDO</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#if<sp/>WPAN_ENDPOINT_ZDO<sp/>!=<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>envelope-&gt;<ref refid="group__wpan__aps_1ga9781a5a281ee97f7f67d8ebe2c4f54db" kindref="member">source_endpoint</ref><sp/>=<sp/>envelope-&gt;<ref refid="group__wpan__aps_1ga0992896b3999455a300e8ba25c368ae8" kindref="member">dest_endpoint</ref><sp/>=<sp/><ref refid="group__wpan__aps_1ga860a08927c4e6d7656281713186c43dd" kindref="member">WPAN_ENDPOINT_ZDO</ref>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>address;</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>zdo_send_response<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight></codeline>
<codeline lineno="159"><highlight class="normal">zigbee_zdo_debug</highlight></codeline>
<codeline lineno="160" refid="group__zdo_1ga1d645805a731e1419b5012a5c8a09bf8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__zdo_1ga1d645805a731e1419b5012a5c8a09bf8" kindref="member">zdo_send_response</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*request,</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*response,<sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/><ref refid="group__zdo_1gab2b3adeb2a67e656ff030b56727fd0ac" kindref="member">length</ref>)</highlight></codeline>
<codeline lineno="162"><highlight class="normal">{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref><sp/>reply_envelope;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>address<sp/>envelope<sp/>of<sp/>reply,<sp/>handles<sp/>NULL<sp/>request</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/>retval<sp/>=<sp/><ref refid="group__wpan__aps_1gaaaee02ff456d4f6103a5e94c2ba106c5" kindref="member">wpan_envelope_reply</ref>(<sp/>&amp;reply_envelope,<sp/>request);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retval<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZDO_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>sending<sp/>%u-byte<sp/>response\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>length);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__util_1gaa321236a0cb6f4e0dad592fdf1b550d2" kindref="member">hex_dump</ref>(<sp/>response,<sp/>length,<sp/><ref refid="group__hal_1ga696f6553e33cbd20eda34e220ec9939a" kindref="member">HEX_DUMP_FLAG_TAB</ref>);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/>reply_envelope.<ref refid="group__wpan__aps_1ga8737375e27cb391ff381fff10dc0c132" kindref="member">payload</ref><sp/>=<sp/>response;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/>reply_envelope.<ref refid="group__wpan__aps_1ga1892eba2086d12ac2b09005aeb09ea3b" kindref="member">length</ref><sp/>=<sp/><ref refid="group__zdo_1gab2b3adeb2a67e656ff030b56727fd0ac" kindref="member">length</ref>;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/>reply_envelope.<ref refid="group__wpan__aps_1ga262a92f94287e77cb56350951893bae2" kindref="member">cluster_id</ref><sp/>|=<sp/><ref refid="group__zdo_1ga79de2096f8f5c8c313ad1c963a0c81e5" kindref="member">ZDO_CLUST_RESPONSE_MASK</ref>;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__wpan__aps_1ga06f1e9e86b74ef807ded44b79b13e283" kindref="member">wpan_envelope_send</ref>(<sp/>&amp;reply_envelope);</highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>zdo_match_desc_request<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight></codeline>
<codeline lineno="199" refid="group__zdo_1ga1a65d88af9f0c9906d548aa1ff2586f7" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__zdo_1ga1a65d88af9f0c9906d548aa1ff2586f7" kindref="member">_match_desc_cluster_list</ref>(<sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/>**buffer,</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/>*clust_read,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_count)</highlight></codeline>
<codeline lineno="201"><highlight class="normal">{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/>uint_fast8_t<sp/><sp/><sp/>written<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*clust_write_le;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/>clust_write_le<sp/>=<sp/>(<ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/>*)<sp/>(*buffer<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clust_read<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*clust_read<sp/>!=<sp/><ref refid="group__wpan__aps_1gacbfdff1cef70167f178c4e05b69f65fe" kindref="member">WPAN_CLUSTER_END_OF_LIST</ref>)</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++written<sp/>&gt;<sp/>max_count)</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__hal_1ga088abe8bad2df798edad3053d719b937" kindref="member">ENOSPC</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>enough<sp/>room<sp/>for<sp/>cluster<sp/>ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*clust_write_le++<sp/>=<sp/><ref refid="group__util__byteorder_1ga3ea73a6089f61223b225c46e2ba58a47" kindref="member">htole16</ref>(<sp/>*clust_read++);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/>**buffer<sp/>=<sp/>(<ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref>)<sp/>written;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>count<sp/>at<sp/>start<sp/>of<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/>*buffer<sp/>=<sp/>(<ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/>*)<sp/>clust_write_le;<sp/><sp/></highlight><highlight class="comment">//<sp/>point<sp/>past<sp/>end<sp/>of<sp/>clusters<sp/>written</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>written;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>clusters<sp/>written</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal">zigbee_zdo_debug</highlight></codeline>
<codeline lineno="247" refid="group__zdo_1ga5746efffb4b90718eb973796f2b4bb41" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__zdo_1ga5746efffb4b90718eb973796f2b4bb41" kindref="member">zdo_match_desc_request</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buffer,<sp/><ref refid="group__hal__dos_1ga2140805d08462d474b82ddc8d1c2f3e6" kindref="member">int16_t</ref><sp/>buflen,</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/>addr_of_interest,<sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/>profile_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/>*inClust,</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/>*outClust)</highlight></codeline>
<codeline lineno="250"><highlight class="normal">{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><ref refid="group___s_x_a_1ga4233297bd31be5c273d4fb0758cc54d7" kindref="member">PACKED_STRUCT</ref><sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><sp/><sp/><sp/><sp/>transaction;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/><sp/><sp/><sp/><ref refid="group__zdo_1gaa7b6adb5a5b6441e4f669337f4ef61e5" kindref="member">network_addr_le</ref>;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/><sp/><sp/><sp/><ref refid="group__zdo_1ga9f7e601c7386ae55f5e6d5ec558af125" kindref="member">profile_id_le</ref>;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/>}<sp/>*request;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*clusters;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_count;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buffer<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>space<sp/>for<sp/>response,<sp/>input<sp/>count,<sp/>output<sp/>count<sp/>and<sp/>at<sp/>least<sp/>1<sp/>cluster</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buflen<sp/>&lt;<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*request<sp/>+<sp/>2<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref>)))</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__hal_1ga088abe8bad2df798edad3053d719b937" kindref="member">ENOSPC</ref>;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Can<sp/>fit<sp/>a<sp/>maximum<sp/>of<sp/>this<sp/>many<sp/>clusters<sp/>in<sp/>the<sp/>response<sp/>(deduct<sp/>space<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>header,<sp/>count<sp/>of<sp/>input<sp/>clusters,<sp/>and<sp/>count<sp/>of<sp/>output<sp/>clusters).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/>max_count<sp/>=<sp/>(buflen<sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*request<sp/>-<sp/>2)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref>);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/>request<sp/>=<sp/>buffer;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/>request-&gt;network_addr_le<sp/>=<sp/><ref refid="group__util__byteorder_1ga3ea73a6089f61223b225c46e2ba58a47" kindref="member">htole16</ref>(<sp/>addr_of_interest);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/>request-&gt;profile_id_le<sp/>=<sp/><ref refid="group__util__byteorder_1ga3ea73a6089f61223b225c46e2ba58a47" kindref="member">htole16</ref>(<sp/>profile_id);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/>clusters<sp/>=<sp/>((<ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/>*)buffer)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*request);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/>retval<sp/>=<sp/><ref refid="group__zdo_1ga1a65d88af9f0c9906d548aa1ff2586f7" kindref="member">_match_desc_cluster_list</ref>(<sp/>&amp;clusters,<sp/>inClust,<sp/>max_count);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retval<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>max_count<sp/>-=<sp/>retval;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/><ref refid="group__zdo_1ga1a65d88af9f0c9906d548aa1ff2586f7" kindref="member">_match_desc_cluster_list</ref>(<sp/>&amp;clusters,<sp/>outClust,<sp/>max_count);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retval<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>clusters<sp/>-<sp/>(<ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/>*)buffer;</highlight></codeline>
<codeline lineno="292"><highlight class="normal">}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>_zdo_match_desc_respond<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__zdo_1ga41d93e5e12d9ed4e18d092fe3af779a2" kindref="member">_zdo_match_desc_respond</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*envelope);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__XBEE_PLATFORM_HCS08</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#pragma<sp/>MESSAGE<sp/>DISABLE<sp/>C5909<sp/><sp/><sp/><sp/>//<sp/>Assignment<sp/>in<sp/>condition<sp/>is<sp/>OK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal">zigbee_zdo_debug</highlight></codeline>
<codeline lineno="316" refid="group__zdo_1ga41d93e5e12d9ed4e18d092fe3af779a2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__zdo_1ga41d93e5e12d9ed4e18d092fe3af779a2" kindref="member">_zdo_match_desc_respond</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*envelope)</highlight></codeline>
<codeline lineno="317"><highlight class="normal">{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwpan__endpoint__table__entry__t" kindref="compound">wpan_endpoint_table_entry_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ep;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__zdo_1gac4eb6edc67f4b6c7cfb7b876f86c7316" kindref="member">zdo_match_desc_req_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*req;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/>profile_id;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>used<sp/>to<sp/>walk<sp/>in/out<sp/>clusters<sp/>in<sp/>request</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*count;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*cluster_le;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/>}<sp/>p;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/>mask;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/>uint_fast8_t<sp/><ref refid="group__zcl_1ga1d127017fb298b889f4ba24752d08b8e" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/>uint_fast8_t<sp/>count;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1ga04dd5074964518403bf944f2b240a5f8" kindref="member">bool_t</ref><sp/>search;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>used<sp/>to<sp/>build<sp/>response</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><ref refid="group___s_x_a_1ga4233297bd31be5c273d4fb0758cc54d7" kindref="member">PACKED_STRUCT</ref><sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transaction;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zdo_1ga92bab7ada78e3865e606ce81bb610935" kindref="member">zdo_match_desc_rsp_header_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>header;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endpoints[ZDO_MAX_ENDPOINTS];</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/>}<sp/>rsp;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/>*match_list;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(envelope<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>we<sp/>know<sp/>our<sp/>16-bit<sp/>network<sp/>address<sp/>before<sp/>responding.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(envelope-&gt;dev-&gt;address.network<sp/>==<sp/><ref refid="group__wpan__types_1ga1674d7b825e528a482725d1c06b02c10" kindref="member">WPAN_NET_ADDR_UNDEFINED</ref>)</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZDO_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>ignoring<sp/>request;<sp/>don&apos;t<sp/>know<sp/>my<sp/>address\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__hal_1ga0030614bc864d1b24eaedd71585acc27" kindref="member">ENODATA</ref>;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZDO_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>%u-byte<sp/>request:\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>envelope-&gt;length);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__util_1gaa321236a0cb6f4e0dad592fdf1b550d2" kindref="member">hex_dump</ref>(<sp/>envelope-&gt;payload,<sp/>envelope-&gt;length,<sp/><ref refid="group__hal_1ga696f6553e33cbd20eda34e220ec9939a" kindref="member">HEX_DUMP_FLAG_TAB</ref>);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/>req<sp/>=<sp/>envelope-&gt;payload;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/>match_list<sp/>=<sp/>rsp.endpoints;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/>profile_id<sp/>=<sp/><ref refid="group__util__byteorder_1ga684a5d26d1989cbd925e97292cc81c72" kindref="member">le16toh</ref>(<sp/>req-&gt;profile_id_le);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Loop<sp/>through<sp/>endpoints<sp/>for<sp/>this<sp/>device,<sp/>looking<sp/>for<sp/>matching<sp/>profiles.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/>ep<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>(ep<sp/>=<sp/><ref refid="group__wpan__aps_1gaca3b72047ea4e156ce9a977c13624b5c" kindref="member">wpan_endpoint_get_next</ref>(<sp/>envelope-&gt;dev,<sp/>ep))<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ep-&gt;<ref refid="group__wpan__aps_1ga7d397493728da2bca8d55b2d61c4ec5d" kindref="member">endpoint</ref><sp/>!=<sp/><ref refid="group__wpan__aps_1ga860a08927c4e6d7656281713186c43dd" kindref="member">WPAN_ENDPOINT_ZDO</ref><sp/>&amp;&amp;<sp/>ep-&gt;<ref refid="group__wpan__aps_1ga5ca7f19e5697de2baf0e2147a41a5792" kindref="member">profile_id</ref><sp/>==<sp/>profile_id)</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>search<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.count<sp/>=<sp/>&amp;req-&gt;num_in_clusters;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Search<sp/>the<sp/>list<sp/>of<sp/>input<sp/>clusters<sp/>and<sp/>then<sp/>output<sp/>clusters<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>request,<sp/>attempting<sp/>to<sp/>match<sp/>each<sp/>one<sp/>to<sp/>each<sp/>of<sp/>the<sp/>clusters<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>endpoint.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>loop<sp/>twice,<sp/>first<sp/>with<sp/>FLAG_INPUT,<sp/>then<sp/>with<sp/>FLAG_OUTPUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(mask<sp/>=<sp/><ref refid="group__wpan__aps_1ga2024b5d21c6f8c2f151cc2b0576c08f4" kindref="member">WPAN_CLUST_FLAG_INPUT</ref>,<sp/>type<sp/>=<sp/>2;<sp/>type<sp/>&amp;&amp;<sp/>search;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>=<sp/><ref refid="group__wpan__aps_1ga0456c33bdaa673f37f9285a3f5ca0172" kindref="member">WPAN_CLUST_FLAG_OUTPUT</ref>,<sp/>--<ref refid="group__zcl_1ga1d127017fb298b889f4ba24752d08b8e" kindref="member">type</ref>)</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>=<sp/>*p.count++;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(search<sp/>&amp;&amp;<sp/>count--)</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__wpan__aps_1ga1c725384b21faf5953683d7b028c7be3" kindref="member">wpan_cluster_match</ref>(<sp/><ref refid="group__util__byteorder_1ga684a5d26d1989cbd925e97292cc81c72" kindref="member">le16toh</ref>(<sp/>*p.cluster_le++),<sp/>mask,</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ep-&gt;<ref refid="group__wpan__aps_1gac7944498524739a9becec626bf9bcb15" kindref="member">cluster_table</ref>))</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZDO_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>endpoint<sp/>0x%02x<sp/>matched\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ep-&gt;<ref refid="group__wpan__aps_1ga7d397493728da2bca8d55b2d61c4ec5d" kindref="member">endpoint</ref>);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*match_list++<sp/>=<sp/>ep-&gt;<ref refid="group__wpan__aps_1ga7d397493728da2bca8d55b2d61c4ec5d" kindref="member">endpoint</ref>;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>search<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/>rsp.header.match_length<sp/>=<sp/>(<ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref>)<sp/>(match_list<sp/>-<sp/>rsp.endpoints);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rsp.header.match_length)</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rsp.transaction<sp/>=<sp/>req-&gt;transaction;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rsp.header.status<sp/>=<sp/>ZDO_STATUS_SUCCESS;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rsp.header.network_addr_le<sp/>=<sp/><ref refid="group__util__byteorder_1ga3ea73a6089f61223b225c46e2ba58a47" kindref="member">htole16</ref>(<sp/>envelope-&gt;dev-&gt;address.network);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Unicast<sp/>to<sp/>the<sp/>originator<sp/>of<sp/>the<sp/>MATCH_DESC_REQ<sp/>command.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__zdo_1ga1d645805a731e1419b5012a5c8a09bf8" kindref="member">zdo_send_response</ref>(<sp/>envelope,<sp/>&amp;rsp,<sp/>match_list<sp/>-<sp/>(<ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/>*)&amp;rsp);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZDO_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>ignoring<sp/>MATCH<sp/>DESC,<sp/>no<sp/>matching<sp/>endpoints\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="412"><highlight class="normal">}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__XBEE_PLATFORM_HCS08</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#pragma<sp/>MESSAGE<sp/>DEFAULT<sp/>C5909<sp/><sp/><sp/><sp/>//<sp/>restore<sp/>C5909<sp/>(Assignment<sp/>in<sp/>condition)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>zdo_simple_desc_request<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="comment">//<sp/>documented<sp/>in<sp/>zigbee/zdo.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal">zigbee_zdo_debug</highlight></codeline>
<codeline lineno="422" refid="group__zdo_1gafbbece379bc09af360099d1e0825d507" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__zdo_1gafbbece379bc09af360099d1e0825d507" kindref="member">zdo_simple_desc_request</ref>(<sp/><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref><sp/>*envelope,</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/>addr_of_interest,<sp/>uint_fast8_t<sp/><ref refid="group__zdo_1ga7d397493728da2bca8d55b2d61c4ec5d" kindref="member">endpoint</ref>,</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__wpan__aps_1gabf0a6b85c9ff3ff9104c8b58c1436d72" kindref="member">wpan_response_fn</ref><sp/>callback,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*context)</highlight></codeline>
<codeline lineno="425"><highlight class="normal">{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__zdo_1gaa612a19982dc0c39d207a0662e8a0761" kindref="member">zdo_simple_desc_req_t</ref><sp/>zdo;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(envelope<sp/>==<sp/>NULL<sp/>||<sp/>endpoint<sp/>==<sp/>0<sp/>||<sp/>endpoint<sp/>==<sp/>255)</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/>retval<sp/>=<sp/><ref refid="group__wpan__aps_1gae5f88ed40bd334d963e261947b77b980" kindref="member">wpan_conversation_register</ref>(<sp/><ref refid="group__zdo_1gaaf992619b06595291c2aead8a3d4dba1" kindref="member">zdo_endpoint_state</ref>(<sp/>envelope-&gt;<ref refid="group__wpan__aps_1ga7f9a38312b9025348d42a4ed0042ce37" kindref="member">dev</ref>),</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>callback,<sp/>context,<sp/><ref refid="group__zdo_1gae1d68b13491e1e29493f412d984886e7" kindref="member">ZDO_CONVERSATION_TIMEOUT</ref>);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retval<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/>zdo.transaction<sp/>=<sp/>(<ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref>)<sp/>retval;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/>zdo.network_addr_le<sp/>=<sp/><ref refid="group__util__byteorder_1ga3ea73a6089f61223b225c46e2ba58a47" kindref="member">htole16</ref>(<sp/>addr_of_interest);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/>zdo.endpoint<sp/>=<sp/><ref refid="group__zdo_1ga7d397493728da2bca8d55b2d61c4ec5d" kindref="member">endpoint</ref>;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wpan_envelope_create<sp/>leaves<sp/>profile<sp/>and<sp/>endpoints<sp/>set<sp/>to<sp/>0.<sp/><sp/>Only<sp/>need</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>change<sp/>them<sp/>if<sp/>the<sp/>ZDO<sp/>endpoint/profile<sp/>is<sp/>non-zero<sp/>(which<sp/>it<sp/>isn&apos;t).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#if<sp/>WPAN_PROFILE_ZDO<sp/>!=<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>envelope-&gt;<ref refid="group__wpan__aps_1ga5ca7f19e5697de2baf0e2147a41a5792" kindref="member">profile_id</ref><sp/>=<sp/><ref refid="group__wpan__aps_1gabdbce33bdd976b65877a241842b73a20" kindref="member">WPAN_PROFILE_ZDO</ref>;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#if<sp/>WPAN_ENDPOINT_ZDO<sp/>!=<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>envelope-&gt;<ref refid="group__wpan__aps_1ga9781a5a281ee97f7f67d8ebe2c4f54db" kindref="member">source_endpoint</ref><sp/>=<sp/>envelope-&gt;<ref refid="group__wpan__aps_1ga0992896b3999455a300e8ba25c368ae8" kindref="member">dest_endpoint</ref><sp/>=<sp/><ref refid="group__wpan__aps_1ga860a08927c4e6d7656281713186c43dd" kindref="member">WPAN_ENDPOINT_ZDO</ref>;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/>envelope-&gt;<ref refid="group__wpan__aps_1ga262a92f94287e77cb56350951893bae2" kindref="member">cluster_id</ref><sp/>=<sp/><ref refid="group__zdo_1ga273177b195b871fe08bb7e5cab487141" kindref="member">ZDO_SIMPLE_DESC_REQ</ref>;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/>envelope-&gt;<ref refid="group__wpan__aps_1ga8737375e27cb391ff381fff10dc0c132" kindref="member">payload</ref><sp/>=<sp/>&amp;zdo;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/>envelope-&gt;<ref refid="group__wpan__aps_1ga1892eba2086d12ac2b09005aeb09ea3b" kindref="member">length</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>zdo;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/>retval<sp/>=<sp/><ref refid="group__wpan__aps_1ga06f1e9e86b74ef807ded44b79b13e283" kindref="member">wpan_envelope_send</ref>(<sp/>envelope);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/>envelope-&gt;<ref refid="group__wpan__aps_1ga8737375e27cb391ff381fff10dc0c132" kindref="member">payload</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/>envelope-&gt;<ref refid="group__wpan__aps_1ga1892eba2086d12ac2b09005aeb09ea3b" kindref="member">length</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="464"><highlight class="normal">}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>_zdo_simple_desc_respond<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__zdo_1gaa70aa4bcb14a98c69e7a54a9971ea194" kindref="member">_zdo_simple_desc_respond</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*envelope);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight></codeline>
<codeline lineno="483" refid="group__zdo_1ga558539813d6a9c8813eeae855e77385f" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__zdo_1ga558539813d6a9c8813eeae855e77385f" kindref="member">_simple_desc_cluster_list</ref>(<sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/>**buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_count,</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/>mask,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwpan__cluster__table__entry__t" kindref="compound">wpan_cluster_table_entry_t</ref><sp/>*entry)</highlight></codeline>
<codeline lineno="485"><highlight class="normal">{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/>*cluster_le;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>start<sp/>writing<sp/>clusters<sp/>after<sp/>&lt;count&gt;<sp/>byte<sp/>in<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/>cluster_le<sp/>=<sp/>(<ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/>*)(*buffer<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(entry<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>;<sp/>entry-&gt;<ref refid="group__wpan__aps_1ga262a92f94287e77cb56350951893bae2" kindref="member">cluster_id</ref><sp/>!=<sp/><ref refid="group__wpan__aps_1gacbfdff1cef70167f178c4e05b69f65fe" kindref="member">WPAN_CLUSTER_END_OF_LIST</ref>;<sp/>++entry)</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(entry-&gt;<ref refid="group__wpan__aps_1gaa2585d779da0ab21273a8d92de9a0ebe" kindref="member">flags</ref><sp/>&amp;<sp/>mask)</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++count<sp/>&gt;<sp/>max_count)</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__hal_1ga088abe8bad2df798edad3053d719b937" kindref="member">ENOSPC</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>enough<sp/>room<sp/>to<sp/>store<sp/>the<sp/>cluster</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*cluster_le++<sp/>=<sp/><ref refid="group__util__byteorder_1ga3ea73a6089f61223b225c46e2ba58a47" kindref="member">htole16</ref>(<sp/>entry-&gt;<ref refid="group__wpan__aps_1ga262a92f94287e77cb56350951893bae2" kindref="member">cluster_id</ref>);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/>**buffer<sp/>=<sp/>(<ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref>)<sp/>count;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>count<sp/>in<sp/>first<sp/>byte<sp/>of<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/>*buffer<sp/>=<sp/>(<ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/>*)<sp/>cluster_le;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>point<sp/>past<sp/>entries<sp/>written<sp/>to<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>entries<sp/>written<sp/>to<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal">}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal">zigbee_zdo_debug</highlight></codeline>
<codeline lineno="526" refid="group__zdo_1gaa70aa4bcb14a98c69e7a54a9971ea194" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__zdo_1gaa70aa4bcb14a98c69e7a54a9971ea194" kindref="member">_zdo_simple_desc_respond</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*envelope)</highlight></codeline>
<codeline lineno="527"><highlight class="normal">{</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__zdo_1gaa612a19982dc0c39d207a0662e8a0761" kindref="member">zdo_simple_desc_req_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/><sp/><sp/>*req;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwpan__endpoint__table__entry__t" kindref="compound">wpan_endpoint_table_entry_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>*ep<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/>*buffer;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><ref refid="group___s_x_a_1ga4233297bd31be5c273d4fb0758cc54d7" kindref="member">PACKED_STRUCT</ref><sp/>_response<sp/>{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transaction;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zdo_1gaee853401cb00e58396b01015a1713f3b" kindref="member">zdo_simple_desc_resp_header_t</ref><sp/><sp/><sp/><sp/>header;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zdo_1ga2fcb208122b12b93deec95fa934cf40d" kindref="member">zdo_simple_desc_header_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptor;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clusters[80];</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/>}<sp/>rsp;</highlight></codeline>
<codeline lineno="540"><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>MAX_CLUSTERS<sp/>((sizeof<sp/>rsp.clusters<sp/>-<sp/>2)<sp/>/<sp/>sizeof(uint16_t))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(envelope<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>we<sp/>know<sp/>our<sp/>16-bit<sp/>network<sp/>address<sp/>before<sp/>responding.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(envelope-&gt;dev-&gt;address.network<sp/>==<sp/><ref refid="group__wpan__types_1ga1674d7b825e528a482725d1c06b02c10" kindref="member">WPAN_NET_ADDR_UNDEFINED</ref>)</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZDO_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>ignoring<sp/>request;<sp/>don&apos;t<sp/>know<sp/>my<sp/>address\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__hal_1ga0030614bc864d1b24eaedd71585acc27" kindref="member">ENODATA</ref>;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/>req<sp/>=<sp/>envelope-&gt;payload;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/>rsp.descriptor.endpoint<sp/>=<sp/>req-&gt;endpoint;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZDO_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>request<sp/>for<sp/>endpoint<sp/>0x%02X:\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rsp.descriptor.endpoint);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/>rsp.transaction<sp/>=<sp/>req-&gt;transaction;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/>rsp.header.network_addr_le<sp/>=<sp/><ref refid="group__util__byteorder_1ga3ea73a6089f61223b225c46e2ba58a47" kindref="member">htole16</ref>(<sp/>envelope-&gt;dev-&gt;address.network);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/>rsp.header.length<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/>rsp.header.status<sp/>=<sp/>ZDO_STATUS_SUCCESS;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>053474r18<sp/>2.4.4.1.5.1:<sp/>&quot;If<sp/>the<sp/>endpoint<sp/>field<sp/>...<sp/>does<sp/>not<sp/>fall<sp/>within</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>correct<sp/>range<sp/>specified<sp/>in<sp/>Table<sp/>2.49,<sp/>the<sp/>remote<sp/>device<sp/>shall<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>Status<sp/>field<sp/>to<sp/>INVALID_EP,<sp/>set<sp/>the<sp/>Length<sp/>field<sp/>to<sp/>0<sp/>and<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>include<sp/>the<sp/>SimpleDescriptor<sp/>field.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rsp.descriptor.endpoint<sp/>==<sp/>0<sp/>||<sp/>rsp.descriptor.endpoint<sp/>==<sp/>255)</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rsp.header.status<sp/>=<sp/>ZDO_STATUS_INVALID_EP;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZDO_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>responding<sp/>with<sp/>%s<sp/>for<sp/>ep<sp/>0x%02x\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__,<sp/></highlight><highlight class="stringliteral">&quot;INVALID_EP&quot;</highlight><highlight class="normal">,<sp/>rsp.descriptor.endpoint);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>endpoint<sp/>is<sp/>valid,<sp/>but<sp/>is<sp/>it<sp/>active<sp/>on<sp/>this<sp/>device?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ep<sp/>=<sp/><ref refid="group__wpan__aps_1ga0a88c1b17d1f9a42a53668b14f15e205" kindref="member">wpan_endpoint_match</ref>(<sp/>envelope-&gt;dev,<sp/>rsp.descriptor.endpoint,</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WPAN_APS_PROFILE_ANY);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>053474r18<sp/>2.4.4.1.5.1:<sp/>&quot;If<sp/>the<sp/>endpoint<sp/>field<sp/>does<sp/>not<sp/>correspond<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>an<sp/>active<sp/>endpoint,<sp/>the<sp/>remote<sp/>device<sp/>shall<sp/>set<sp/>the<sp/>Status<sp/>field<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOT_ACTIVE,<sp/>set<sp/>the<sp/>Length<sp/>field<sp/>to<sp/>0,<sp/>and<sp/>not<sp/>include<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SimpleDescriptor<sp/>field.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ep<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rsp.header.status<sp/>=<sp/>ZDO_STATUS_NOT_ACTIVE;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZDO_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>responding<sp/>with<sp/>%s<sp/>for<sp/>ep<sp/>0x%02x\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__,<sp/></highlight><highlight class="stringliteral">&quot;NOT_ACTIVE&quot;</highlight><highlight class="normal">,<sp/>rsp.descriptor.endpoint);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ep<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rsp.descriptor.profile_id_le<sp/>=<sp/><ref refid="group__util__byteorder_1ga3ea73a6089f61223b225c46e2ba58a47" kindref="member">htole16</ref>(<sp/>ep-&gt;<ref refid="group__wpan__aps_1ga5ca7f19e5697de2baf0e2147a41a5792" kindref="member">profile_id</ref>);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rsp.descriptor.device_id_le<sp/>=<sp/><ref refid="group__util__byteorder_1ga3ea73a6089f61223b225c46e2ba58a47" kindref="member">htole16</ref>(<sp/>ep-&gt;<ref refid="group__wpan__aps_1gadc401e0e7465eda38f9444eeb6169a10" kindref="member">device_id</ref>);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rsp.descriptor.device_version<sp/>=<sp/>ep-&gt;<ref refid="group__wpan__aps_1ga0b8f4e315b56b3e3c53dea801ce92104" kindref="member">device_version</ref>;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffer<sp/>=<sp/>&amp;rsp.clusters[0];</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/><ref refid="group__zdo_1ga558539813d6a9c8813eeae855e77385f" kindref="member">_simple_desc_cluster_list</ref>(<sp/>&amp;buffer,<sp/>MAX_CLUSTERS,</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wpan__aps_1ga2024b5d21c6f8c2f151cc2b0576c08f4" kindref="member">WPAN_CLUST_FLAG_INPUT</ref>,<sp/>ep-&gt;<ref refid="group__wpan__aps_1gac7944498524739a9becec626bf9bcb15" kindref="member">cluster_table</ref>);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retval<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/><ref refid="group__zdo_1ga558539813d6a9c8813eeae855e77385f" kindref="member">_simple_desc_cluster_list</ref>(<sp/>&amp;buffer,<sp/>MAX_CLUSTERS<sp/>-<sp/>retval,</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wpan__aps_1ga0456c33bdaa673f37f9285a3f5ca0172" kindref="member">WPAN_CLUST_FLAG_OUTPUT</ref>,<sp/>ep-&gt;<ref refid="group__wpan__aps_1gac7944498524739a9becec626bf9bcb15" kindref="member">cluster_table</ref>);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retval<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rsp.header.status<sp/>=<sp/>ZDO_STATUS_INSUFFICIENT_SPACE;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rsp.header.length<sp/>=<sp/>(<ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref>)<sp/>(buffer<sp/>-<sp/>(<ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/>*)&amp;rsp.descriptor);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Unicast<sp/>to<sp/>the<sp/>originator<sp/>of<sp/>the<sp/>SIMPLE_DESC_REQ<sp/>command.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__zdo_1ga1d645805a731e1419b5012a5c8a09bf8" kindref="member">zdo_send_response</ref>(<sp/>envelope,<sp/>&amp;rsp,<sp/>buffer<sp/>-<sp/>(<ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/>*)&amp;rsp);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Unicast<sp/>error<sp/>to<sp/>the<sp/>originator<sp/>of<sp/>the<sp/>SIMPLE_DESC_REQ<sp/>command.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>everything<sp/>up<sp/>to<sp/>the<sp/>start<sp/>of<sp/>the<sp/>SimpleDescriptor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__zdo_1ga1d645805a731e1419b5012a5c8a09bf8" kindref="member">zdo_send_response</ref>(<sp/>envelope,<sp/>&amp;rsp,</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>offsetof(<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>_response,<sp/>descriptor));</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#undef<sp/>MAX_CLUSTERS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal">}</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>_zdo_active_ep_respond<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__zdo_1ga233f2d57bc9b9d68cb18bd9d76c08e34" kindref="member">_zdo_active_ep_respond</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*envelope);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__XBEE_PLATFORM_HCS08</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#pragma<sp/>MESSAGE<sp/>DISABLE<sp/>C5909<sp/><sp/><sp/><sp/>//<sp/>Assignment<sp/>in<sp/>condition<sp/>is<sp/>OK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal">zigbee_zdo_debug</highlight></codeline>
<codeline lineno="660" refid="group__zdo_1ga233f2d57bc9b9d68cb18bd9d76c08e34" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__zdo_1ga233f2d57bc9b9d68cb18bd9d76c08e34" kindref="member">_zdo_active_ep_respond</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*envelope)</highlight></codeline>
<codeline lineno="661"><highlight class="normal">{</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwpan__endpoint__table__entry__t" kindref="compound">wpan_endpoint_table_entry_t</ref><sp/><sp/><sp/>*ep;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><ref refid="group___s_x_a_1ga4233297bd31be5c273d4fb0758cc54d7" kindref="member">PACKED_STRUCT</ref><sp/>{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transaction;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zdo_1ga47a4305044809f1e37b1a88c3232676a" kindref="member">zdo_active_ep_rsp_header_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endpoints[ZDO_MAX_ENDPOINTS];</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/>}<sp/>rsp;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/>*active_list;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(envelope<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>we<sp/>know<sp/>our<sp/>16-bit<sp/>network<sp/>address<sp/>before<sp/>responding.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(envelope-&gt;dev-&gt;address.network<sp/>==<sp/><ref refid="group__wpan__types_1ga1674d7b825e528a482725d1c06b02c10" kindref="member">WPAN_NET_ADDR_UNDEFINED</ref>)</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZDO_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>ignoring<sp/>request;<sp/>don&apos;t<sp/>know<sp/>my<sp/>address\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__hal_1ga0030614bc864d1b24eaedd71585acc27" kindref="member">ENODATA</ref>;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZDO_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>%u-byte<sp/>request:\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>envelope-&gt;length);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__util_1gaa321236a0cb6f4e0dad592fdf1b550d2" kindref="member">hex_dump</ref>(<sp/>envelope-&gt;payload,<sp/>envelope-&gt;length,<sp/><ref refid="group__hal_1ga696f6553e33cbd20eda34e220ec9939a" kindref="member">HEX_DUMP_FLAG_TAB</ref>);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/>active_list<sp/>=<sp/>rsp.endpoints;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/>ep<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>(ep<sp/>=<sp/><ref refid="group__wpan__aps_1gaca3b72047ea4e156ce9a977c13624b5c" kindref="member">wpan_endpoint_get_next</ref>(<sp/>envelope-&gt;dev,<sp/>ep))<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ep-&gt;<ref refid="group__wpan__aps_1ga7d397493728da2bca8d55b2d61c4ec5d" kindref="member">endpoint</ref><sp/>!=<sp/><ref refid="group__wpan__aps_1ga860a08927c4e6d7656281713186c43dd" kindref="member">WPAN_ENDPOINT_ZDO</ref>)</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*active_list++<sp/>=<sp/>ep-&gt;<ref refid="group__wpan__aps_1ga7d397493728da2bca8d55b2d61c4ec5d" kindref="member">endpoint</ref>;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DEVNOTE:<sp/>Not<sp/>looking<sp/>at<sp/>network_addr_le<sp/>field<sp/>of<sp/>request<sp/>--<sp/>should<sp/>we?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/>rsp.transaction<sp/>=</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__zdo_1ga54a6580e6f7572ca6014963d3e03e735" kindref="member">zdo_active_ep_req_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)envelope-&gt;payload)-&gt;transaction;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/>rsp.header.status<sp/>=<sp/>ZDO_STATUS_SUCCESS;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/>rsp.header.network_addr_le<sp/>=<sp/><ref refid="group__util__byteorder_1ga3ea73a6089f61223b225c46e2ba58a47" kindref="member">htole16</ref>(<sp/>envelope-&gt;dev-&gt;address.network);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/>rsp.header.ep_count<sp/>=<sp/>(<ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref>)<sp/>(active_list<sp/>-<sp/>rsp.endpoints);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Unicast<sp/>to<sp/>the<sp/>originator<sp/>of<sp/>the<sp/>ACTIVE_EP_REQ<sp/>command.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__zdo_1ga1d645805a731e1419b5012a5c8a09bf8" kindref="member">zdo_send_response</ref>(<sp/>envelope,<sp/>&amp;rsp,<sp/>active_list<sp/>-<sp/>(<ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/>*)&amp;rsp);</highlight></codeline>
<codeline lineno="711"><highlight class="normal">}</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__XBEE_PLATFORM_HCS08</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#pragma<sp/>MESSAGE<sp/>DEFAULT<sp/>C5909<sp/><sp/><sp/><sp/>//<sp/>restore<sp/>C5909<sp/>(Assignment<sp/>in<sp/>condition)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>zdo_handler<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight></codeline>
<codeline lineno="730"><highlight class="normal">zigbee_zdo_debug</highlight></codeline>
<codeline lineno="731" refid="group__zdo_1ga2e4465da8204d6c9a67edc3a6f210c1d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__zdo_1ga2e4465da8204d6c9a67edc3a6f210c1d" kindref="member">zdo_handler</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*envelope,</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwpan__ep__state__t" kindref="compound">wpan_ep_state_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*ep_state)</highlight></codeline>
<codeline lineno="733"><highlight class="normal">{</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><sp/>response[2];</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><sp/>transaction_id;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(envelope<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>byte<sp/>of<sp/>payload<sp/>is<sp/>transaction<sp/>ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/>transaction_id<sp/>=<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)envelope-&gt;payload;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZDO_VERBOSE</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>received<sp/>ZDO<sp/>clust=0x%04x,<sp/>trans=0x%02x\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__,<sp/>envelope-&gt;cluster_id,<sp/>transaction_id);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__util_1gaa321236a0cb6f4e0dad592fdf1b550d2" kindref="member">hex_dump</ref>(<sp/>envelope-&gt;payload,<sp/>envelope-&gt;length,<sp/><ref refid="group__hal_1ga696f6553e33cbd20eda34e220ec9939a" kindref="member">HEX_DUMP_FLAG_TAB</ref>);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(envelope-&gt;cluster_id)</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__zdo_1ga273177b195b871fe08bb7e5cab487141" kindref="member">ZDO_SIMPLE_DESC_REQ</ref>:</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__zdo_1gaa70aa4bcb14a98c69e7a54a9971ea194" kindref="member">_zdo_simple_desc_respond</ref>(<sp/>envelope);</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__zdo_1gaece69bc80056a9892623eadf1ce84d8d" kindref="member">ZDO_ACTIVE_EP_REQ</ref>:</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__zdo_1ga233f2d57bc9b9d68cb18bd9d76c08e34" kindref="member">_zdo_active_ep_respond</ref>(<sp/>envelope);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__zdo_1ga8c614773175b0518e3a1f5a512dfe4d1" kindref="member">ZDO_MATCH_DESC_REQ</ref>:</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__zdo_1ga41d93e5e12d9ed4e18d092fe3af779a2" kindref="member">_zdo_match_desc_respond</ref>(<sp/>envelope);</highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__zdo_1gaffd566d5fc7aa21973fd7e5e026db30a" kindref="member">ZDO_DEVICE_ANNCE</ref>:</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>defined<sp/>ZIGBEE_ZDO_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__zdo_1ga95dc0a6858fdb8b8237ef6091d31d2ea" kindref="member">zdo_device_annce_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*annce<sp/>=<sp/>envelope-&gt;payload;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unionaddr64" kindref="compound">addr64</ref><sp/>addr_be;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[<ref refid="group__wpan__types_1gac468b40b060897498f923923654c3d4a" kindref="member">ADDR64_STRING_LENGTH</ref>];</highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__util__byteorder_1gac8afbbc0aa0b7d35ebf38f54dbfbe6c2" kindref="member">memcpy_letobe</ref>(<sp/>&amp;addr_be,<sp/>&amp;annce-&gt;ieee_address_le,<sp/>8);</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Device<sp/>Announce<sp/>%&quot;</highlight><highlight class="normal"><sp/><ref refid="group__hal_1ga379022d2cd3136d8f3500c88658056b7" kindref="member">PRIsFAR</ref><sp/></highlight><highlight class="stringliteral">&quot;<sp/>(0x%04x)<sp/>cap<sp/>0x%02x\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__,<sp/><ref refid="group__wpan__types_1ga448782f4aed0821758969b47221417ed" kindref="member">addr64_format</ref>(<sp/>buffer,<sp/>&amp;addr_be),</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__util__byteorder_1ga684a5d26d1989cbd925e97292cc81c72" kindref="member">le16toh</ref>(<sp/>annce-&gt;network_addr_le),<sp/>annce-&gt;capability);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>053474r19<sp/>2.4.4.1,<sp/>&quot;The<sp/>server<sp/>shall<sp/>not<sp/>supply<sp/>a<sp/>response<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>Device_annce.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ZDO_CLUST_IS_RESPONSE(<sp/>envelope-&gt;cluster_id))</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/><ref refid="group__wpan__aps_1gaf56e4d0e52462b5cf41c5fa5f23ea952" kindref="member">wpan_conversation_response</ref>(<sp/>ep_state,<sp/>transaction_id,<sp/>envelope);</highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retval<sp/>!=<sp/>-<ref refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>)</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZDO_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>matched<sp/>to<sp/>conversation<sp/>and<sp/>processed<sp/>(ret=%d)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__,<sp/>retval);</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZDO_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>no<sp/>matching<sp/>conversation<sp/>for<sp/>trans<sp/>0x%02x\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__,<sp/>transaction_id);</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>this<sp/>is<sp/>an<sp/>unsupported<sp/>RESPONSE<sp/>cluster<sp/>(high<sp/>bit<sp/>set)<sp/>or<sp/>a<sp/>broadcast</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>request,<sp/>ignore<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>053474r19<sp/>2.4.4,<sp/>&quot;For<sp/>all<sp/>broadcast<sp/>addressed<sp/>requests<sp/>(of<sp/>any<sp/>boradcast</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>address<sp/>type)<sp/>to<sp/>the<sp/>server,<sp/>if<sp/>the<sp/>command<sp/>is<sp/>not<sp/>supported,<sp/>the<sp/>server</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>shall<sp/>drop<sp/>the<sp/>packet.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><sp/>ZDO_CLUST_IS_RESPONSE(envelope-&gt;cluster_id)</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(envelope-&gt;options<sp/>&amp;<sp/><ref refid="group__wpan__aps_1ga92a0f27267b04aa691e184b428e8f7c6" kindref="member">WPAN_ENVELOPE_BROADCAST_ADDR</ref>)<sp/>)</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZDO_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>ignoring<sp/><sp/>%scast<sp/>to<sp/>unsupported<sp/>cluster<sp/>0x%&quot;</highlight><highlight class="normal"><sp/><ref refid="group__hal_1ga70f5e38b517f714518c970a4da37bef1" kindref="member">PRIx16</ref><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__,<sp/>(envelope-&gt;options<sp/>&amp;<sp/><ref refid="group__wpan__aps_1ga92a0f27267b04aa691e184b428e8f7c6" kindref="member">WPAN_ENVELOPE_BROADCAST_ADDR</ref>)</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;broad&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;uni&quot;</highlight><highlight class="normal">,<sp/>envelope-&gt;cluster_id);</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZDO_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>sending<sp/>NOT_SUPPORTED<sp/>for<sp/>cluster<sp/>ID<sp/>%&quot;</highlight><highlight class="normal"><sp/><ref refid="group__hal_1ga70f5e38b517f714518c970a4da37bef1" kindref="member">PRIx16</ref><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__,<sp/>envelope-&gt;cluster_id);</highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/>response[0]<sp/>=<sp/>transaction_id;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/>response[1]<sp/>=<sp/>ZDO_STATUS_NOT_SUPPORTED;</highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZDO_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>UNSUPPORTED<sp/>CLUSTER<sp/>0x%04x<sp/>(trans<sp/>0x%02x)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__,<sp/>envelope-&gt;cluster_id,<sp/>transaction_id);</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__util_1gaa321236a0cb6f4e0dad592fdf1b550d2" kindref="member">hex_dump</ref>(<sp/>envelope-&gt;payload,<sp/>envelope-&gt;length,<sp/><ref refid="group__hal_1ga696f6553e33cbd20eda34e220ec9939a" kindref="member">HEX_DUMP_FLAG_TAB</ref>);</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>response:<sp/>%02x<sp/>%02x\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>response[0],</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response[1]);</highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__zdo_1ga1d645805a731e1419b5012a5c8a09bf8" kindref="member">zdo_send_response</ref>(<sp/>envelope,<sp/>&amp;response,<sp/>2);</highlight></codeline>
<codeline lineno="833"><highlight class="normal">}</highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>zdo_send_bind_req<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight><highlight class="comment">//<sp/>documented<sp/>in<sp/>zigbee/zdo.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal">zigbee_zdo_debug</highlight></codeline>
<codeline lineno="839" refid="group__zdo_1gab02e4c1584594c0a96d05399bd69bffa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__zdo_1gab02e4c1584594c0a96d05399bd69bffa" kindref="member">zdo_send_bind_req</ref>(<sp/><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref><sp/>*envelope,<sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/><ref refid="group__zcl_1ga1d127017fb298b889f4ba24752d08b8e" kindref="member">type</ref>,</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__wpan__aps_1gabf0a6b85c9ff3ff9104c8b58c1436d72" kindref="member">wpan_response_fn</ref><sp/>callback,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*context)</highlight></codeline>
<codeline lineno="841"><highlight class="normal">{</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bind_env;</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><ref refid="group___s_x_a_1ga4233297bd31be5c273d4fb0758cc54d7" kindref="member">PACKED_STRUCT</ref><sp/>{</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transaction;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zdo_1ga68c283a043714a9e40d3674146dd6239" kindref="member">zdo_bind_address_req_t</ref><sp/><sp/>req;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/>}<sp/>zdo;</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trans;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(envelope<sp/>==<sp/>NULL<sp/>||<sp/>(type<sp/>!=<sp/><ref refid="group__zdo_1ga9e97bead2ca9d929bb94183ddc2106bb" kindref="member">ZDO_BIND_REQ</ref><sp/>&amp;&amp;<sp/>type<sp/>!=<sp/><ref refid="group__zdo_1gad447486341b5d51d91f5a44aad418a99" kindref="member">ZDO_UNBIND_REQ</ref>))</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>build<sp/>envelope<sp/>for<sp/>ZDO<sp/>Bind<sp/>Request</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__zdo_1gae4b6736d215caf2a10790761ed52443d" kindref="member">_zdo_envelope_create</ref>(<sp/>&amp;bind_env,<sp/>envelope-&gt;<ref refid="group__wpan__aps_1ga7f9a38312b9025348d42a4ed0042ce37" kindref="member">dev</ref>,<sp/>&amp;envelope-&gt;<ref refid="group__wpan__aps_1ga2549f921e25a72dfa05a2154a792e2bf" kindref="member">ieee_address</ref>);</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/>bind_env.<ref refid="group__wpan__aps_1ga30948a7f8d096191895f50b80d81ca12" kindref="member">network_address</ref><sp/>=<sp/>envelope-&gt;<ref refid="group__wpan__aps_1ga30948a7f8d096191895f50b80d81ca12" kindref="member">network_address</ref>;</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/>bind_env.<ref refid="group__wpan__aps_1ga262a92f94287e77cb56350951893bae2" kindref="member">cluster_id</ref><sp/>=<sp/><ref refid="group__zcl_1ga1d127017fb298b889f4ba24752d08b8e" kindref="member">type</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Bind_req<sp/>or<sp/>Unbind_req<sp/>cluster<sp/>ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/>bind_env.<ref refid="group__wpan__aps_1ga8737375e27cb391ff381fff10dc0c132" kindref="member">payload</ref><sp/>=<sp/>&amp;zdo;</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/>bind_env.<ref refid="group__wpan__aps_1ga1892eba2086d12ac2b09005aeb09ea3b" kindref="member">length</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>zdo;</highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>associate<sp/>the<sp/>callback<sp/>with<sp/>the<sp/>transaction<sp/>ID<sp/>for<sp/>this<sp/>request</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/>trans<sp/>=<sp/><ref refid="group__wpan__aps_1gae5f88ed40bd334d963e261947b77b980" kindref="member">wpan_conversation_register</ref>(<sp/><ref refid="group__zdo_1gaaf992619b06595291c2aead8a3d4dba1" kindref="member">zdo_endpoint_state</ref>(<sp/>bind_env.<ref refid="group__wpan__aps_1ga7f9a38312b9025348d42a4ed0042ce37" kindref="member">dev</ref>),</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>callback,<sp/>context,<sp/><ref refid="group__zdo_1gae1d68b13491e1e29493f412d984886e7" kindref="member">ZDO_CONVERSATION_TIMEOUT</ref>);</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(trans<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZDO_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>error<sp/>%d<sp/>calling<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__,<sp/>trans,<sp/></highlight><highlight class="stringliteral">&quot;wpan_conversation_register&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>trans;</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>build<sp/>the<sp/>ZDO<sp/>Bind<sp/>Request<sp/>packet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/>zdo.transaction<sp/>=<sp/>(<ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref>)<sp/>trans;</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Envelope<sp/>IEEE<sp/>Address<sp/>is<sp/>always<sp/>big-endian<sp/>(is<sp/>NOT<sp/>host<sp/>byte<sp/>order).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__util__byteorder_1ga75cf1250c9f15ea3f0d87250c2b43a51" kindref="member">memcpy_betole</ref>(<sp/>&amp;zdo.req.header.src_address_le,<sp/>&amp;envelope-&gt;<ref refid="group__wpan__aps_1ga2549f921e25a72dfa05a2154a792e2bf" kindref="member">ieee_address</ref>,<sp/>8);</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/>zdo.req.header.src_endpoint<sp/>=<sp/>envelope-&gt;<ref refid="group__wpan__aps_1ga0992896b3999455a300e8ba25c368ae8" kindref="member">dest_endpoint</ref>;</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/>zdo.req.header.cluster_id_le<sp/>=<sp/><ref refid="group__util__byteorder_1ga3ea73a6089f61223b225c46e2ba58a47" kindref="member">htole16</ref>(<sp/>envelope-&gt;<ref refid="group__wpan__aps_1ga262a92f94287e77cb56350951893bae2" kindref="member">cluster_id</ref>);</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/>zdo.req.header.dst_addr_mode<sp/>=<sp/><ref refid="group__zdo_1gafdcf940776d593e2847a990248efc41a" kindref="member">ZDO_BIND_DST_MODE_ADDR</ref>;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__util__byteorder_1ga75cf1250c9f15ea3f0d87250c2b43a51" kindref="member">memcpy_betole</ref>(<sp/>&amp;zdo.req.dst_address_le,<sp/>&amp;envelope-&gt;<ref refid="group__wpan__aps_1ga7f9a38312b9025348d42a4ed0042ce37" kindref="member">dev</ref>-&gt;<ref refid="group__wpan__aps_1ga66a58a737aee9733019399e2eceabf4a" kindref="member">address</ref>.ieee,<sp/>8);</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/>zdo.req.dst_endpoint<sp/>=<sp/>envelope-&gt;<ref refid="group__wpan__aps_1ga9781a5a281ee97f7f67d8ebe2c4f54db" kindref="member">source_endpoint</ref>;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>send<sp/>the<sp/>request</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__wpan__aps_1ga06f1e9e86b74ef807ded44b79b13e283" kindref="member">wpan_envelope_send</ref>(<sp/>&amp;bind_env);</highlight></codeline>
<codeline lineno="885"><highlight class="normal">}</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>zdo_mgmt_leave_req<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight><highlight class="comment">//<sp/>documented<sp/>in<sp/>zigbee/zdo.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal">zigbee_zdo_debug</highlight></codeline>
<codeline lineno="892" refid="group__zdo_1ga4ab17250ec2957d91a6ef4f1377ab62d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__zdo_1ga4ab17250ec2957d91a6ef4f1377ab62d" kindref="member">zdo_mgmt_leave_req</ref>(<sp/><ref refid="structwpan__dev__t" kindref="compound">wpan_dev_t</ref><sp/>*dev,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unionaddr64" kindref="compound">addr64</ref><sp/>*address,<sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/>flags)</highlight></codeline>
<codeline lineno="893"><highlight class="normal">{</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>envelope;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><ref refid="group___s_x_a_1ga4233297bd31be5c273d4fb0758cc54d7" kindref="member">PACKED_STRUCT</ref><sp/>{</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transaction;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zdo_1gaa7b8baffae72af214b453440e763da1e" kindref="member">zdo_mgmt_leave_req_t</ref><sp/><sp/><sp/><sp/>request;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/>}<sp/>zdo;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dev<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/>zdo.request.device_address<sp/>=<sp/>*<ref refid="group__zdo_1gae4b6736d215caf2a10790761ed52443d" kindref="member">_zdo_envelope_create</ref>(<sp/>&amp;envelope,<sp/>dev,</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>address);</highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/>envelope.<ref refid="group__wpan__aps_1ga262a92f94287e77cb56350951893bae2" kindref="member">cluster_id</ref><sp/>=<sp/><ref refid="group__zdo_1ga4fc084156021285ac010e1bb3a2bc5b8" kindref="member">ZDO_MGMT_LEAVE_REQ</ref>;</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/>envelope.<ref refid="group__wpan__aps_1ga8737375e27cb391ff381fff10dc0c132" kindref="member">payload</ref><sp/>=<sp/>&amp;zdo;</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/>envelope.<ref refid="group__wpan__aps_1ga1892eba2086d12ac2b09005aeb09ea3b" kindref="member">length</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>zdo;</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/><ref refid="group__zdo_1ga2941a931686d22927d9e6a7ad7472737" kindref="member">ZDO_MGMT_LEAVE_REQ_ENCRYPTED</ref>)</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>envelope.options<sp/>|=<sp/><ref refid="group__wpan__aps_1ga1eafd87038a2134da7a1f72e6801d23b" kindref="member">WPAN_CLUST_FLAG_ENCRYPT</ref>;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/>zdo.request.flags<sp/>=<sp/>(<ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref>)<sp/>flags;</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/>zdo.transaction<sp/>=<sp/><ref refid="group__wpan__aps_1gaab1c77ccbd237270f11499fb6411599c" kindref="member">wpan_endpoint_next_trans</ref>(<sp/><ref refid="group__zdo_1gab405baf051b6c2b3c85bc4e80aa5c2bb" kindref="member">_zdo_endpoint_of</ref>(<sp/>dev));</highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__wpan__aps_1ga06f1e9e86b74ef807ded44b79b13e283" kindref="member">wpan_envelope_send</ref>(<sp/>&amp;envelope);</highlight></codeline>
<codeline lineno="920"><highlight class="normal">}</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>zdo_send_descriptor_req<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal">zigbee_zdo_debug</highlight></codeline>
<codeline lineno="925" refid="group__zdo_1gac842062e5e1a60d25cddf16ec22ef601" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__zdo_1gac842062e5e1a60d25cddf16ec22ef601" kindref="member">zdo_send_descriptor_req</ref>(<sp/><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref><sp/>*envelope,<sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/>cluster,</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/>addr_of_interest,<sp/><ref refid="group__wpan__aps_1gabf0a6b85c9ff3ff9104c8b58c1436d72" kindref="member">wpan_response_fn</ref><sp/>callback,</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*context)</highlight></codeline>
<codeline lineno="928"><highlight class="normal">{</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><ref refid="group___s_x_a_1ga4233297bd31be5c273d4fb0758cc54d7" kindref="member">PACKED_STRUCT</ref><sp/>{</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transaction;</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zdo_1gaa7b6adb5a5b6441e4f669337f4ef61e5" kindref="member">network_addr_le</ref>;</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/>}<sp/>zdo;</highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(envelope<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>;</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/>retval<sp/>=<sp/><ref refid="group__wpan__aps_1gae5f88ed40bd334d963e261947b77b980" kindref="member">wpan_conversation_register</ref>(<sp/><ref refid="group__zdo_1gaaf992619b06595291c2aead8a3d4dba1" kindref="member">zdo_endpoint_state</ref>(<sp/>envelope-&gt;<ref refid="group__wpan__aps_1ga7f9a38312b9025348d42a4ed0042ce37" kindref="member">dev</ref>),</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>callback,<sp/>context,<sp/><ref refid="group__zdo_1gae1d68b13491e1e29493f412d984886e7" kindref="member">ZDO_CONVERSATION_TIMEOUT</ref>);</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retval<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/>zdo.transaction<sp/>=<sp/>(<ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref>)<sp/>retval;</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/>zdo.network_addr_le<sp/>=<sp/><ref refid="group__util__byteorder_1ga3ea73a6089f61223b225c46e2ba58a47" kindref="member">htole16</ref>(<sp/>addr_of_interest);</highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wpan_envelope_create<sp/>leaves<sp/>profile<sp/>and<sp/>endpoints<sp/>set<sp/>to<sp/>0.<sp/><sp/>Only<sp/>need</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>change<sp/>them<sp/>if<sp/>the<sp/>ZDO<sp/>endpoint/profile<sp/>is<sp/>non-zero<sp/>(which<sp/>it<sp/>isn&apos;t).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#if<sp/>WPAN_PROFILE_ZDO<sp/>!=<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>envelope-&gt;<ref refid="group__wpan__aps_1ga5ca7f19e5697de2baf0e2147a41a5792" kindref="member">profile_id</ref><sp/>=<sp/><ref refid="group__wpan__aps_1gabdbce33bdd976b65877a241842b73a20" kindref="member">WPAN_PROFILE_ZDO</ref>;</highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#if<sp/>WPAN_ENDPOINT_ZDO<sp/>!=<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>envelope-&gt;<ref refid="group__wpan__aps_1ga9781a5a281ee97f7f67d8ebe2c4f54db" kindref="member">source_endpoint</ref><sp/>=<sp/>envelope-&gt;<ref refid="group__wpan__aps_1ga0992896b3999455a300e8ba25c368ae8" kindref="member">dest_endpoint</ref><sp/>=<sp/><ref refid="group__wpan__aps_1ga860a08927c4e6d7656281713186c43dd" kindref="member">WPAN_ENDPOINT_ZDO</ref>;</highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/>envelope-&gt;<ref refid="group__wpan__aps_1ga262a92f94287e77cb56350951893bae2" kindref="member">cluster_id</ref><sp/>=<sp/>cluster;</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/>envelope-&gt;<ref refid="group__wpan__aps_1ga8737375e27cb391ff381fff10dc0c132" kindref="member">payload</ref><sp/>=<sp/>&amp;zdo;</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/>envelope-&gt;<ref refid="group__wpan__aps_1ga1892eba2086d12ac2b09005aeb09ea3b" kindref="member">length</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>zdo;</highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/>retval<sp/>=<sp/><ref refid="group__wpan__aps_1ga06f1e9e86b74ef807ded44b79b13e283" kindref="member">wpan_envelope_send</ref>(<sp/>envelope);</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/>envelope-&gt;<ref refid="group__wpan__aps_1ga8737375e27cb391ff381fff10dc0c132" kindref="member">payload</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/>envelope-&gt;<ref refid="group__wpan__aps_1ga1892eba2086d12ac2b09005aeb09ea3b" kindref="member">length</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="969"><highlight class="normal">}</highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>zdo_send_nwk_addr_req<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight></codeline>
<codeline lineno="981"><highlight class="normal">zigbee_zdo_debug</highlight></codeline>
<codeline lineno="982" refid="group__zdo_1ga9c1afb2178cc3e3b515373c7e351fc02" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__zdo_1ga9c1afb2178cc3e3b515373c7e351fc02" kindref="member">_zdo_process_nwk_addr_resp</ref>(<sp/><ref refid="structwpan__conversation__t" kindref="compound">wpan_conversation_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*conversation,</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*envelope)</highlight></codeline>
<codeline lineno="984"><highlight class="normal">{</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*net_addr;</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___s_x_a_1ga4233297bd31be5c273d4fb0758cc54d7" kindref="member">PACKED_STRUCT</ref><sp/>{</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transaction;</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>zdo_nwk_addr_rsp_header_t<sp/><sp/>header;</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/>}<sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*response;</highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>conversation<sp/>is<sp/>never<sp/>NULL<sp/>in<sp/>a<sp/>wpan_response_fn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/>net_addr<sp/>=<sp/>conversation-&gt;context;</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(envelope<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZDO_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>timeout<sp/>waiting<sp/>for<sp/>response<sp/>to<sp/>transaction<sp/>0x%02x\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__,<sp/>conversation-&gt;transaction_id);</highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*net_addr<sp/>=<sp/>ZDO_NET_ADDR_TIMEOUT;</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>response<sp/>=<sp/>envelope-&gt;payload;</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(response-&gt;header.status<sp/>==<sp/>ZDO_STATUS_SUCCESS)</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*net_addr<sp/>=<sp/><ref refid="group__util__byteorder_1ga684a5d26d1989cbd925e97292cc81c72" kindref="member">le16toh</ref>(<sp/>response-&gt;header.net_remote_le);</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZDO_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>network<sp/>addr<sp/>for<sp/>transaction<sp/>0x%02x<sp/>is<sp/>0x%04x\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__,<sp/>response-&gt;transaction,<sp/>*net_addr);</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZDO_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>error<sp/>0x%02x<sp/>on<sp/>transaction<sp/>0x%02x\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response-&gt;header.status,<sp/>response-&gt;transaction);</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*net_addr<sp/>=<sp/>ZDO_NET_ADDR_ERROR;</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>WPAN_CONVERSATION_END;</highlight></codeline>
<codeline lineno="1024"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight><highlight class="comment">//<sp/>documented<sp/>in<sp/>zigbee/zdo.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal">zigbee_zdo_debug</highlight></codeline>
<codeline lineno="1028" refid="group__zdo_1ga40f076c190ab2390836687b8e1f705eb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__zdo_1ga40f076c190ab2390836687b8e1f705eb" kindref="member">zdo_send_nwk_addr_req</ref>(<sp/><ref refid="structwpan__dev__t" kindref="compound">wpan_dev_t</ref><sp/>*dev,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unionaddr64" kindref="compound">addr64</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*ieee_be,</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*net)</highlight></codeline>
<codeline lineno="1030"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__zdo_1gac1680800358ab1c7a6690c3a3f2628ff" kindref="member">zdo_nwk_addr_req_t</ref><sp/>req;</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref><sp/><sp/><sp/>envelope;</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>transaction;</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZDO_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>addr64_buf[<ref refid="group__wpan__types_1gac468b40b060897498f923923654c3d4a" kindref="member">ADDR64_STRING_LENGTH</ref>];</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dev<sp/>==<sp/>NULL<sp/>||<sp/>ieee_be<sp/>==<sp/>NULL<sp/>||<sp/>net<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>;</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__zdo_1gae4b6736d215caf2a10790761ed52443d" kindref="member">_zdo_envelope_create</ref>(<sp/>&amp;envelope,<sp/>dev,<sp/>ieee_be);</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/>envelope.<ref refid="group__wpan__aps_1ga262a92f94287e77cb56350951893bae2" kindref="member">cluster_id</ref><sp/>=<sp/><ref refid="group__zdo_1ga1458b65a34a4f94893f5d0ba12a4f4d8" kindref="member">ZDO_NWK_ADDR_REQ</ref>;</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/>envelope.<ref refid="group__wpan__aps_1ga8737375e27cb391ff381fff10dc0c132" kindref="member">payload</ref><sp/>=<sp/>&amp;req;</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/>envelope.<ref refid="group__wpan__aps_1ga1892eba2086d12ac2b09005aeb09ea3b" kindref="member">length</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>req;</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/>transaction<sp/>=<sp/><ref refid="group__wpan__aps_1gae5f88ed40bd334d963e261947b77b980" kindref="member">wpan_conversation_register</ref>(<sp/><ref refid="group__zdo_1gaaf992619b06595291c2aead8a3d4dba1" kindref="member">zdo_endpoint_state</ref>(<sp/>dev),</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zdo_1ga9c1afb2178cc3e3b515373c7e351fc02" kindref="member">_zdo_process_nwk_addr_resp</ref>,<sp/>net,<sp/><ref refid="group__zdo_1gae1d68b13491e1e29493f412d984886e7" kindref="member">ZDO_CONVERSATION_TIMEOUT</ref>);</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(transaction<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>transaction;</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/>req.transaction<sp/>=<sp/>(<ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref>)<sp/>transaction;</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__util__byteorder_1ga75cf1250c9f15ea3f0d87250c2b43a51" kindref="member">memcpy_betole</ref>(<sp/>&amp;req.ieee_address_le,<sp/>ieee_be,<sp/>8);</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/>req.request_type<sp/>=<sp/>ZDO_REQUEST_TYPE_SINGLE;</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/>req.start_index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Caller<sp/>checks<sp/>that<sp/>address<sp/>for<sp/>response<sp/>to<sp/>change<sp/>to<sp/>device&apos;s<sp/>16-bit<sp/>network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>address,<sp/>ZDO_NET_ADDR_TIMEOUT<sp/>on<sp/>timeout<sp/>or<sp/>ZDO_NET_ADDR_ERROR<sp/>on<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/>*net<sp/>=<sp/>ZDO_NET_ADDR_PENDING;</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZDO_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>NWK_addr<sp/>for<sp/>%&quot;</highlight><highlight class="normal"><sp/><ref refid="group__hal_1ga379022d2cd3136d8f3500c88658056b7" kindref="member">PRIsFAR</ref><sp/></highlight><highlight class="stringliteral">&quot;<sp/>(trans<sp/>0x%02x)\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wpan__types_1ga448782f4aed0821758969b47221417ed" kindref="member">addr64_format</ref>(<sp/>addr64_buf,<sp/>ieee_be),<sp/>req.transaction);</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__wpan__aps_1ga06f1e9e86b74ef807ded44b79b13e283" kindref="member">wpan_envelope_send</ref>(<sp/>&amp;envelope);</highlight></codeline>
<codeline lineno="1070"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>zdo_send_ieee_addr_req<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1073"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight></codeline>
<codeline lineno="1082"><highlight class="normal">zigbee_zdo_debug</highlight></codeline>
<codeline lineno="1083" refid="group__zdo_1gad723bd899ccda9ec96f6226893c1335b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__zdo_1gad723bd899ccda9ec96f6226893c1335b" kindref="member">_zdo_process_ieee_addr_resp</ref>(<sp/><ref refid="structwpan__conversation__t" kindref="compound">wpan_conversation_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*conversation,</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*envelope)</highlight></codeline>
<codeline lineno="1085"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><ref refid="unionaddr64" kindref="compound">addr64</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*ieee_be;</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___s_x_a_1ga4233297bd31be5c273d4fb0758cc54d7" kindref="member">PACKED_STRUCT</ref><sp/>{</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transaction;</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>zdo_ieee_addr_rsp_header_t<sp/>header;</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/>}<sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*response;</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZDO_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>addr64_buf[<ref refid="group__wpan__types_1gac468b40b060897498f923923654c3d4a" kindref="member">ADDR64_STRING_LENGTH</ref>];</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>conversation<sp/>is<sp/>never<sp/>NULL<sp/>in<sp/>a<sp/>wpan_response_fn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/>ieee_be<sp/>=<sp/>conversation-&gt;context;</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(envelope<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZDO_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>timeout<sp/>waiting<sp/>for<sp/>response<sp/>to<sp/>transaction<sp/>0x%02x\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__,<sp/>conversation-&gt;transaction_id);</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*ieee_be<sp/>=<sp/>*ZDO_IEEE_ADDR_TIMEOUT;</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>response<sp/>=<sp/>envelope-&gt;payload;</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(response-&gt;header.status<sp/>==<sp/>ZDO_STATUS_SUCCESS)</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__util__byteorder_1gac8afbbc0aa0b7d35ebf38f54dbfbe6c2" kindref="member">memcpy_letobe</ref>(<sp/>ieee_be,<sp/>&amp;response-&gt;header.ieee_remote_le,</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*ieee_be);</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZDO_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>IEEE_addr<sp/>for<sp/>%&quot;</highlight><highlight class="normal"><sp/><ref refid="group__hal_1ga379022d2cd3136d8f3500c88658056b7" kindref="member">PRIsFAR</ref><sp/></highlight><highlight class="stringliteral">&quot;<sp/>(trans<sp/>0x%02x)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__,<sp/><ref refid="group__wpan__types_1ga448782f4aed0821758969b47221417ed" kindref="member">addr64_format</ref>(<sp/>addr64_buf,<sp/>ieee_be),</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response-&gt;transaction);</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZDO_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>error<sp/>0x%02x<sp/>on<sp/>transaction<sp/>0x%02x\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response-&gt;header.status,<sp/>response-&gt;transaction);</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(<sp/>ieee_be,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*ieee_be);</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>WPAN_CONVERSATION_END;</highlight></codeline>
<codeline lineno="1130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"></highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight><highlight class="comment">//<sp/>documented<sp/>in<sp/>zigbee/zdo.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal">zigbee_zdo_debug</highlight></codeline>
<codeline lineno="1134" refid="group__zdo_1ga4af5f8d70054f7883dbc1305e3a3f181" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__zdo_1ga4af5f8d70054f7883dbc1305e3a3f181" kindref="member">zdo_send_ieee_addr_req</ref>(<sp/><ref refid="structwpan__dev__t" kindref="compound">wpan_dev_t</ref><sp/>*dev,<sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/>net_addr,</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><ref refid="unionaddr64" kindref="compound">addr64</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*ieee_be)</highlight></codeline>
<codeline lineno="1136"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__zdo_1ga750ebc1379ded82ecdd43bf07306a812" kindref="member">zdo_ieee_addr_req_t</ref><sp/>req;</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref><sp/><sp/><sp/>envelope;</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>transaction;</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dev<sp/>==<sp/>NULL<sp/>||<sp/>ieee_be<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>;</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"></highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__wpan__aps_1ga95e2bb4e4c546191c059f54179064fc3" kindref="member">wpan_envelope_create</ref>(<sp/>&amp;envelope,<sp/>dev,<sp/><ref refid="group__wpan__types_1ga09e965ef6cfbfd48312d86bb011f125b" kindref="member">WPAN_IEEE_ADDR_UNDEFINED</ref>,<sp/>net_addr);</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/>envelope.<ref refid="group__wpan__aps_1ga262a92f94287e77cb56350951893bae2" kindref="member">cluster_id</ref><sp/>=<sp/><ref refid="group__zdo_1ga912ec46cfce0729c06fa48e6298cb20f" kindref="member">ZDO_IEEE_ADDR_REQ</ref>;</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/>envelope.<ref refid="group__wpan__aps_1ga8737375e27cb391ff381fff10dc0c132" kindref="member">payload</ref><sp/>=<sp/>&amp;req;</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/>envelope.<ref refid="group__wpan__aps_1ga1892eba2086d12ac2b09005aeb09ea3b" kindref="member">length</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>req;</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/>transaction<sp/>=<sp/><ref refid="group__wpan__aps_1gae5f88ed40bd334d963e261947b77b980" kindref="member">wpan_conversation_register</ref>(<sp/><ref refid="group__zdo_1gaaf992619b06595291c2aead8a3d4dba1" kindref="member">zdo_endpoint_state</ref>(<sp/>dev),</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zdo_1gad723bd899ccda9ec96f6226893c1335b" kindref="member">_zdo_process_ieee_addr_resp</ref>,<sp/>ieee_be,<sp/><ref refid="group__zdo_1gae1d68b13491e1e29493f412d984886e7" kindref="member">ZDO_CONVERSATION_TIMEOUT</ref>);</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(transaction<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>transaction;</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"></highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/>req.transaction<sp/>=<sp/>(<ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref>)<sp/>transaction;</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/>req.network_addr_le<sp/>=<sp/><ref refid="group__util__byteorder_1ga3ea73a6089f61223b225c46e2ba58a47" kindref="member">htole16</ref>(<sp/>net_addr);</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/>req.request_type<sp/>=<sp/>ZDO_REQUEST_TYPE_SINGLE;</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/>req.start_index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Caller<sp/>checks<sp/>that<sp/>address<sp/>for<sp/>response<sp/>to<sp/>change<sp/>to<sp/>device&apos;s<sp/>16-bit<sp/>network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>address,<sp/>or<sp/>WPAN_NET_ADDR_BCAST_ALL_NODES<sp/>on<sp/>timeout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/>*ieee_be<sp/>=<sp/>*ZDO_IEEE_ADDR_PENDING;</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>ZIGBEE_ZDO_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>IEEE_addr<sp/>for<sp/>0x%04X<sp/>(trans<sp/>0x%02x)\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>net_addr,<sp/>req.transaction);</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__wpan__aps_1ga06f1e9e86b74ef807ded44b79b13e283" kindref="member">wpan_envelope_send</ref>(<sp/>&amp;envelope);</highlight></codeline>
<codeline lineno="1173"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/zigbee/zigbee_zdo.c"/>
  </compounddef>
</doxygen>
