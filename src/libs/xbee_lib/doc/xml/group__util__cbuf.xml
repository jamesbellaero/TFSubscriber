<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__util__cbuf" kind="group">
    <compoundname>util_cbuf</compoundname>
    <title>Circular Buffer</title>
    <innerfile refid="xbee__cbuf_8c">xbee_cbuf.c</innerfile>
    <innerfile refid="cbuf_8h">cbuf.h</innerfile>
    <innerclass refid="structxbee__cbuf__t" prot="public">xbee_cbuf_t</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group__util__cbuf_1ga92435efb84d6814afd444fd462802e9c" prot="public" static="no" mutable="no">
        <type><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref></type>
        <definition>uint8_t lock</definition>
        <argsstring></argsstring>
        <name>lock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/xbee/cbuf.h" line="31" column="1" bodyfile="include/xbee/cbuf.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__util__cbuf_1ga9794c0e61506b826b49b458708ae2489" prot="public" static="no" mutable="no">
        <type><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref></type>
        <definition>uint8_t head</definition>
        <argsstring></argsstring>
        <name>head</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/xbee/cbuf.h" line="32" column="1" bodyfile="include/xbee/cbuf.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__util__cbuf_1ga8db7f977b77e4e4d588ef0d3e04ada16" prot="public" static="no" mutable="no">
        <type><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref></type>
        <definition>uint8_t tail</definition>
        <argsstring></argsstring>
        <name>tail</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/xbee/cbuf.h" line="33" column="1" bodyfile="include/xbee/cbuf.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__util__cbuf_1ga8a74907784be6c7786c2d060c8d7e10b" prot="public" static="no" mutable="no">
        <type><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref></type>
        <definition>uint8_t mask</definition>
        <argsstring></argsstring>
        <name>mask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/xbee/cbuf.h" line="34" column="1" bodyfile="include/xbee/cbuf.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__util__cbuf_1gaa86e1085c6a16f60258f29c9d5fc2144" prot="public" static="no" mutable="no">
        <type><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref></type>
        <definition>uint8_t data[1]</definition>
        <argsstring>[1]</argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/xbee/cbuf.h" line="35" column="1" bodyfile="include/xbee/cbuf.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__util__cbuf_1gabf58cafa9f3e989b433a14c23a94cebb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int xbee_cbuf_init</definition>
        <argsstring>(xbee_cbuf_t FAR *cbuf, uint_fast8_t datasize)</argsstring>
        <name>xbee_cbuf_init</name>
        <param>
          <type><ref refid="structxbee__cbuf__t" kindref="compound">xbee_cbuf_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>cbuf</declname>
        </param>
        <param>
          <type>uint_fast8_t</type>
          <declname>datasize</declname>
        </param>
        <briefdescription>
<para>Initialize the fields of the circular buffer. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>You must initialize the <ref refid="structxbee__cbuf__t" kindref="compound">xbee_cbuf_t</ref> structure before using it with any other xbee_cbuf_xxx() functions. If you have ISRs pushing data into the buffer, don&apos;t enable them until AFTER you&apos;ve called xbee_cbuf_init.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">cbuf</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of buffer to use for the circular buffer. This buffer must be (datasize + CBUF_OVEREAD) bytes long to hold the locks, head, tail, size and buffered bytes.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">datasize</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum number of bytes to store in the circular buffer. This size must be at least 3, no more than 255, and a power of 2 minus 1 (2^n - 1).</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>invalid parameter </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/xbee/xbee_cbuf.c" line="31" column="1" bodyfile="src/xbee/xbee_cbuf.c" bodystart="31" bodyend="42"/>
        <references refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" compoundref="platform_8h" startline="95">EINVAL</references>
        <referencedby refid="group__xbee__ota__client_1ga4805b029d840b86133ef62d64866c6af" compoundref="xbee__ota__client_8c" startline="157" endline="211">xbee_ota_init</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__util__cbuf_1gaab9462b172fea45fc3e5ce2b3a5cca10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int xbee_cbuf_putch</definition>
        <argsstring>(xbee_cbuf_t FAR *cbuf, uint_fast8_t ch)</argsstring>
        <name>xbee_cbuf_putch</name>
        <param>
          <type><ref refid="structxbee__cbuf__t" kindref="compound">xbee_cbuf_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>cbuf</declname>
        </param>
        <param>
          <type>uint_fast8_t</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
<para>Append a single byte to the circular buffer (if not full). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">cbuf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to circular buffer.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch</parametername>
</parameternamelist>
<parameterdescription>
<para>Byte to append.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer is full </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>the byte was appended</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__util__cbuf_1gaf78d1608008ebde71b57a6bf34e6a3e1" kindref="member">xbee_cbuf_getch</ref>, <ref refid="group__util__cbuf_1ga98b2d80239319b2a9875772c28a7630a" kindref="member">xbee_cbuf_get</ref>, <ref refid="group__util__cbuf_1gad3d314f23c6c7c6fc31c9b65ce61eee1" kindref="member">xbee_cbuf_put</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/xbee/xbee_cbuf.c" line="46" column="1" bodyfile="src/xbee/xbee_cbuf.c" bodystart="46" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="group__util__cbuf_1gaf78d1608008ebde71b57a6bf34e6a3e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int xbee_cbuf_getch</definition>
        <argsstring>(xbee_cbuf_t FAR *cbuf)</argsstring>
        <name>xbee_cbuf_getch</name>
        <param>
          <type><ref refid="structxbee__cbuf__t" kindref="compound">xbee_cbuf_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>cbuf</declname>
        </param>
        <briefdescription>
<para>Remove and return the first byte of the circular buffer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cbuf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to circular buffer.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer is empty </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>0-255</parametername>
</parameternamelist>
<parameterdescription>
<para>byte removed from the head of the buffer</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__util__cbuf_1gaab9462b172fea45fc3e5ce2b3a5cca10" kindref="member">xbee_cbuf_putch</ref>, <ref refid="group__util__cbuf_1ga98b2d80239319b2a9875772c28a7630a" kindref="member">xbee_cbuf_get</ref>, <ref refid="group__util__cbuf_1gad3d314f23c6c7c6fc31c9b65ce61eee1" kindref="member">xbee_cbuf_put</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/xbee/xbee_cbuf.c" line="63" column="1" bodyfile="src/xbee/xbee_cbuf.c" bodystart="63" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="group__util__cbuf_1gaf3ac1a430fe9dbe3498e96c3b96bb0f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint_fast8_t</type>
        <definition>uint_fast8_t xbee_cbuf_used</definition>
        <argsstring>(xbee_cbuf_t FAR *cbuf)</argsstring>
        <name>xbee_cbuf_used</name>
        <param>
          <type><ref refid="structxbee__cbuf__t" kindref="compound">xbee_cbuf_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>cbuf</declname>
        </param>
        <briefdescription>
<para>Returns the number of bytes stored in the circular buffer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cbuf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to circular buffer.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0-255</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes stored in the circular buffer.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__util__cbuf_1gaa3f9edea3274c2d62f09768c38fe6a1d" kindref="member">xbee_cbuf_length</ref>, <ref refid="group__util__cbuf_1ga9a2eeedf642bdf31dba98aacdc5a7d75" kindref="member">xbee_cbuf_free</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/xbee/xbee_cbuf.c" line="81" column="1" bodyfile="src/xbee/xbee_cbuf.c" bodystart="81" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="group__util__cbuf_1ga9a2eeedf642bdf31dba98aacdc5a7d75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint_fast8_t</type>
        <definition>uint_fast8_t xbee_cbuf_free</definition>
        <argsstring>(xbee_cbuf_t FAR *cbuf)</argsstring>
        <name>xbee_cbuf_free</name>
        <param>
          <type><ref refid="structxbee__cbuf__t" kindref="compound">xbee_cbuf_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>cbuf</declname>
        </param>
        <briefdescription>
<para>Returns the number of additional bytes that can be stored in the circular buffer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cbuf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to circular buffer.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0-255</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of unused bytes in the circular buffer.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__util__cbuf_1gaa3f9edea3274c2d62f09768c38fe6a1d" kindref="member">xbee_cbuf_length</ref>, <ref refid="group__util__cbuf_1ga9a2eeedf642bdf31dba98aacdc5a7d75" kindref="member">xbee_cbuf_free</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/xbee/xbee_cbuf.c" line="88" column="1" bodyfile="src/xbee/xbee_cbuf.c" bodystart="88" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="group__util__cbuf_1gaf0cf797a0e4ee8c9e518e0d8b9554b10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xbee_cbuf_flush</definition>
        <argsstring>(xbee_cbuf_t FAR *cbuf)</argsstring>
        <name>xbee_cbuf_flush</name>
        <param>
          <type><ref refid="structxbee__cbuf__t" kindref="compound">xbee_cbuf_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>cbuf</declname>
        </param>
        <briefdescription>
<para>Flush the contents of the circular buffer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">cbuf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to circular buffer. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/xbee/xbee_cbuf.c" line="95" column="1" bodyfile="src/xbee/xbee_cbuf.c" bodystart="95" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="group__util__cbuf_1gad3d314f23c6c7c6fc31c9b65ce61eee1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint_fast8_t</type>
        <definition>uint_fast8_t xbee_cbuf_put</definition>
        <argsstring>(xbee_cbuf_t FAR *cbuf, const void FAR *buffer, uint_fast8_t length)</argsstring>
        <name>xbee_cbuf_put</name>
        <param>
          <type><ref refid="structxbee__cbuf__t" kindref="compound">xbee_cbuf_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>cbuf</declname>
        </param>
        <param>
          <type>const void <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>uint_fast8_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Append multiple bytes to the end of a circular buffer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">cbuf</parametername>
</parameternamelist>
<parameterdescription>
<para>circular buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>data to copy into circular buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes to copy</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0-255</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes copied (may be less than length if buffer is full) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/xbee/xbee_cbuf.c" line="102" column="1" bodyfile="src/xbee/xbee_cbuf.c" bodystart="102" bodyend="127"/>
        <references refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" compoundref="platform_8h" startline="370">FAR</references>
      </memberdef>
      <memberdef kind="function" id="group__util__cbuf_1ga98b2d80239319b2a9875772c28a7630a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint_fast8_t</type>
        <definition>uint_fast8_t xbee_cbuf_get</definition>
        <argsstring>(xbee_cbuf_t *cbuf, void FAR *buffer, uint_fast8_t length)</argsstring>
        <name>xbee_cbuf_get</name>
        <param>
          <type><ref refid="structxbee__cbuf__t" kindref="compound">xbee_cbuf_t</ref> *</type>
          <declname>cbuf</declname>
        </param>
        <param>
          <type>void <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>uint_fast8_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Read (and remove) multiple bytes from circular buffer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">cbuf</parametername>
</parameternamelist>
<parameterdescription>
<para>circular buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>destination to copy data from circular buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes to copy</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0-255</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes copied (may be less than length if buffer is empty) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/xbee/xbee_cbuf.c" line="131" column="1" bodyfile="src/xbee/xbee_cbuf.c" bodystart="131" bodyend="154"/>
        <references refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" compoundref="platform_8h" startline="370">FAR</references>
        <referencedby refid="group__xbee__ota__client_1ga1e29a78ac03e3450859847d4a5e3b73b" compoundref="xbee__ota__client_8c" startline="90" endline="103">_xbee_ota_xmodem_read</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__util__cbuf_1ga6fb73f000c9aa3d2b26f3ae089676bfa" prot="public" static="no">
        <name>XBEE_CBUF_OVERHEAD</name>
        <initializer>sizeof(<ref refid="structxbee__cbuf__t" kindref="compound">xbee_cbuf_t</ref>)</initializer>
        <briefdescription>
<para>XBEE_CBUF_OVERHEAD is used when allocating memory for a circular buffer. </para>        </briefdescription>
        <detaileddescription>
<para>For a cbuf that can hold X bytes, you need (X + CBUF_OVERHEAD) bytes of memory.</para><para>XBEE_CBUF_OVERHEAD includes a 4-byte header, plus a separator byte in the buffered data.</para><para>For example, to set up a 31-byte circular buffer: <programlisting><codeline><highlight class="normal">#define<sp/>MY_BUF_SIZE<sp/>31<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>must<sp/>be<sp/>2^n<sp/>-1</highlight></codeline>
<codeline><highlight class="normal">char<sp/>my_buf_space[MY_BUF_SIZE<sp/>+<sp/>XBEE_CBUF_OVERHEAD];</highlight></codeline>
<codeline><highlight class="normal">xbee_cbuf_t<sp/>*my_buf;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">my_buf<sp/>=<sp/>(xbee_cbuf_t<sp/>*)my_buf_space;</highlight></codeline>
<codeline><highlight class="normal">xbee_cbuf_init(<sp/>my_buf,<sp/>MY_BUF_SIZE);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>or</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">struct<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>xbee_cbuf_t<sp/><sp/><sp/><sp/>cbuf;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>char<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf_space[MY_BUF_SIZE];</highlight></codeline>
<codeline><highlight class="normal">}<sp/>my_buf;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">xbee_cbuf_init(<sp/>&amp;my_buf.cbuf,<sp/>MY_BUF_SIZE);</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/xbee/cbuf.h" line="65" column="9" bodyfile="include/xbee/cbuf.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__util__cbuf_1gaa3f9edea3274c2d62f09768c38fe6a1d" prot="public" static="no">
        <name>xbee_cbuf_length</name>
        <param><defname>cbuf</defname></param>
        <initializer>((cbuf)-&gt;mask)</initializer>
        <briefdescription>
<para>Returns the capacity of the circular buffer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cbuf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to circular buffer.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0-255</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum number of bytes that can be stored in the circularbuffer.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__util__cbuf_1gaf3ac1a430fe9dbe3498e96c3b96bb0f7" kindref="member">xbee_cbuf_used</ref>, <ref refid="group__util__cbuf_1ga9a2eeedf642bdf31dba98aacdc5a7d75" kindref="member">xbee_cbuf_free</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/xbee/cbuf.h" line="134" column="9" bodyfile="include/xbee/cbuf.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
