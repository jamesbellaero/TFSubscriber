<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="xbee__sxa__socket_8c" kind="file" language="C++">
    <compoundname>xbee_sxa_socket.c</compoundname>
    <includes refid="platform_8h" local="yes">xbee/platform.h</includes>
    <includes refid="byteorder_8h" local="yes">xbee/byteorder.h</includes>
    <includes refid="sxa_8h" local="yes">xbee/sxa.h</includes>
    <incdepgraph>
      <node id="1169">
        <label>xbee/device.h</label>
        <link refid="device_8h"/>
        <childnode refid="1160" relation="include">
        </childnode>
        <childnode refid="1170" relation="include">
        </childnode>
        <childnode refid="1171" relation="include">
        </childnode>
        <childnode refid="1172" relation="include">
        </childnode>
      </node>
      <node id="1176">
        <label>xbee/reg_descr.h</label>
        <link refid="reg__descr_8h"/>
        <childnode refid="1160" relation="include">
        </childnode>
      </node>
      <node id="1175">
        <label>xbee/io.h</label>
        <link refid="io_8h"/>
        <childnode refid="1160" relation="include">
        </childnode>
        <childnode refid="1169" relation="include">
        </childnode>
        <childnode refid="1168" relation="include">
        </childnode>
        <childnode refid="1171" relation="include">
        </childnode>
      </node>
      <node id="1159">
        <label>src/rabbit/xbee_sxa_socket.c</label>
        <link refid="xbee__sxa__socket_8c"/>
        <childnode refid="1160" relation="include">
        </childnode>
        <childnode refid="1165" relation="include">
        </childnode>
        <childnode refid="1167" relation="include">
        </childnode>
      </node>
      <node id="1174">
        <label>xbee/discovery.h</label>
        <link refid="discovery_8h"/>
        <childnode refid="1160" relation="include">
        </childnode>
        <childnode refid="1169" relation="include">
        </childnode>
        <childnode refid="1171" relation="include">
        </childnode>
      </node>
      <node id="1161">
        <label>errno.h</label>
      </node>
      <node id="1163">
        <label>xbee/jslong_glue.h</label>
        <link refid="jslong__glue_8h_source"/>
        <childnode refid="1164" relation="include">
        </childnode>
      </node>
      <node id="1162">
        <label>stddef.h</label>
      </node>
      <node id="1172">
        <label>wpan/aps.h</label>
        <link refid="aps_8h"/>
        <childnode refid="1171" relation="include">
        </childnode>
      </node>
      <node id="1165">
        <label>xbee/byteorder.h</label>
        <link refid="byteorder_8h"/>
        <childnode refid="1166" relation="include">
        </childnode>
        <childnode refid="1160" relation="include">
        </childnode>
      </node>
      <node id="1173">
        <label>xbee/wpan.h</label>
        <link refid="wpan_8h"/>
        <childnode refid="1169" relation="include">
        </childnode>
        <childnode refid="1171" relation="include">
        </childnode>
      </node>
      <node id="1166">
        <label>string.h</label>
      </node>
      <node id="1171">
        <label>wpan/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="1160" relation="include">
        </childnode>
      </node>
      <node id="1160">
        <label>xbee/platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="1161" relation="include">
        </childnode>
        <childnode refid="1162" relation="include">
        </childnode>
        <childnode refid="1163" relation="include">
        </childnode>
      </node>
      <node id="1167">
        <label>xbee/sxa.h</label>
        <link refid="sxa_8h"/>
        <childnode refid="1168" relation="include">
        </childnode>
        <childnode refid="1173" relation="include">
        </childnode>
        <childnode refid="1174" relation="include">
        </childnode>
        <childnode refid="1175" relation="include">
        </childnode>
        <childnode refid="1176" relation="include">
        </childnode>
      </node>
      <node id="1168">
        <label>xbee/atcmd.h</label>
        <link refid="atcmd_8h"/>
        <childnode refid="1169" relation="include">
        </childnode>
      </node>
      <node id="1170">
        <label>xbee/serial.h</label>
        <link refid="serial_8h"/>
        <childnode refid="1160" relation="include">
        </childnode>
      </node>
      <node id="1164">
        <label>xbee/jslong.h</label>
        <link refid="jslong_8h_source"/>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___s_x_a_1ga04cec5760ca52362801366f825805a0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>_xbee_sxa_debug int</type>
        <definition>int _sxa_socket_tx_handler</definition>
        <argsstring>(struct LoopbackHandler __far *lh, ll_Gather *g)</argsstring>
        <name>_sxa_socket_tx_handler</name>
        <param>
          <type>struct LoopbackHandler __far *</type>
          <declname>lh</declname>
        </param>
        <param>
          <type>ll_Gather *</type>
          <declname>g</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rabbit/xbee_sxa_socket.c" line="130" column="1" bodyfile="src/rabbit/xbee_sxa_socket.c" bodystart="130" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="group___s_x_a_1gad08c29c9cffd4775a178909a52d93121" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _sxa_socket_rx_handler</definition>
        <argsstring>(const wpan_envelope_t FAR *envelope, wpan_ep_state_t FAR *ep_state)</argsstring>
        <name>_sxa_socket_rx_handler</name>
        <param>
          <type>const <ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>envelope</declname>
        </param>
        <param>
          <type><ref refid="structwpan__ep__state__t" kindref="compound">wpan_ep_state_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>ep_state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rabbit/xbee_sxa_socket.c" line="245" column="1" bodyfile="src/rabbit/xbee_sxa_socket.c" bodystart="245" bodyend="366"/>
      </memberdef>
      <memberdef kind="function" id="group___s_x_a_1gaacbb5ad05beda82f9f21740433c7d3f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>_xbee_sxa_debug int</type>
        <definition>int sxa_socket_init</definition>
        <argsstring>(void)</argsstring>
        <name>sxa_socket_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rabbit/xbee_sxa_socket.c" line="374" column="1" bodyfile="src/rabbit/xbee_sxa_socket.c" bodystart="374" bodyend="379"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Simple XBee API, TCP sockets over ZigBee. </para>    </briefdescription>
    <detaileddescription>
<para>An additional layer of functions for the Rabbit/Dynamic C platform. Implements reliable stream-based transport using the Rabbit TCP/IP socket API. The TCP protocol is transformed in order to run between ZigBee endpoints. This relies on custom loopback interface functionality in the Rabbit TCP/IP stack.</para><para>How it works:</para><para>For an actively opened connection, the socket is opened to 127.1.0.x (where x is the SXA node table index of the desired peer device). Source and destination ports must currently be in the range 61616 to 61871 inclusive, since the port numbers (src and dest) must be packed into a 16-bit field. The field used is the cluster ID, since cluster IDs are otherwise irrelevant for this endpoint.</para><para>For a passively opened connection (i.e. listen), port 61616 is opened. Since the socket will receive connections from any interface by default, if you want it to only accept connections over ZigBee, specify the specific interface IF_LOOPBACK when opening it.</para><para>As with any other TCP socket, you can use tcp_reserveport(61616) in order to allow queueing of multiple sessions (from distinct peer devices). (Note: you can use other ports as well for listening, up to 61871).</para><para>Given a special loopback device packet handler registered with the normal loopback device driver, TCP segments sent to the above address get intercepted and modified to remove most of the 40 odd bytes of IP and TCP header, since this is not required and wasteful given the small MTU of the ZigBee link. The only field in the IP header which is relevant is the destination IP address, which basically indexes the appropriate destination node.</para><para>The TCP header is condensed as follows: seqnum: 16 bits acknum: 16 bits flags: 4 bits window: 12 bits These 6 octets become the condensed TCP header in the ZigBee payload for the endpoint.</para><para>Sequence numbers are shortened from the normal 32 bits, by assuming that the peers keep track of the implied 16 MSBs. Since no more than a few hundred bytes in the stream could be outstanding on the network, the seq and ack numbers cannot change very much and hence the additional MSBs to make up the full 32-bit seq numbers can be implied. For safety with this truncation scheme, all socket buffers must be 32k or less. Note that the MSBs of the sequence number are supplied in the initial SYN segment, which transports the entire normal TCP header. In order to obviate the need for this level of driver to maintain the high part of the sequence numbers, the TCP socket handler (TCP.LIB) maintains the necessary state information. TCP assumes that truncated sequence numbers are used if the non-standard tcp_FlagTRUNC flag is set in the TCP header. This bit is set by the lower level driver.</para><para>Flags supports only SYN,FIN,ACK and RST. Push and URG are not used. RST (if it appears) must be alone or with ACK in order to have its usual TCP meaning. SYN+RST and FIN+RST are reserved for special use like path MTU discovery (TBD).</para><para>When the SYN flag is set, no data payload is attached, but the original (uncondensed) TCP header is supplied as the payload.</para><para>Window encodes the actual window: when the MSB is zero, the remaining bits encode the window directly, from 0 to 2047 bytes. When the MSB is 1, the LSBs (in the range 1..2047) encode a multiple of 16 bytes in the window (hence encode window 2048..32752). Windows larger than this encode as 100000000000b. When encoding from the true 16-bit window size, the next lower encodable value is used.</para><para>When SYN flag is set, no data is allowed, but the full original TCP header is supplied. In particular, the TCP options are parsed just like &quot;real&quot; TCP, although currently the Rabbit only uses the MSS. MSS is used symmetrically, as the minimum of both side&apos;s MSS option.</para><para>When reconstructing the IP and TCP headers for incoming segments, the library sets the source IP address to a suitable value depending on the peer node e.g. 127.1.0.5 if received from SXA node 5 (in its local node table). The dest IP address is set to 127.1.0.0. All other fields are reconstructed in a reasonable manner, except that IP and TCP checksums are not generated. It is assumed to be superflous given the ZigBee frame CRCs.</para><para>Determining the path MTU can be tricky. For now, it is set to 104 octets, (default definition of SXA_SOCKET_MTU, which can be overridden), but with IP and TCP header compression, this results in a TCP MSS of 64 octets. Better throughput may be obtained by experimentation. It is imperative with TCP to avoid fragmentation at lower layers.</para><para><xrefsect id="todo_1_todo000004"><xreftitle>Todo</xreftitle><xrefdescription><para>Need a better path MTU discovery mechanism.</para></xrefdescription></xrefsect></para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2011-2012<sp/>Digi<sp/>International<sp/>Inc.,</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>not<sp/>expressly<sp/>granted<sp/>are<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>Source<sp/>Code<sp/>Form<sp/>is<sp/>subject<sp/>to<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>Mozilla<sp/>Public</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>License,<sp/>v.<sp/>2.0.<sp/>If<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>MPL<sp/>was<sp/>not<sp/>distributed<sp/>with<sp/>this<sp/>file,</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>You<sp/>can<sp/>obtain<sp/>one<sp/>at<sp/>http://mozilla.org/MPL/2.0/.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>Digi<sp/>International<sp/>Inc.<sp/>11001<sp/>Bren<sp/>Road<sp/>East,<sp/>Minnetonka,<sp/>MN<sp/>55343</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>=======================================================================</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*/</highlight></codeline>
<codeline lineno="111"><highlight class="comment">/***<sp/>BeginHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="platform_8h" kindref="compound">xbee/platform.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="byteorder_8h" kindref="compound">xbee/byteorder.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sxa_8h" kindref="compound">xbee/sxa.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#use<sp/>&quot;dcrtcp.lib&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!(USE_LOOPBACK+0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#error<sp/>&quot;Use<sp/>of<sp/>sxa_socket<sp/>requires<sp/>TCPCONFIG<sp/>11/15<sp/>or<sp/>equivalent<sp/>(USE_LOOPBACK)&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(LOOPBACK_HANDLERS+0)&lt;2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#error<sp/>&quot;Use<sp/>of<sp/>sxa_socket<sp/>requires<sp/>LOOPBACK_HANDLERS<sp/>&gt;=<sp/>2&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>_sxa_socket_tx_handler<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal">_xbee_sxa_debug</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_sxa_socket_tx_handler(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>LoopbackHandler<sp/>__far<sp/>*<sp/>lh,<sp/>ll_Gather<sp/>*<sp/>g)</highlight></codeline>
<codeline lineno="131"><highlight class="normal">{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>seg[<ref refid="group___s_x_a_1ga24cd1c18c4568b532a09c4d3ae6a3700" kindref="member">SXA_SOCKET_MTU</ref>];</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__xbee__atcmd_1gade818037fd6c985038ff29656089758d" kindref="member">status</ref>;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref><sp/>env;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsxa__node__t" kindref="compound">sxa_node_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*sxa;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/>in_Header<sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*ip;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/>tcp_Header<sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*tp;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/>index;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct__sxa__sock__hdr__t" kindref="compound">_sxa_sock_hdr_t</ref><sp/>*ssh;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/>*<ref refid="group__xbee__io_1gac5955aa1e44ff234e6d78a19cf68f25c" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/>w;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/><ref refid="group__zdo_1gab2b3adeb2a67e656ff030b56727fd0ac" kindref="member">length</ref>;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/>tplen;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/>srcPort,<sp/>dstPort;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First,<sp/>make<sp/>sure<sp/>it&apos;s<sp/>TCP<sp/>over<sp/>IP.<sp/><sp/>This<sp/>handler<sp/>only<sp/>gets<sp/>called<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>loopback<sp/>interface<sp/>device<sp/>when<sp/>it<sp/>already<sp/>knows<sp/>it&apos;s<sp/>an<sp/>IP<sp/>header.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(since<sp/>the<sp/>2nd<sp/>octet<sp/>of<sp/>the<sp/>IP<sp/>dest<sp/>encodes<sp/>the<sp/>handler<sp/>number<sp/>itself).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>the<sp/>stack<sp/>guarantees<sp/>all<sp/>the<sp/>headers<sp/>are<sp/>in<sp/>the<sp/>first<sp/>extent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(data1)<sp/>of<sp/>g<sp/>and,<sp/>furthermore,<sp/>g-&gt;data2<sp/>points<sp/>to<sp/>the<sp/>first<sp/>part<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TCP<sp/>payload<sp/>itself.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/>ip<sp/>=<sp/>(in_Header<sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)g-&gt;data1;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/>if<sp/>(ip-&gt;proto<sp/>!=<sp/>TCP_PROTO)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/><sp/></highlight><highlight class="comment">//<sp/>Not<sp/>TCP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/>index<sp/>=<sp/>*((<ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)&amp;ip-&gt;destination<sp/>+<sp/>3);<sp/></highlight><highlight class="comment">//<sp/>Get<sp/>4th<sp/>octet<sp/>(net<sp/>byte<sp/>order)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/>sxa<sp/>=<sp/>sxa_node_by_index(<sp/>index);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!sxa)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>such<sp/>destination</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/>tp<sp/>=<sp/>(tcp_Header<sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)ip<sp/>+<sp/>in_GetHdrlenBytes(ip));</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/>srcPort<sp/>=<sp/>ntohs(tp-&gt;srcPort);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/>dstPort<sp/>=<sp/>ntohs(tp-&gt;dstPort);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(srcPort<sp/>&lt;<sp/>SXA_STREAM_PORT<sp/>||<sp/>srcPort<sp/>&gt;=<sp/><ref refid="group___s_x_a_1ga686d56084362bb9152a4d5e6b048b80d" kindref="member">SXA_STREAM_PORT</ref>+256<sp/>||</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dstPort<sp/>&lt;<sp/>SXA_STREAM_PORT<sp/>||<sp/>dstPort<sp/>&gt;=<sp/><ref refid="group___s_x_a_1ga686d56084362bb9152a4d5e6b048b80d" kindref="member">SXA_STREAM_PORT</ref>+256)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/><sp/></highlight><highlight class="comment">//<sp/>Can&apos;t<sp/>do<sp/>ports<sp/>outside<sp/>this<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g-&gt;len2<sp/>+<sp/>g-&gt;len3<sp/>&gt;<sp/><ref refid="group___s_x_a_1ga24cd1c18c4568b532a09c4d3ae6a3700" kindref="member">SXA_SOCKET_MTU</ref><sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*ssh))</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/><sp/></highlight><highlight class="comment">//<sp/>Can&apos;t<sp/>do<sp/>fragmentation<sp/>at<sp/>this<sp/>point.<sp/><sp/>MSS<sp/>too<sp/>long.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/>tplen<sp/>=<sp/>tcp_GetDataOffset(tp)<sp/>&lt;&lt;<sp/>2;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/>ssh<sp/>=<sp/>(<ref refid="struct__sxa__sock__hdr__t" kindref="compound">_sxa_sock_hdr_t</ref><sp/>*)seg;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/>data<sp/>=<sp/>(<ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/>*)(ssh+1);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>flags<sp/>field<sp/>with<sp/>TCP<sp/>flags<sp/>and<sp/>encoded<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/>w<sp/>=<sp/>ntohs(tp-&gt;window);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(w<sp/>&gt;=<sp/>_SXA_SOCK_WIN_RANGE&lt;&lt;_SXA_WIN_HIGH_RANGE_SHIFT)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ssh-&gt;<ref refid="struct__sxa__sock__hdr__t_1a1e87af3c18a2fd36c61faf89949bdc3f" kindref="member">flags</ref><sp/>=<sp/>_SXA_SOCK_WIN_RANGE;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(w<sp/>&gt;=<sp/>_SXA_SOCK_WIN_RANGE)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ssh-&gt;<ref refid="struct__sxa__sock__hdr__t_1a1e87af3c18a2fd36c61faf89949bdc3f" kindref="member">flags</ref><sp/>=<sp/>_SXA_SOCK_WIN_RANGE<sp/>|<sp/>w&gt;&gt;_SXA_WIN_HIGH_RANGE_SHIFT;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ssh-&gt;<ref refid="struct__sxa__sock__hdr__t_1a1e87af3c18a2fd36c61faf89949bdc3f" kindref="member">flags</ref><sp/>=<sp/>w;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/>w<sp/>=<sp/>ntohs(tp-&gt;flags);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(w<sp/>&amp;<sp/>tcp_FlagSYN)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ssh-&gt;<ref refid="struct__sxa__sock__hdr__t_1a1e87af3c18a2fd36c61faf89949bdc3f" kindref="member">flags</ref><sp/>|=<sp/>_SXA_SOCK_SYN;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(w<sp/>&amp;<sp/>tcp_FlagFIN)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ssh-&gt;<ref refid="struct__sxa__sock__hdr__t_1a1e87af3c18a2fd36c61faf89949bdc3f" kindref="member">flags</ref><sp/>|=<sp/>_SXA_SOCK_FIN;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(w<sp/>&amp;<sp/>tcp_FlagACK)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ssh-&gt;<ref refid="struct__sxa__sock__hdr__t_1a1e87af3c18a2fd36c61faf89949bdc3f" kindref="member">flags</ref><sp/>|=<sp/>_SXA_SOCK_ACK;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(w<sp/>&amp;<sp/>tcp_FlagRST)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ssh-&gt;<ref refid="struct__sxa__sock__hdr__t_1a1e87af3c18a2fd36c61faf89949bdc3f" kindref="member">flags</ref><sp/>|=<sp/>_SXA_SOCK_RST;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>sequence<sp/>and<sp/>ack<sp/>numbers<sp/>(truncated)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/>ssh-&gt;<ref refid="struct__sxa__sock__hdr__t_1a90ee27660869628b83fe9e5fdeaae7b2" kindref="member">seqnum</ref><sp/>=<sp/>(<ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref>)ntohl(tp-&gt;seqnum);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/>ssh-&gt;<ref refid="struct__sxa__sock__hdr__t_1a0758eb4120471bc74831dafe59b1f5c7" kindref="member">acknum</ref><sp/>=<sp/>(<ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref>)ntohl(tp-&gt;acknum);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ssh-&gt;<ref refid="struct__sxa__sock__hdr__t_1a1e87af3c18a2fd36c61faf89949bdc3f" kindref="member">flags</ref><sp/>&amp;<sp/>_SXA_SOCK_SYN)</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SYN,<sp/>so<sp/>copy<sp/>full<sp/>TCP<sp/>header<sp/>(i.e.<sp/>including<sp/>options<sp/>fields)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>&quot;payload&quot;<sp/>part<sp/>of<sp/>packet.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tplen<sp/>&gt;<sp/><ref refid="group___s_x_a_1ga24cd1c18c4568b532a09c4d3ae6a3700" kindref="member">SXA_SOCKET_MTU</ref><sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*ssh))</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/><sp/></highlight><highlight class="comment">//<sp/>Strange,<sp/>the<sp/>header<sp/>is<sp/>enormous!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_f_memcpy(data,<sp/>tp,<sp/>tplen);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>length<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*ssh)<sp/>+<sp/>tplen;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>data<sp/>payload<sp/>(g-&gt;data2/len2<sp/>and<sp/>possibly<sp/>g-&gt;data3/len3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_f_memcpy(data,<sp/>g-&gt;data2,<sp/>g-&gt;len2);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_f_memcpy(data<sp/>+<sp/>g-&gt;len2,<sp/>g-&gt;data3,<sp/>g-&gt;len3);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>length<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*ssh)<sp/>+<sp/>g-&gt;len2<sp/>+<sp/>g-&gt;len3;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__wpan__aps_1ga95e2bb4e4c546191c059f54179064fc3" kindref="member">wpan_envelope_create</ref>(<sp/>&amp;env,<sp/>&amp;sxa-&gt;xbee-&gt;wpan_dev,<sp/>&amp;sxa-&gt;id.ieee_addr_be,</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sxa-&gt;id.network_addr);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/>env.<ref refid="group__wpan__aps_1ga8737375e27cb391ff381fff10dc0c132" kindref="member">payload</ref><sp/>=<sp/>ssh;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/>env.<ref refid="group__wpan__aps_1ga1892eba2086d12ac2b09005aeb09ea3b" kindref="member">length</ref><sp/>=<sp/><ref refid="group__zdo_1gab2b3adeb2a67e656ff030b56727fd0ac" kindref="member">length</ref>;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/>env.<ref refid="group__wpan__aps_1ga5ca7f19e5697de2baf0e2147a41a5792" kindref="member">profile_id</ref><sp/>=<sp/><ref refid="group__wpan__aps_1gaa90d7d1301c7de503f39113eb83e93e5" kindref="member">WPAN_PROFILE_DIGI</ref>;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/>env.<ref refid="group__wpan__aps_1ga9781a5a281ee97f7f67d8ebe2c4f54db" kindref="member">source_endpoint</ref><sp/>=<sp/>env.<ref refid="group__wpan__aps_1ga0992896b3999455a300e8ba25c368ae8" kindref="member">dest_endpoint</ref><sp/>=<sp/><ref refid="group___s_x_a_1ga1d3ed304c9ba526771772782f6f446e5" kindref="member">WPAN_ENDPOINT_DIGI_STREAM</ref>;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Source<sp/>and<sp/>destination<sp/>port<sp/>numbers<sp/>are<sp/>packed<sp/>into<sp/>the<sp/>cluseter<sp/>ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/>env.<ref refid="group__wpan__aps_1ga262a92f94287e77cb56350951893bae2" kindref="member">cluster_id</ref><sp/>=<sp/>(srcPort-<ref refid="group___s_x_a_1ga686d56084362bb9152a4d5e6b048b80d" kindref="member">SXA_STREAM_PORT</ref>)&lt;&lt;8<sp/>|<sp/>(dstPort-<ref refid="group___s_x_a_1ga686d56084362bb9152a4d5e6b048b80d" kindref="member">SXA_STREAM_PORT</ref>);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SXA_SOCKET_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;SXA<sp/>Socket:<sp/>%u<sp/>bytes<sp/>to<sp/>&apos;%ls&apos;:\n&quot;</highlight><highlight class="normal">,<sp/>env.<ref refid="group__wpan__aps_1ga1892eba2086d12ac2b09005aeb09ea3b" kindref="member">length</ref>,<sp/>sxa-&gt;id.node_info);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__util_1gaa321236a0cb6f4e0dad592fdf1b550d2" kindref="member">hex_dump</ref>(<sp/>env.<ref refid="group__wpan__aps_1ga8737375e27cb391ff381fff10dc0c132" kindref="member">payload</ref>,<sp/>env.<ref refid="group__wpan__aps_1ga1892eba2086d12ac2b09005aeb09ea3b" kindref="member">length</ref>,<sp/><ref refid="group__hal_1ga696f6553e33cbd20eda34e220ec9939a" kindref="member">HEX_DUMP_FLAG_TAB</ref>);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__wpan__aps_1ga06f1e9e86b74ef807ded44b79b13e283" kindref="member">wpan_envelope_send</ref>(<sp/>&amp;env);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>wpan_envelope_send()<sp/>returns,<sp/>the<sp/>packet<sp/>has<sp/>been<sp/>moved<sp/>to<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>serial<sp/>port<sp/>output<sp/>buffer,<sp/>so<sp/>env<sp/>and<sp/>the<sp/>payload<sp/>do<sp/>not<sp/>have<sp/>to<sp/>be<sp/>static.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status<sp/>?<sp/>-1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>_sxa_socket_rx_handler<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_sxa_socket_rx_handler(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*envelope,</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwpan__ep__state__t" kindref="compound">wpan_ep_state_t</ref><sp/><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/><sp/><sp/>*ep_state)</highlight></codeline>
<codeline lineno="247"><highlight class="normal">{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/>headers[80];</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><ref refid="structxbee__node__id__t" kindref="compound">xbee_node_id_t</ref><sp/>ni;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/>in_Header<sp/>*ip;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/>tcp_Header<sp/>*tp;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><ref refid="structsxa__node__t" kindref="compound">sxa_node_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*sxa;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct__sxa__sock__hdr__t" kindref="compound">_sxa_sock_hdr_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*ssh;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*<ref refid="group__xbee__io_1gac5955aa1e44ff234e6d78a19cf68f25c" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/><ref refid="group__zdo_1gab2b3adeb2a67e656ff030b56727fd0ac" kindref="member">length</ref>;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/>w;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/>ra;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/>ll_Gather<sp/>g;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/>srcPort,<sp/>dstPort;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/>sxa<sp/>=<sp/>sxa_node_by_addr(<sp/>&amp;envelope-&gt;ieee_address);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SXA_SOCKET_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;SXA<sp/>Socket:<sp/>%u<sp/>bytes<sp/>from<sp/>&quot;</highlight><highlight class="normal">,<sp/>envelope-&gt;length);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sxa<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;&apos;%ls&apos;:\n&quot;</highlight><highlight class="normal">,<sp/>sxa-&gt;id.node_info);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;0x%04x:\n&quot;</highlight><highlight class="normal">,<sp/>envelope-&gt;network_address);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__util_1gaa321236a0cb6f4e0dad592fdf1b550d2" kindref="member">hex_dump</ref>(<sp/>envelope-&gt;payload,<sp/>envelope-&gt;length,<sp/><ref refid="group__hal_1ga696f6553e33cbd20eda34e220ec9939a" kindref="member">HEX_DUMP_FLAG_TAB</ref>);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!sxa)</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Peer<sp/>node<sp/>is<sp/>not<sp/>in<sp/>our<sp/>table.<sp/><sp/>Add<sp/>new<sp/>entry<sp/>based<sp/>on<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>available<sp/>information.<sp/><sp/>The<sp/>unknown<sp/>stuff<sp/>can<sp/>be<sp/>filled<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>an<sp/>ATND<sp/>is<sp/>issued.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ni.<ref refid="group__xbee__discovery_1ga719f89263ecae9f127dc655c1c14fdac" kindref="member">ieee_addr_be</ref><sp/>=<sp/>envelope-&gt;ieee_address;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ni.<ref refid="group__xbee__discovery_1gac1fa8be8752da585fe6a567d4732c147" kindref="member">network_addr</ref><sp/>=<sp/>envelope-&gt;network_address;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ni.<ref refid="group__xbee__discovery_1ga300e014f0c31d08adc1145613e0b0f72" kindref="member">parent_addr</ref><sp/>=<sp/><ref refid="group__wpan__types_1ga1674d7b825e528a482725d1c06b02c10" kindref="member">WPAN_NET_ADDR_UNDEFINED</ref>;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ni.<ref refid="group__xbee__discovery_1gab9c960832b7e834e6657e0c6ab4c3d8a" kindref="member">device_type</ref><sp/>=<sp/>0xFF;<sp/><sp/></highlight><highlight class="comment">//<sp/>unknown</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ni.<ref refid="group__xbee__discovery_1gaa667bab3abb953bc14d9f5bcc36644b8" kindref="member">node_info</ref>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sxa<sp/>=<sp/>sxa_node_add(<sp/>(<ref refid="structxbee__dev__t" kindref="compound">xbee_dev_t</ref><sp/>*)envelope-&gt;dev,<sp/>&amp;ni);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!sxa)</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>should<sp/>never<sp/>happen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_sxa_set_cache_status(sxa,<sp/>NULL,<sp/><ref refid="group___s_x_a_1ggabed82baf7f470b522273a3e37c24c600a8d6b7f78660e6b7da06d0fa99dfb6df6" kindref="member">SXA_CACHED_NODE_ID</ref>,<sp/><ref refid="group___s_x_a_1gga0411cd49bb5b71852cecd93bcbf0ca2da16320fc3c50be3823236003df46858b5" kindref="member">_SXA_CACHED_UNKNOWN</ref>);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/>srcPort<sp/>=<sp/>(envelope-&gt;cluster_id&gt;&gt;8)+<ref refid="group___s_x_a_1ga686d56084362bb9152a4d5e6b048b80d" kindref="member">SXA_STREAM_PORT</ref>;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/>dstPort<sp/>=<sp/>(envelope-&gt;cluster_id&amp;0xFF)+<ref refid="group___s_x_a_1ga686d56084362bb9152a4d5e6b048b80d" kindref="member">SXA_STREAM_PORT</ref>;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/>length<sp/>=<sp/>envelope-&gt;length;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/>ssh<sp/>=<sp/>(<ref refid="struct__sxa__sock__hdr__t" kindref="compound">_sxa_sock_hdr_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)envelope-&gt;payload;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/>if<sp/>(length<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*ssh))</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Too<sp/>short<sp/>to<sp/>be<sp/>legitimate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/>data<sp/>=<sp/>(<ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)ssh<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*ssh);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reconstruct<sp/>fake<sp/>IP<sp/>and<sp/>somewhat<sp/>fake<sp/>TCP<sp/>headers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/>ip<sp/>=<sp/>(in_Header<sp/>*)headers;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/>tp<sp/>=<sp/>(tcp_Header<sp/>*)(ip<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/>g.data1<sp/>=<sp/>headers;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/>g.len3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/>memset(headers,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*ip)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*tp));</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/>ip-&gt;ver_hdrlen<sp/>=<sp/>0x45;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/>ip-&gt;ttl<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/>ip-&gt;proto<sp/>=<sp/>TCP_PROTO;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/>ip-&gt;source<sp/>=<sp/>htonl(IPADDR(127,1,0,sxa-&gt;index));</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/>ip-&gt;destination<sp/>=<sp/>htonl(IPADDR(127,1,0,0));</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ssh-&gt;flags<sp/>&amp;<sp/>_SXA_SOCK_SYN)</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>SYN<sp/>flag,<sp/>payload<sp/>is<sp/>original<sp/>TCP<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(length<sp/>&gt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(headers)-</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*ip)+</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*ssh))</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Hack!<sp/>TCP<sp/>header<sp/>ginormous.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_f_memcpy(tp,<sp/>data,<sp/>length<sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*ssh));</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>g.len1<sp/>=<sp/>length<sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*ssh)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*ip);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>g.len2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ip-&gt;length<sp/>=<sp/>htons(g.len1);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SXA_SOCKET_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;SXA<sp/>Socket:<sp/>got<sp/>SYN<sp/>(hdrlen=%d)\n&quot;</highlight><highlight class="normal">,<sp/>g.len1);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>g.len1<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*ip)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*tp);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>g.data2<sp/>=<sp/><ref refid="group__xbee__io_1gac5955aa1e44ff234e6d78a19cf68f25c" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>g.len2<sp/>=<sp/>length<sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*ssh);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ip-&gt;length<sp/>=<sp/>htons(g.len2<sp/>+<sp/>g.len1);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tp-&gt;srcPort<sp/>=<sp/>htons(srcPort);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tp-&gt;dstPort<sp/>=<sp/>htons(dstPort);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tp-&gt;seqnum<sp/>=<sp/>htonl(ssh-&gt;seqnum);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tp-&gt;acknum<sp/>=<sp/>htonl(ssh-&gt;acknum);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>non-RFC793<sp/>flag<sp/>to<sp/>indicate<sp/>shortened<sp/>seq<sp/>numbers...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tp-&gt;flags<sp/>=<sp/>htons(tcp_FlagTRUNC<sp/>|<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*tp)&gt;&gt;2)&lt;&lt;12);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ssh-&gt;flags<sp/>&amp;<sp/>_SXA_SOCK_FIN)</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tp-&gt;flags<sp/>|=<sp/>htons(tcp_FlagFIN);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ssh-&gt;flags<sp/>&amp;<sp/>_SXA_SOCK_ACK)</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tp-&gt;flags<sp/>|=<sp/>htons(tcp_FlagACK);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ssh-&gt;flags<sp/>&amp;<sp/>_SXA_SOCK_RST)</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tp-&gt;flags<sp/>|=<sp/>htons(tcp_FlagRST);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ra<sp/>=<sp/>ssh-&gt;flags<sp/>&amp;<sp/>_SXA_SOCK_WIN_RANGE;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>=<sp/>ssh-&gt;flags<sp/>&amp;<sp/>_SXA_SOCK_WIN_COUNT;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ra<sp/>&amp;&amp;<sp/>!w)</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tp-&gt;window<sp/>=<sp/>htons(_SXA_SOCK_WIN_RANGE&lt;&lt;_SXA_WIN_HIGH_RANGE_SHIFT);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ra)</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tp-&gt;window<sp/>=<sp/>htons(w<sp/>&lt;&lt;<sp/>_SXA_WIN_HIGH_RANGE_SHIFT);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tp-&gt;window<sp/>=<sp/>htons(w);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SXA_SOCKET_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;SXA<sp/>Socket:<sp/>got<sp/>seq=%lu<sp/>ack=%lu<sp/>win=%u<sp/>hdrlen=%u<sp/>datalen=%u\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ntohl(tp-&gt;seqnum),<sp/>ntohl(tp-&gt;acknum),<sp/>ntohs(tp-&gt;window),</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.len1,<sp/>g.len2);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>to<sp/>network<sp/>receive<sp/>buffers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/>loopback_stowpacket(&amp;g);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="366"><highlight class="normal">}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>sxa_socket_init<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal">_xbee_sxa_debug</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sxa_socket_init(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="375"><highlight class="normal">{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/>_lodata[0].loh[LOH_XBEE_STREAM].sendpacket<sp/>=<sp/>_sxa_socket_tx_handler;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/>_lodata[0].loh[LOH_XBEE_STREAM].mtu<sp/>=<sp/><ref refid="group___s_x_a_1ga24cd1c18c4568b532a09c4d3ae6a3700" kindref="member">SXA_SOCKET_MTU</ref>;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="379"><highlight class="normal">}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/rabbit/xbee_sxa_socket.c"/>
  </compounddef>
</doxygen>
