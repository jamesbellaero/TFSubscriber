<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="xbee__platform__rabbit_8c" kind="file" language="C++">
    <compoundname>xbee_platform_rabbit.c</compoundname>
    <includes refid="platform_8h" local="yes">xbee/platform.h</includes>
    <incdepgraph>
      <node id="1144">
        <label>errno.h</label>
      </node>
      <node id="1146">
        <label>xbee/jslong_glue.h</label>
        <link refid="jslong__glue_8h_source"/>
        <childnode refid="1147" relation="include">
        </childnode>
      </node>
      <node id="1145">
        <label>stddef.h</label>
      </node>
      <node id="1143">
        <label>xbee/platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="1144" relation="include">
        </childnode>
        <childnode refid="1145" relation="include">
        </childnode>
        <childnode refid="1146" relation="include">
        </childnode>
      </node>
      <node id="1142">
        <label>src/rabbit/xbee_platform_rabbit.c</label>
        <link refid="xbee__platform__rabbit_8c"/>
        <childnode refid="1143" relation="include">
        </childnode>
      </node>
      <node id="1147">
        <label>xbee/jslong.h</label>
        <link refid="jslong_8h_source"/>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__hal__rabbit_1gae8fb830d9a707a0f6d60a2c480ed7dfc" prot="public" static="no">
        <name>xbee_seconds_timer</name>
        <param><defname>void</defname></param>
        <initializer>(SEC_TIMER + 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rabbit/xbee_platform_rabbit.c" line="26" column="9" bodyfile="src/rabbit/xbee_platform_rabbit.c" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hal__rabbit_1gae68dcfee6e7c24b7a401c769c3fc1dd0" prot="public" static="no">
        <name>xbee_millisecond_timer</name>
        <param><defname>void</defname></param>
        <initializer>(MS_TIMER + 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rabbit/xbee_platform_rabbit.c" line="35" column="9" bodyfile="src/rabbit/xbee_platform_rabbit.c" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hal__rabbit_1gab5b9fab5902286c1bb085bfd9dfe9db0" prot="public" static="no">
        <name>xbee_readline</name>
        <param><defname>buffer</defname></param>
        <param><defname>length</defname></param>
        <initializer>getsn_tick(buffer, <ref refid="group__zdo_1gab2b3adeb2a67e656ff030b56727fd0ac" kindref="member">length</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rabbit/xbee_platform_rabbit.c" line="110" column="9" bodyfile="src/rabbit/xbee_platform_rabbit.c" bodystart="110" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__hal__rabbit_1ga02da89986736815045b1a11e1c58733e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref></type>
        <definition>__nodebug uint8_t _xbee_checksum_inline</definition>
        <argsstring>(const void __far *bytes, uint_fast8_t length, uint_fast8_t initial)</argsstring>
        <name>_xbee_checksum_inline</name>
        <param>
          <type>const void __far *</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref></type>
          <declname>length</declname>
        </param>
        <param>
          <type>uint_fast8_t</type>
          <declname>initial</declname>
        </param>
        <briefdescription>
<para>Rabbit-assembly version of <ref refid="group__xbee__device_1gae8a32665036083d3a236fcde4359cc79" kindref="member">_xbee_checksum()</ref>. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rabbit/xbee_platform_rabbit.c" line="44" column="1" bodyfile="src/rabbit/xbee_platform_rabbit.c" bodystart="52" bodyend="78"/>
        <references refid="group__zdo_1gab2b3adeb2a67e656ff030b56727fd0ac" compoundref="zdo_8h" startline="410">length</references>
      </memberdef>
      <memberdef kind="function" id="group__hal__rabbit_1ga23fd4d4005a80a26ff3c6ba23a4af560" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _swapcpy</definition>
        <argsstring>(void FAR *dst, const void FAR *src, uint_fast8_t bytes)</argsstring>
        <name>_swapcpy</name>
        <param>
          <type>void <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const void <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint_fast8_t</type>
          <declname>bytes</declname>
          <defname>count</defname>
        </param>
        <briefdescription>
<para>Function similar to memcpy() but reverses byte order during copy. Copy <emphasis>count</emphasis> from <emphasis>src</emphasis> to <emphasis>dst</emphasis> while reversing the order. Assumes that <emphasis>src</emphasis> and <emphasis>dst</emphasis> do not overlap. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">dst</parametername>
</parameternamelist>
<parameterdescription>
<para>destination buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>source buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">count</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes to copy </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/rabbit/xbee_platform_rabbit.c" line="83" column="1" bodyfile="src/rabbit/xbee_platform_rabbit.c" bodystart="83" bodyend="106"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Platform-specific functions for use by the XBee Driver on Rabbit/Dynamic C platform. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2010<sp/>Digi<sp/>International<sp/>Inc.,</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>not<sp/>expressly<sp/>granted<sp/>are<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>Source<sp/>Code<sp/>Form<sp/>is<sp/>subject<sp/>to<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>Mozilla<sp/>Public</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>License,<sp/>v.<sp/>2.0.<sp/>If<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>MPL<sp/>was<sp/>not<sp/>distributed<sp/>with<sp/>this<sp/>file,</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>You<sp/>can<sp/>obtain<sp/>one<sp/>at<sp/>http://mozilla.org/MPL/2.0/.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>Digi<sp/>International<sp/>Inc.<sp/>11001<sp/>Bren<sp/>Road<sp/>East,<sp/>Minnetonka,<sp/>MN<sp/>55343</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>=======================================================================</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*/</highlight></codeline>
<codeline lineno="20"><highlight class="comment">/***<sp/>BeginHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="platform_8h" kindref="compound">xbee/platform.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#use<sp/>&quot;jslong.c&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>xbee_seconds_timer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>xbee_seconds_timer()<sp/>(SEC_TIMER<sp/>+<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal">__nodebug</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><ref refid="group__hal__dos_1ga09a1e304d66d35dd47daffee9731edaa" kindref="member">uint32_t</ref><sp/>(xbee_seconds_timer)(<sp/>void)</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEC_TIMER;</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>xbee_millisecond_timer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>xbee_millisecond_timer()<sp/>(MS_TIMER<sp/>+<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal">__nodebug</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><ref refid="group__hal__dos_1ga09a1e304d66d35dd47daffee9731edaa" kindref="member">uint32_t</ref><sp/>(xbee_millisecond_timer)(<sp/>void)</highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MS_TIMER;</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>_xbee_checksum_inline<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><ref refid="group__hal__rabbit_1ga02da89986736815045b1a11e1c58733e" kindref="member">_xbee_checksum_inline</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__far<sp/>*bytes,<sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/><ref refid="group__zdo_1gab2b3adeb2a67e656ff030b56727fd0ac" kindref="member">length</ref>,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/>uint_fast8_t<sp/>initial);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight></codeline>
<codeline lineno="51"><highlight class="normal">__nodebug</highlight></codeline>
<codeline lineno="52" refid="group__hal__rabbit_1ga02da89986736815045b1a11e1c58733e" refkind="member"><highlight class="normal"><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><ref refid="group__hal__rabbit_1ga02da89986736815045b1a11e1c58733e" kindref="member">_xbee_checksum_inline</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__far<sp/>*bytes,<sp/>uint_fast8_t<sp/><ref refid="group__zdo_1gab2b3adeb2a67e656ff030b56727fd0ac" kindref="member">length</ref>,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/>uint_fast8_t<sp/>initial)</highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#asm<sp/>__nodebug</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>;<sp/>px<sp/>already<sp/>contains<sp/>address<sp/>of<sp/>buffer</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ld<sp/><sp/><sp/><sp/>hl,<sp/>(sp+@SP+<ref refid="group__zdo_1gab2b3adeb2a67e656ff030b56727fd0ac" kindref="member">length</ref>)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ld<sp/><sp/><sp/><sp/>bc,<sp/>hl</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ld<sp/><sp/><sp/><sp/>hl,<sp/>(sp+@SP+initial)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>test<sp/><sp/>bc</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>jr<sp/><sp/><sp/><sp/>z,<sp/>.done<sp/><sp/><sp/><sp/><sp/><sp/><sp/>;<sp/>no<sp/>bytes<sp/>to<sp/>sum</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ld<sp/><sp/><sp/><sp/>a,<sp/>L<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;<sp/>copy<sp/>checksum<sp/>from<sp/>L<sp/>to<sp/>a</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>;<sp/>Loop<sp/>through<sp/>the<sp/>bytes<sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>BC<sp/>as<sp/>index.<sp/><sp/>Since<sp/>index<sp/>will<sp/>run</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>;<sp/>from<sp/>&lt;count&gt;<sp/>down<sp/>to<sp/>1<sp/>(instead<sp/>of<sp/>zero),<sp/>need<sp/>to<sp/>decrement<sp/>px</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>;<sp/>before<sp/>looping.</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ld<sp/><sp/><sp/><sp/>px,<sp/>px<sp/>-<sp/>1</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/>.loop:</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ld<sp/><sp/><sp/><sp/>hl,<sp/>(px<sp/>+<sp/>bc)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sub<sp/><sp/><sp/>a,<sp/>L</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dwjnz<sp/>.loop</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ld<sp/><sp/><sp/><sp/>L,<sp/>a<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;<sp/>copy<sp/>checksum<sp/>back<sp/>to<sp/>L</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/>.done:</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ld<sp/><sp/><sp/><sp/>h,<sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;<sp/>zero<sp/>out<sp/>top<sp/>byte</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lret</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endasm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>_swapcpy<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//<sp/>documented<sp/>in<sp/>xbee/byteorder.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="group__hal__rabbit_1ga23fd4d4005a80a26ff3c6ba23a4af560" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__hal__rabbit_1ga23fd4d4005a80a26ff3c6ba23a4af560" kindref="member">_swapcpy</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*dst,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*src,<sp/>uint_fast8_t<sp/>bytes)</highlight></codeline>
<codeline lineno="84"><highlight class="normal">{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>Use<sp/>PX<sp/>as<sp/>pointer<sp/>into<sp/>destination<sp/>and<sp/>PY<sp/>as<sp/>pointer<sp/>into<sp/>source.</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>Increment<sp/>PX<sp/>after<sp/>each<sp/>read,<sp/>and<sp/>use<sp/>PY+HL<sp/>addressing<sp/>on<sp/>the<sp/>source.</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>HL<sp/>starts<sp/>with<sp/>the<sp/>number<sp/>of<sp/>bytes<sp/>to<sp/>copy;<sp/>by<sp/>pre-decrementing<sp/>it</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>we&apos;ll<sp/>start<sp/>with<sp/>the<sp/>last<sp/>byte<sp/>of<sp/>the<sp/>source<sp/>to<sp/>copy.</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#asm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>;<sp/>px<sp/>already<sp/>contains<sp/>dst</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ld<sp/><sp/><sp/><sp/>py,<sp/>(sp+@SP+src)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ld<sp/><sp/><sp/><sp/>hl,<sp/>(sp+@SP+bytes)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>test<sp/><sp/>hl</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>jr<sp/><sp/><sp/><sp/>z,<sp/>.done</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ld<sp/><sp/><sp/><sp/>bc,<sp/>hl</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/>.loop:</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dec<sp/><sp/><sp/>hl<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;<sp/>move<sp/>to<sp/>next<sp/>byte<sp/>of<sp/>source</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ld<sp/><sp/><sp/><sp/>a,<sp/>(py<sp/>+<sp/>hl)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ld<sp/><sp/><sp/><sp/>(px),<sp/>a</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ld<sp/><sp/><sp/><sp/>px,<sp/>px<sp/>+<sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;<sp/>move<sp/>to<sp/>next<sp/>byte<sp/>of<sp/>destination</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dwjnz<sp/>.loop</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/>.done:</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endasm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>xbee_readline(buffer,<sp/>length)<sp/>getsn_tick(buffer,<sp/>length)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/rabbit/xbee_platform_rabbit.c"/>
  </compounddef>
</doxygen>
