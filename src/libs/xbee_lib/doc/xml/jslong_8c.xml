<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="jslong_8c" kind="file" language="C++">
    <compoundname>jslong.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="platform_8h" local="yes">xbee/platform.h</includes>
    <includedby refid="xbee__platform__dos_8c" local="yes">src/dos/xbee_platform_dos.c</includedby>
    <incdepgraph>
      <node id="1199">
        <label>errno.h</label>
      </node>
      <node id="1201">
        <label>xbee/jslong_glue.h</label>
        <link refid="jslong__glue_8h_source"/>
        <childnode refid="1202" relation="include">
        </childnode>
      </node>
      <node id="1200">
        <label>stddef.h</label>
      </node>
      <node id="1195">
        <label>src/util/jslong.c</label>
        <link refid="jslong_8c"/>
        <childnode refid="1196" relation="include">
        </childnode>
        <childnode refid="1197" relation="include">
        </childnode>
        <childnode refid="1198" relation="include">
        </childnode>
      </node>
      <node id="1197">
        <label>string.h</label>
      </node>
      <node id="1198">
        <label>xbee/platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="1199" relation="include">
        </childnode>
        <childnode refid="1200" relation="include">
        </childnode>
        <childnode refid="1201" relation="include">
        </childnode>
      </node>
      <node id="1202">
        <label>xbee/jslong.h</label>
        <link refid="jslong_8h_source"/>
      </node>
      <node id="1196">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1203">
        <label>src/util/jslong.c</label>
        <link refid="jslong_8c"/>
        <childnode refid="1204" relation="include">
        </childnode>
      </node>
      <node id="1204">
        <label>src/dos/xbee_platform_dos.c</label>
        <link refid="xbee__platform__dos_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__zcl__64_1ga82d69c4b59ebfde1f784f7d30246e575" prot="public" static="no">
        <name>jslo16</name>
        <param><defname>a</defname></param>
        <initializer>((a) &amp; 0x0000FFFF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/util/jslong.c" line="58" column="9" bodyfile="src/util/jslong.c" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__zcl__64_1ga50ea98cec1c7c8393b65115d0bd756f9" prot="public" static="no">
        <name>jshi16</name>
        <param><defname>a</defname></param>
        <initializer>((<ref refid="group__hal__dos_1ga09a1e304d66d35dd47daffee9731edaa" kindref="member">uint32_t</ref>)(a) &gt;&gt; 16)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/util/jslong.c" line="59" column="9" bodyfile="src/util/jslong.c" bodystart="59" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__zcl__64_1ga09e45168abb5ea8e6d487514eae102c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jsll_mul</definition>
        <argsstring>(JSUint64 *rp, JSUint64 a, JSUint64 b)</argsstring>
        <name>jsll_mul</name>
        <param>
          <type><ref refid="struct_j_s_int64" kindref="compound">JSUint64</ref> *</type>
          <declname>rp</declname>
        </param>
        <param>
          <type><ref refid="struct_j_s_int64" kindref="compound">JSUint64</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="struct_j_s_int64" kindref="compound">JSUint64</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/util/jslong.c" line="64" column="1" bodyfile="src/util/jslong.c" bodystart="64" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="group__zcl__64_1ga0b4ed4198b603054301a4c9147e5f060" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jsll_mul32</definition>
        <argsstring>(JSUint64 *rp, JSUint32 a, JSUint32 b)</argsstring>
        <name>jsll_mul32</name>
        <param>
          <type><ref refid="struct_j_s_int64" kindref="compound">JSUint64</ref> *</type>
          <declname>rp</declname>
        </param>
        <param>
          <type>JSUint32</type>
          <declname>a</declname>
        </param>
        <param>
          <type>JSUint32</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/util/jslong.c" line="72" column="1" bodyfile="src/util/jslong.c" bodystart="72" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="group__zcl__64_1gae8fbc6ec799a7c5568d9da44efbc3070" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void norm_udivmod32</definition>
        <argsstring>(JSUint32 *qp, JSUint32 *rp, JSUint64 a, JSUint32 b)</argsstring>
        <name>norm_udivmod32</name>
        <param>
          <type>JSUint32 *</type>
          <declname>qp</declname>
        </param>
        <param>
          <type>JSUint32 *</type>
          <declname>rp</declname>
        </param>
        <param>
          <type><ref refid="struct_j_s_int64" kindref="compound">JSUint64</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>JSUint32</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/util/jslong.c" line="97" column="1" bodyfile="src/util/jslong.c" bodystart="97" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="group__zcl__64_1gab4827dc16aa30faa37afaac7e9c87490" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint_fast8_t</type>
        <definition>static uint_fast8_t CountLeadingZeros</definition>
        <argsstring>(JSUint32 a)</argsstring>
        <name>CountLeadingZeros</name>
        <param>
          <type>JSUint32</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/util/jslong.c" line="134" column="1" bodyfile="src/util/jslong.c" bodystart="134" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="group__zcl__64_1ga26cb84da9083907cc41db0edf95b1b96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jsll_udivmod</definition>
        <argsstring>(JSUint64 *qp, JSUint64 *rp, JSUint64 a, JSUint64 b)</argsstring>
        <name>jsll_udivmod</name>
        <param>
          <type><ref refid="struct_j_s_int64" kindref="compound">JSUint64</ref> *</type>
          <declname>qp</declname>
        </param>
        <param>
          <type><ref refid="struct_j_s_int64" kindref="compound">JSUint64</ref> *</type>
          <declname>rp</declname>
        </param>
        <param>
          <type><ref refid="struct_j_s_int64" kindref="compound">JSUint64</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="struct_j_s_int64" kindref="compound">JSUint64</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/util/jslong.c" line="157" column="1" bodyfile="src/util/jslong.c" bodystart="157" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="group__zcl__64_1gaf40c23a4a3872380497dae260ea58554" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jsll_div</definition>
        <argsstring>(JSUint64 *r, const JSUint64 *a, const JSUint64 *b)</argsstring>
        <name>jsll_div</name>
        <param>
          <type><ref refid="struct_j_s_int64" kindref="compound">JSUint64</ref> *</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="struct_j_s_int64" kindref="compound">JSUint64</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="struct_j_s_int64" kindref="compound">JSUint64</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/util/jslong.c" line="323" column="1" bodyfile="src/util/jslong.c" bodystart="323" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="group__zcl__64_1gaecddfb7e3ca39fa5313632c47a47f20c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jsll_mod</definition>
        <argsstring>(JSUint64 *r, const JSUint64 *a, const JSUint64 *b)</argsstring>
        <name>jsll_mod</name>
        <param>
          <type><ref refid="struct_j_s_int64" kindref="compound">JSUint64</ref> *</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="struct_j_s_int64" kindref="compound">JSUint64</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="struct_j_s_int64" kindref="compound">JSUint64</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/util/jslong.c" line="352" column="1" bodyfile="src/util/jslong.c" bodystart="352" bodyend="374"/>
      </memberdef>
      <memberdef kind="function" id="group__zcl__64_1gadbc8463d4ec9862cbb621cdd5f7297fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jsll_shl</definition>
        <argsstring>(JSUint64 *r, JSUint64 a, uint_fast8_t b)</argsstring>
        <name>jsll_shl</name>
        <param>
          <type><ref refid="struct_j_s_int64" kindref="compound">JSUint64</ref> *</type>
          <declname>r</declname>
        </param>
        <param>
          <type><ref refid="struct_j_s_int64" kindref="compound">JSUint64</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>uint_fast8_t</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/util/jslong.c" line="378" column="1" bodyfile="src/util/jslong.c" bodystart="378" bodyend="395"/>
      </memberdef>
      <memberdef kind="function" id="group__zcl__64_1gab406a00beab4086e1f29bfa6c98e0e6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jsll_shr</definition>
        <argsstring>(JSInt64 *r, JSInt64 a, uint_fast8_t b)</argsstring>
        <name>jsll_shr</name>
        <param>
          <type><ref refid="struct_j_s_int64" kindref="compound">JSInt64</ref> *</type>
          <declname>r</declname>
        </param>
        <param>
          <type><ref refid="struct_j_s_int64" kindref="compound">JSInt64</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>uint_fast8_t</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/util/jslong.c" line="399" column="1" bodyfile="src/util/jslong.c" bodystart="399" bodyend="416"/>
      </memberdef>
      <memberdef kind="function" id="group__zcl__64_1gaab6291a66e18f75aa28dd777cb66d49b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jsll_ushr</definition>
        <argsstring>(JSInt64 *r, JSInt64 a, uint_fast8_t b)</argsstring>
        <name>jsll_ushr</name>
        <param>
          <type><ref refid="struct_j_s_int64" kindref="compound">JSInt64</ref> *</type>
          <declname>r</declname>
        </param>
        <param>
          <type><ref refid="struct_j_s_int64" kindref="compound">JSInt64</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>uint_fast8_t</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/util/jslong.c" line="420" column="1" bodyfile="src/util/jslong.c" bodystart="420" bodyend="437"/>
      </memberdef>
      <memberdef kind="function" id="group__zcl__64_1gaaeb3f577d08fb658090c74ce03da319a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int jsll_decstr</definition>
        <argsstring>(char *buffer, const JSInt64 *v)</argsstring>
        <name>jsll_decstr</name>
        <param>
          <type>char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const <ref refid="struct_j_s_int64" kindref="compound">JSInt64</ref> *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/util/jslong.c" line="441" column="1" bodyfile="src/util/jslong.c" bodystart="441" bodyend="453"/>
      </memberdef>
      <memberdef kind="function" id="group__zcl__64_1gaf41ea39427421502a4c90a5cd5f62cb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int jsll_udecstr</definition>
        <argsstring>(char *buffer, const JSUint64 *v)</argsstring>
        <name>jsll_udecstr</name>
        <param>
          <type>char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const <ref refid="struct_j_s_int64" kindref="compound">JSUint64</ref> *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/util/jslong.c" line="461" column="1" bodyfile="src/util/jslong.c" bodystart="461" bodyend="501"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>Mode:<sp/>C++;<sp/>tab-width:<sp/>4;<sp/>indent-tabs-mode:<sp/>nil;<sp/>c-basic-offset:<sp/>2<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>a<sp/>modified<sp/>version<sp/>of<sp/>jslong.c<sp/>Rev<sp/>3.11<sp/>from<sp/>mozilla.org,<sp/>with<sp/>as</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/>few<sp/>changes<sp/>as<sp/>possible.<sp/><sp/>The<sp/>original<sp/>file<sp/>is<sp/>available<sp/>here:</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>http://mxr.mozilla.org/mozilla/source/js/src/jslong.c</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/>Do<sp/>not<sp/>link<sp/>it<sp/>with<sp/>your<sp/>project,<sp/>it<sp/>is<sp/>included<sp/>automatically<sp/>by<sp/>the</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/>platform_xxx.c<sp/>file<sp/>on<sp/>platforms<sp/>that<sp/>don&apos;t<sp/>have<sp/>native<sp/>64-bit<sp/>integers.</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*/</highlight></codeline>
<codeline lineno="14"><highlight class="comment">/*<sp/>*****<sp/>BEGIN<sp/>LICENSE<sp/>BLOCK<sp/>*****</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>Version:<sp/>MPL<sp/>1.1/GPL<sp/>2.0/LGPL<sp/>2.1</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>The<sp/>contents<sp/>of<sp/>this<sp/>file<sp/>are<sp/>subject<sp/>to<sp/>the<sp/>Mozilla<sp/>Public<sp/>License<sp/>Version</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>1.1<sp/>(the<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>the<sp/>License.<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>http://www.mozilla.org/MPL/</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>Software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>basis,</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/>See<sp/>the<sp/>License</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>rights<sp/>and<sp/>limitations<sp/>under<sp/>the</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>License.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>The<sp/>Original<sp/>Code<sp/>is<sp/>Mozilla<sp/>Communicator<sp/>client<sp/>code,<sp/>released</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>March<sp/>31,<sp/>1998.</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>The<sp/>Initial<sp/>Developer<sp/>of<sp/>the<sp/>Original<sp/>Code<sp/>is</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>Netscape<sp/>Communications<sp/>Corporation.</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>Portions<sp/>created<sp/>by<sp/>the<sp/>Initial<sp/>Developer<sp/>are<sp/>Copyright<sp/>(C)<sp/>1998</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/>the<sp/>Initial<sp/>Developer.<sp/>All<sp/>Rights<sp/>Reserved.</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>Contributor(s):</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>Alternatively,<sp/>the<sp/>contents<sp/>of<sp/>this<sp/>file<sp/>may<sp/>be<sp/>used<sp/>under<sp/>the<sp/>terms<sp/>of</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>either<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>Version<sp/>2<sp/>or<sp/>later<sp/>(the<sp/>&quot;GPL&quot;),</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>or<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>Version<sp/>2.1<sp/>or<sp/>later<sp/>(the<sp/>&quot;LGPL&quot;),</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>in<sp/>which<sp/>case<sp/>the<sp/>provisions<sp/>of<sp/>the<sp/>GPL<sp/>or<sp/>the<sp/>LGPL<sp/>are<sp/>applicable<sp/>instead</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>of<sp/>those<sp/>above.<sp/>If<sp/>you<sp/>wish<sp/>to<sp/>allow<sp/>use<sp/>of<sp/>your<sp/>version<sp/>of<sp/>this<sp/>file<sp/>only</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>either<sp/>the<sp/>GPL<sp/>or<sp/>the<sp/>LGPL,<sp/>and<sp/>not<sp/>to<sp/>allow<sp/>others<sp/>to</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>use<sp/>your<sp/>version<sp/>of<sp/>this<sp/>file<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>MPL,<sp/>indicate<sp/>your</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>decision<sp/>by<sp/>deleting<sp/>the<sp/>provisions<sp/>above<sp/>and<sp/>replace<sp/>them<sp/>with<sp/>the<sp/>notice</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>and<sp/>other<sp/>provisions<sp/>required<sp/>by<sp/>the<sp/>GPL<sp/>or<sp/>the<sp/>LGPL.<sp/>If<sp/>you<sp/>do<sp/>not<sp/>delete</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/>the<sp/>provisions<sp/>above,<sp/>a<sp/>recipient<sp/>may<sp/>use<sp/>your<sp/>version<sp/>of<sp/>this<sp/>file<sp/>under</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>the<sp/>terms<sp/>of<sp/>any<sp/>one<sp/>of<sp/>the<sp/>MPL,<sp/>the<sp/>GPL<sp/>or<sp/>the<sp/>LGPL.</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/>*****<sp/>END<sp/>LICENSE<sp/>BLOCK<sp/>*****<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="platform_8h" kindref="compound">xbee/platform.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>JS_HAVE_LONG_LONG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>jslo16(a)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((a)<sp/>&amp;<sp/>0x0000FFFF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>jshi16(a)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)(a)<sp/>&gt;&gt;<sp/>16)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>jsll_mul<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>jsll_mul(<ref refid="struct_j_s_int64" kindref="compound">JSUint64</ref><sp/>*rp,<sp/><ref refid="struct_j_s_int64" kindref="compound">JSUint64</ref><sp/>a,<sp/><ref refid="struct_j_s_int64" kindref="compound">JSUint64</ref><sp/>b)</highlight></codeline>
<codeline lineno="65"><highlight class="normal">{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>jsll_mul32(rp,<sp/>a.lo,<sp/>b.lo);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>rp-&gt;hi<sp/>+=<sp/>a.hi<sp/>*<sp/>b.lo<sp/>+<sp/>a.lo<sp/>*<sp/>b.hi;</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>jsll_mul32<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>jsll_mul32(<ref refid="struct_j_s_int64" kindref="compound">JSUint64</ref><sp/>*rp,<sp/>JSUint32<sp/>a,<sp/>JSUint32<sp/>b)</highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>JSUint32<sp/>_a1,<sp/>_a0,<sp/>_b1,<sp/>_b0,<sp/>_y0,<sp/>_y1,<sp/>_y2,<sp/>_y3;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>_a1<sp/>=<sp/>jshi16(a),<sp/>_a0<sp/>=<sp/>jslo16(a);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>_b1<sp/>=<sp/>jshi16(b),<sp/>_b0<sp/>=<sp/>jslo16(b);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>_y0<sp/>=<sp/>_a0<sp/>*<sp/>_b0;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>_y1<sp/>=<sp/>_a0<sp/>*<sp/>_b1;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>_y2<sp/>=<sp/>_a1<sp/>*<sp/>_b0;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>_y3<sp/>=<sp/>_a1<sp/>*<sp/>_b1;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>_y1<sp/>+=<sp/>jshi16(_y0);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>can&apos;t<sp/>carry<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>_y1<sp/>+=<sp/>_y2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>might<sp/>carry<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_y1<sp/>&lt;<sp/>_y2)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_y3<sp/>+=<sp/>(JSUint32)(0x00010000);<sp/><sp/></highlight><highlight class="comment">/*<sp/>propagate<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>rp-&gt;lo<sp/>=<sp/>(jslo16(_y1)<sp/>&lt;&lt;<sp/>16)<sp/>+<sp/>jslo16(_y0);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>rp-&gt;hi<sp/>=<sp/>_y3<sp/>+<sp/>jshi16(_y1);</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>jsll_udivmod<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="95"><highlight class="comment">**<sp/>Divide<sp/>64-bit<sp/>a<sp/>by<sp/>32-bit<sp/>b,<sp/>which<sp/>must<sp/>be<sp/>normalized<sp/>so<sp/>its<sp/>high<sp/>bit<sp/>is<sp/>1.</highlight></codeline>
<codeline lineno="96"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>norm_udivmod32(JSUint32<sp/>*qp,<sp/>JSUint32<sp/>*rp,<sp/><ref refid="struct_j_s_int64" kindref="compound">JSUint64</ref><sp/>a,<sp/>JSUint32<sp/>b)</highlight></codeline>
<codeline lineno="98"><highlight class="normal">{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>JSUint32<sp/>d1,<sp/>d0,<sp/>q1,<sp/>q0;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>JSUint32<sp/>r1,<sp/>r0,<sp/>m;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>d1<sp/>=<sp/>jshi16(b);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>d0<sp/>=<sp/>jslo16(b);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>r1<sp/>=<sp/>a.hi<sp/>%<sp/>d1;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>q1<sp/>=<sp/>a.hi<sp/>/<sp/>d1;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>m<sp/>=<sp/>q1<sp/>*<sp/>d0;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>r1<sp/>=<sp/>(r1<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>jshi16(a.lo);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r1<sp/>&lt;<sp/>m)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q1--,<sp/>r1<sp/>+=<sp/>b;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r1<sp/>&gt;=<sp/>b<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>i.e.,<sp/>we<sp/>didn&apos;t<sp/>get<sp/>a<sp/>carry<sp/>when<sp/>adding<sp/>to<sp/>r1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>r1<sp/>&lt;<sp/>m)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q1--,<sp/>r1<sp/>+=<sp/>b;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>r1<sp/>-=<sp/>m;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>r0<sp/>=<sp/>r1<sp/>%<sp/>d1;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>q0<sp/>=<sp/>r1<sp/>/<sp/>d1;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>m<sp/>=<sp/>q0<sp/>*<sp/>d0;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>r0<sp/>=<sp/>(r0<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>jslo16(a.lo);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r0<sp/>&lt;<sp/>m)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q0--,<sp/>r0<sp/>+=<sp/>b;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r0<sp/>&gt;=<sp/>b</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>r0<sp/>&lt;<sp/>m)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q0--,<sp/>r0<sp/>+=<sp/>b;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>*qp<sp/>=<sp/>(q1<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>q0;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>*rp<sp/>=<sp/>r0<sp/>-<sp/>m;</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__XBEE_PLATFORM_HCS08</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#pragma<sp/>MESSAGE<sp/>DISABLE<sp/>C5909<sp/><sp/><sp/><sp/>//<sp/>Assignment<sp/>in<sp/>condition<sp/>is<sp/>OK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint_fast8_t<sp/>CountLeadingZeros(JSUint32<sp/>a)</highlight></codeline>
<codeline lineno="135"><highlight class="normal">{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>JSUint32<sp/>t;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>uint_fast8_t<sp/>r<sp/>=<sp/>32;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((t<sp/>=<sp/>a<sp/>&gt;&gt;<sp/>16)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>-=<sp/>16,<sp/>a<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((t<sp/>=<sp/>a<sp/>&gt;&gt;<sp/>8)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>-=<sp/>8,<sp/>a<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((t<sp/>=<sp/>a<sp/>&gt;&gt;<sp/>4)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>-=<sp/>4,<sp/>a<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((t<sp/>=<sp/>a<sp/>&gt;&gt;<sp/>2)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>-=<sp/>2,<sp/>a<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((t<sp/>=<sp/>a<sp/>&gt;&gt;<sp/>1)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>-=<sp/>1,<sp/>a<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a<sp/>&amp;<sp/>1)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r--;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__XBEE_PLATFORM_HCS08</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#pragma<sp/>MESSAGE<sp/>DEFAULT<sp/>C5909<sp/><sp/><sp/><sp/>//<sp/>restore<sp/>C5909<sp/>(Assignment<sp/>in<sp/>condition)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>jsll_udivmod(<ref refid="struct_j_s_int64" kindref="compound">JSUint64</ref><sp/>*qp,<sp/><ref refid="struct_j_s_int64" kindref="compound">JSUint64</ref><sp/>*rp,<sp/><ref refid="struct_j_s_int64" kindref="compound">JSUint64</ref><sp/>a,<sp/><ref refid="struct_j_s_int64" kindref="compound">JSUint64</ref><sp/>b)</highlight></codeline>
<codeline lineno="158"><highlight class="normal">{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>JSUint32<sp/>n0,<sp/>n1,<sp/>n2;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>JSUint32<sp/>q0,<sp/>q1;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>uint_fast8_t<sp/>rsh,<sp/>lsh;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>n0<sp/>=<sp/>a.lo;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>n1<sp/>=<sp/>a.hi;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b.hi<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b.lo<sp/>&gt;<sp/>n1)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>(0<sp/>q0)<sp/>=<sp/>(n1<sp/>n0)<sp/>/<sp/>(0<sp/>D0)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lsh<sp/>=<sp/>CountLeadingZeros(b.lo);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lsh)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Normalize,<sp/>i.e.<sp/>make<sp/>the<sp/>most<sp/>significant<sp/>bit<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>denominator<sp/>be<sp/>set.</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b.lo<sp/>=<sp/>b.lo<sp/>&lt;&lt;<sp/>lsh;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n1<sp/>=<sp/>(n1<sp/>&lt;&lt;<sp/>lsh)<sp/>|<sp/>(n0<sp/>&gt;&gt;<sp/>(uint_fast8_t)(32<sp/>-<sp/>lsh));</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n0<sp/>=<sp/>n0<sp/>&lt;&lt;<sp/>lsh;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.lo<sp/>=<sp/>n0,<sp/>a.hi<sp/>=<sp/>n1;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>norm_udivmod32(&amp;q0,<sp/>&amp;n0,<sp/>a,<sp/>b.lo);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>remainder<sp/>is<sp/>in<sp/>n0<sp/>&gt;&gt;<sp/>lsh<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>(q1<sp/>q0)<sp/>=<sp/>(n1<sp/>n0)<sp/>/<sp/>(0<sp/>d0)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b.lo<sp/>==<sp/>0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>user<sp/>wants<sp/>to<sp/>divide<sp/>by<sp/>zero!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b.lo<sp/>=<sp/>1<sp/>/<sp/>b.lo;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>so<sp/>go<sp/>ahead<sp/>and<sp/>crash<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lsh<sp/>=<sp/>CountLeadingZeros(b.lo);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lsh<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>From<sp/>(n1<sp/>&gt;=<sp/>b.lo)</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>&amp;&amp;<sp/>(the<sp/>most<sp/>significant<sp/>bit<sp/>of<sp/>b.lo<sp/>is<sp/>set),</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>conclude<sp/>that</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>(the<sp/>most<sp/>significant<sp/>bit<sp/>of<sp/>n1<sp/>is<sp/>set)</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>&amp;&amp;<sp/>(the<sp/>leading<sp/>quotient<sp/>digit<sp/>q1<sp/>=<sp/>1).</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>This<sp/>special<sp/>case<sp/>is<sp/>necessary,<sp/>not<sp/>an<sp/>optimization</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(Shifts<sp/>counts<sp/>of<sp/>32<sp/>are<sp/>undefined).</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n1<sp/>-=<sp/>b.lo;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q1<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Normalize.</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rsh<sp/>=<sp/>32<sp/>-<sp/>lsh;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b.lo<sp/>=<sp/>b.lo<sp/>&lt;&lt;<sp/>lsh;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n2<sp/>=<sp/>n1<sp/>&gt;&gt;<sp/>rsh;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n1<sp/>=<sp/>(n1<sp/>&lt;&lt;<sp/>lsh)<sp/>|<sp/>(n0<sp/>&gt;&gt;<sp/>rsh);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n0<sp/>=<sp/>n0<sp/>&lt;&lt;<sp/>lsh;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.lo<sp/>=<sp/>n1,<sp/>a.hi<sp/>=<sp/>n2;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>norm_udivmod32(&amp;q1,<sp/>&amp;n1,<sp/>a,<sp/>b.lo);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>n1<sp/>!=<sp/>b.lo...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.lo<sp/>=<sp/>n0,<sp/>a.hi<sp/>=<sp/>n1;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>norm_udivmod32(&amp;q0,<sp/>&amp;n0,<sp/>a,<sp/>b.lo);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>remainder<sp/>in<sp/>n0<sp/>&gt;&gt;<sp/>lsh<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rp)<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rp-&gt;lo<sp/>=<sp/>n0<sp/>&gt;&gt;<sp/>lsh;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rp-&gt;hi<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b.hi<sp/>&gt;<sp/>n1)<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>(0<sp/>0)<sp/>=<sp/>(n1<sp/>n0)<sp/>/<sp/>(D1<sp/>d0)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q0<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>remainder<sp/>in<sp/>(n1<sp/>n0)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rp)<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rp-&gt;lo<sp/>=<sp/>n0;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rp-&gt;hi<sp/>=<sp/>n1;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>(0<sp/>q0)<sp/>=<sp/>(n1<sp/>n0)<sp/>/<sp/>(d1<sp/>d0)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lsh<sp/>=<sp/>CountLeadingZeros(b.hi);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lsh<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="253"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>From<sp/>(n1<sp/>&gt;=<sp/>b.hi)</highlight></codeline>
<codeline lineno="254"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>&amp;&amp;<sp/>(the<sp/>most<sp/>significant<sp/>bit<sp/>of<sp/>b.hi<sp/>is<sp/>set),</highlight></codeline>
<codeline lineno="255"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>conclude<sp/>that</highlight></codeline>
<codeline lineno="256"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>(the<sp/>most<sp/>significant<sp/>bit<sp/>of<sp/>n1<sp/>is<sp/>set)</highlight></codeline>
<codeline lineno="257"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>&amp;&amp;<sp/>(the<sp/>quotient<sp/>digit<sp/>q0<sp/>=<sp/>0<sp/>or<sp/>1).</highlight></codeline>
<codeline lineno="258"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="259"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>This<sp/>special<sp/>case<sp/>is<sp/>necessary,<sp/>not<sp/>an<sp/>optimization.</highlight></codeline>
<codeline lineno="260"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="263"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>condition<sp/>on<sp/>the<sp/>next<sp/>line<sp/>takes<sp/>advantage<sp/>of<sp/>that</highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>n1<sp/>&gt;=<sp/>b.hi<sp/>(true<sp/>due<sp/>to<sp/>control<sp/>flow).</highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n1<sp/>&gt;<sp/>b.hi<sp/>||<sp/>n0<sp/>&gt;=<sp/>b.lo)<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q0<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.lo<sp/>=<sp/>n0,<sp/>a.hi<sp/>=<sp/>n1;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSLL_SUB(a,<sp/>a,<sp/>b);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q0<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rp)<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rp-&gt;lo<sp/>=<sp/>n0;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rp-&gt;hi<sp/>=<sp/>n1;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_j_s_int64" kindref="compound">JSInt64</ref><sp/>m;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="283"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Normalize.</highlight></codeline>
<codeline lineno="284"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rsh<sp/>=<sp/>32<sp/>-<sp/>lsh;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b.hi<sp/>=<sp/>(b.hi<sp/>&lt;&lt;<sp/>lsh)<sp/>|<sp/>(b.lo<sp/>&gt;&gt;<sp/>rsh);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b.lo<sp/>=<sp/>b.lo<sp/>&lt;&lt;<sp/>lsh;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n2<sp/>=<sp/>n1<sp/>&gt;&gt;<sp/>rsh;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n1<sp/>=<sp/>(n1<sp/>&lt;&lt;<sp/>lsh)<sp/>|<sp/>(n0<sp/>&gt;&gt;<sp/>rsh);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n0<sp/>=<sp/>n0<sp/>&lt;&lt;<sp/>lsh;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.lo<sp/>=<sp/>n1,<sp/>a.hi<sp/>=<sp/>n2;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>norm_udivmod32(&amp;q0,<sp/>&amp;n1,<sp/>a,<sp/>b.hi);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jsll_mul32(&amp;m,<sp/>q0,<sp/>b.lo);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((m.hi<sp/>&gt;<sp/>n1)<sp/>||<sp/>((m.hi<sp/>==<sp/>n1)<sp/>&amp;&amp;<sp/>(m.lo<sp/>&gt;<sp/>n0)))<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q0--;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSLL_SUB(m,<sp/>m,<sp/>b);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Remainder<sp/>is<sp/>((n1<sp/>n0)<sp/>-<sp/>(m1<sp/>m0))<sp/>&gt;&gt;<sp/>lsh<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rp)<sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.lo<sp/>=<sp/>n0,<sp/>a.hi<sp/>=<sp/>n1;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSLL_SUB(a,<sp/>a,<sp/>m);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rp-&gt;lo<sp/>=<sp/>(a.hi<sp/>&lt;&lt;<sp/>rsh)<sp/>|<sp/>(a.lo<sp/>&gt;&gt;<sp/>lsh);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rp-&gt;hi<sp/>=<sp/>a.hi<sp/>&gt;&gt;<sp/>lsh;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(qp)<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qp-&gt;lo<sp/>=<sp/>q0;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qp-&gt;hi<sp/>=<sp/>q1;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal">}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>jsll_div<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>jsll_div(<sp/><ref refid="struct_j_s_int64" kindref="compound">JSUint64</ref><sp/>*r,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_j_s_int64" kindref="compound">JSUint64</ref><sp/>*a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_j_s_int64" kindref="compound">JSUint64</ref><sp/>*b)</highlight></codeline>
<codeline lineno="324"><highlight class="normal">{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>since<sp/>we<sp/>may<sp/>need<sp/>to<sp/>copy<sp/>a<sp/>and<sp/>b<sp/>(to<sp/>negate<sp/>them),<sp/>pass<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>as<sp/>pointers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_j_s_int64" kindref="compound">JSInt64</ref><sp/>_a,<sp/>_b;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__hal__dos_1ga04dd5074964518403bf944f2b240a5f8" kindref="member">bool_t</ref><sp/>_negative<sp/>=<sp/>(JSInt32)a-&gt;hi<sp/>&lt;<sp/>0;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(_negative)</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSLL_NEG(_a,<sp/>*a);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_a<sp/>=<sp/>*a;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((JSInt32)b-&gt;hi<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_negative<sp/>^=<sp/>1;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSLL_NEG(_b,<sp/>*b);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_b<sp/>=<sp/>*b;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>jsll_udivmod(r,<sp/>NULL,<sp/>_a,<sp/>_b);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_negative)</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSLL_NEG(*r,<sp/>*r);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal">}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>jsll_mod<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>jsll_mod(<sp/><ref refid="struct_j_s_int64" kindref="compound">JSUint64</ref><sp/>*r,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_j_s_int64" kindref="compound">JSUint64</ref><sp/>*a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_j_s_int64" kindref="compound">JSUint64</ref><sp/>*b)</highlight></codeline>
<codeline lineno="353"><highlight class="normal">{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>since<sp/>we<sp/>may<sp/>need<sp/>to<sp/>copy<sp/>a<sp/>and<sp/>b<sp/>(to<sp/>negate<sp/>them),<sp/>pass<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>as<sp/>pointers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_j_s_int64" kindref="compound">JSInt64</ref><sp/>_a,<sp/>_b;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__hal__dos_1ga04dd5074964518403bf944f2b240a5f8" kindref="member">bool_t</ref><sp/>_negative<sp/>=<sp/>(JSInt32)a-&gt;hi<sp/>&lt;<sp/>0;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(_negative)<sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSLL_NEG(_a,<sp/>*a);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_a<sp/>=<sp/>*a;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((JSInt32)b-&gt;hi<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSLL_NEG(_b,<sp/>*b);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_b<sp/>=<sp/>*b;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>jsll_udivmod(NULL,<sp/>r,<sp/>_a,<sp/>_b);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_negative)</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSLL_NEG(*r,<sp/>*r);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal">}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>jsll_shl<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>jsll_shl(<sp/><ref refid="struct_j_s_int64" kindref="compound">JSUint64</ref><sp/>*r,<sp/><ref refid="struct_j_s_int64" kindref="compound">JSUint64</ref><sp/>a,<sp/>uint_fast8_t<sp/>b)</highlight></codeline>
<codeline lineno="379"><highlight class="normal">{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pass<sp/>a<sp/>by<sp/>value<sp/>so<sp/>we<sp/>don&apos;t<sp/>have<sp/>to<sp/>make<sp/>a<sp/>copy<sp/>of<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>uint_fast8_t<sp/>lowb;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b)<sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lowb<sp/>=<sp/>b<sp/>&amp;<sp/>31;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b<sp/>&lt;<sp/>32)<sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;lo<sp/>=<sp/>a.lo<sp/>&lt;&lt;<sp/>lowb;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;hi<sp/>=<sp/>(a.hi<sp/>&lt;&lt;<sp/>lowb)<sp/>|<sp/>(a.lo<sp/>&gt;&gt;<sp/>(<ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref>)(32<sp/>-<sp/>b));</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;lo<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;hi<sp/>=<sp/>a.lo<sp/>&lt;&lt;<sp/>lowb;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*r<sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal">}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>jsll_shr<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>jsll_shr(<sp/><ref refid="struct_j_s_int64" kindref="compound">JSInt64</ref><sp/>*r,<sp/><ref refid="struct_j_s_int64" kindref="compound">JSInt64</ref><sp/>a,<sp/>uint_fast8_t<sp/>b)</highlight></codeline>
<codeline lineno="400"><highlight class="normal">{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pass<sp/>a<sp/>by<sp/>value<sp/>so<sp/>we<sp/>don&apos;t<sp/>have<sp/>to<sp/>make<sp/>a<sp/>copy<sp/>of<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>uint_fast8_t<sp/>lowb;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b)<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lowb<sp/>=<sp/>b<sp/>&amp;<sp/>31;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b<sp/>&lt;<sp/>32)<sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;lo<sp/>=<sp/>(a.hi<sp/>&lt;&lt;<sp/>(<ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref>)(32<sp/>-<sp/>b))<sp/>|<sp/>(a.lo<sp/>&gt;&gt;<sp/>lowb);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;hi<sp/>=<sp/>(JSInt32)a.hi<sp/>&gt;&gt;<sp/>lowb;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;lo<sp/>=<sp/>(JSInt32)a.hi<sp/>&gt;&gt;<sp/>lowb;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;hi<sp/>=<sp/>(JSInt32)a.hi<sp/>&gt;&gt;<sp/>31;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*r<sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal">}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>jsll_ushr<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>jsll_ushr(<sp/><ref refid="struct_j_s_int64" kindref="compound">JSInt64</ref><sp/>*r,<sp/><ref refid="struct_j_s_int64" kindref="compound">JSInt64</ref><sp/>a,<sp/>uint_fast8_t<sp/>b)</highlight></codeline>
<codeline lineno="421"><highlight class="normal">{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pass<sp/>a<sp/>by<sp/>value<sp/>so<sp/>we<sp/>don&apos;t<sp/>have<sp/>to<sp/>make<sp/>a<sp/>copy<sp/>of<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>uint_fast8_t<sp/>lowb;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b)<sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lowb<sp/>=<sp/>b<sp/>&amp;<sp/>31;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b<sp/>&lt;<sp/>32)<sp/>{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;lo<sp/>=<sp/>(a.hi<sp/>&lt;&lt;<sp/>(<ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref>)(32<sp/>-<sp/>b))<sp/>|<sp/>(a.lo<sp/>&gt;&gt;<sp/>lowb);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;hi<sp/>=<sp/>a.hi<sp/>&gt;&gt;<sp/>lowb;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;lo<sp/>=<sp/>a.hi<sp/>&gt;&gt;<sp/>lowb;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;hi<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*r<sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal">}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>jsll_decstr<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jsll_decstr(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_j_s_int64" kindref="compound">JSInt64</ref><sp/>*v)</highlight></codeline>
<codeline lineno="442"><highlight class="normal">{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((JSInt32)v-&gt;hi<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_j_s_int64" kindref="compound">JSUint64</ref><sp/>_abs;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>JSLL_NEG(<sp/>_abs,<sp/>*v);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*buffer<sp/>=<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jsll_udecstr(<sp/>buffer<sp/>+<sp/>1,<sp/>&amp;_abs);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jsll_udecstr(<sp/>buffer,<sp/>v);</highlight></codeline>
<codeline lineno="453"><highlight class="normal">}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>jsll_udecstr<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Technique<sp/>is<sp/>to<sp/>convert<sp/>4<sp/>characters<sp/>at<sp/>a<sp/>time,<sp/>since<sp/>16-bit<sp/>divide<sp/>is<sp/>less</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="comment">//<sp/>expensive<sp/>on<sp/>embedded<sp/>platforms.<sp/><sp/>Limits<sp/>number<sp/>of<sp/>64-bit<sp/>divides<sp/>to<sp/>5.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="comment">//<sp/>On<sp/>platforms<sp/>with<sp/>efficient<sp/>32-bit<sp/>divide,<sp/>this<sp/>method<sp/>could<sp/>be<sp/>modified</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>divide<sp/>by<sp/>1<sp/>billion<sp/>and<sp/>convert<sp/>9<sp/>digits<sp/>at<sp/>a<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jsll_udecstr(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_j_s_int64" kindref="compound">JSUint64</ref><sp/>*v)</highlight></codeline>
<codeline lineno="462"><highlight class="normal">{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>temp[20];<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>maximum<sp/>of<sp/>20<sp/>digits,<sp/>don&apos;t<sp/>need<sp/>pointer<sp/>for<sp/>null</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__zdo_1gab2b3adeb2a67e656ff030b56727fd0ac" kindref="member">length</ref>;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/>uint_fast8_t<sp/>i;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1ga04dd5074964518403bf944f2b240a5f8" kindref="member">bool_t</ref><sp/>fill;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_j_s_int64" kindref="compound">JSUint64</ref><sp/>quot,<sp/>rem;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/>rem16;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_j_s_int64" kindref="compound">JSUint64</ref><sp/>divisor<sp/>=<sp/>JSLL_INIT(<sp/>0,<sp/>10000);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/>quot<sp/>=<sp/>*v;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(JSLL_IS_ZERO(<sp/>quot))</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(<sp/>buffer,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/>p<sp/>=<sp/>temp;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>jsll_udivmod(<sp/>&amp;quot,<sp/>&amp;rem,<sp/>quot,<sp/>divisor);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rem16<sp/>=<sp/>(<ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref>)<sp/>rem.lo;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fill<sp/>=<sp/>!<sp/>JSLL_IS_ZERO(<sp/>quot);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>4;<sp/>i<sp/>&amp;&amp;<sp/>(fill<sp/>||<sp/>rem16);<sp/>++p,<sp/>--i)</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*p<sp/>=<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>+<sp/>(rem16<sp/>%<sp/>10);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rem16<sp/>/=<sp/>10;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(fill);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/>length<sp/>=<sp/>p<sp/>-<sp/>temp;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>&lt;length&gt;<sp/>characters<sp/>from<sp/>&lt;temp&gt;<sp/>to<sp/>&lt;buffer&gt;,<sp/>in<sp/>reverse<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>(uint_fast8_t)<sp/><ref refid="group__zdo_1gab2b3adeb2a67e656ff030b56727fd0ac" kindref="member">length</ref>;<sp/>i;<sp/>++buffer,<sp/>--i)</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*buffer<sp/>=<sp/>*--p;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/>*buffer<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>null<sp/>terminator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__zdo_1gab2b3adeb2a67e656ff030b56727fd0ac" kindref="member">length</ref>;</highlight></codeline>
<codeline lineno="501"><highlight class="normal">}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>!JS_HAVE_LONG_LONG<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/util/jslong.c"/>
  </compounddef>
</doxygen>
