<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="zcl__identify_8c" kind="file" language="C++">
    <compoundname>zcl_identify.c</compoundname>
    <includes refid="platform_8h" local="yes">xbee/platform.h</includes>
    <includes refid="byteorder_8h" local="yes">xbee/byteorder.h</includes>
    <includes refid="zcl_8h" local="yes">zigbee/zcl.h</includes>
    <includes refid="zcl__identify_8h" local="yes">zigbee/zcl_identify.h</includes>
    <incdepgraph>
      <node id="1631">
        <label>errno.h</label>
      </node>
      <node id="1633">
        <label>xbee/jslong_glue.h</label>
        <link refid="jslong__glue_8h_source"/>
        <childnode refid="1634" relation="include">
        </childnode>
      </node>
      <node id="1632">
        <label>stddef.h</label>
      </node>
      <node id="1638">
        <label>wpan/aps.h</label>
        <link refid="aps_8h"/>
        <childnode refid="1639" relation="include">
        </childnode>
      </node>
      <node id="1635">
        <label>xbee/byteorder.h</label>
        <link refid="byteorder_8h"/>
        <childnode refid="1636" relation="include">
        </childnode>
        <childnode refid="1630" relation="include">
        </childnode>
      </node>
      <node id="1642">
        <label>zigbee/zcl_identify.h</label>
        <link refid="zcl__identify_8h"/>
        <childnode refid="1637" relation="include">
        </childnode>
      </node>
      <node id="1637">
        <label>zigbee/zcl.h</label>
        <link refid="zcl_8h"/>
        <childnode refid="1630" relation="include">
        </childnode>
        <childnode refid="1638" relation="include">
        </childnode>
        <childnode refid="1640" relation="include">
        </childnode>
      </node>
      <node id="1636">
        <label>string.h</label>
      </node>
      <node id="1639">
        <label>wpan/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="1630" relation="include">
        </childnode>
      </node>
      <node id="1630">
        <label>xbee/platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="1631" relation="include">
        </childnode>
        <childnode refid="1632" relation="include">
        </childnode>
        <childnode refid="1633" relation="include">
        </childnode>
      </node>
      <node id="1640">
        <label>zigbee/zcl_types.h</label>
        <link refid="zcl__types_8h"/>
        <childnode refid="1630" relation="include">
        </childnode>
        <childnode refid="1635" relation="include">
        </childnode>
        <childnode refid="1641" relation="include">
        </childnode>
      </node>
      <node id="1641">
        <label>zigbee/zcl64.h</label>
        <link refid="zcl64_8h"/>
        <childnode refid="1630" relation="include">
        </childnode>
      </node>
      <node id="1629">
        <label>src/zigbee/zcl_identify.c</label>
        <link refid="zcl__identify_8c"/>
        <childnode refid="1630" relation="include">
        </childnode>
        <childnode refid="1635" relation="include">
        </childnode>
        <childnode refid="1637" relation="include">
        </childnode>
        <childnode refid="1642" relation="include">
        </childnode>
      </node>
      <node id="1634">
        <label>xbee/jslong.h</label>
        <link refid="jslong_8h_source"/>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group__zcl__identify_1ga2cb1b23d3ccb08ae200e797358694d51" prot="public" static="no" mutable="no">
        <type><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref></type>
        <definition>uint16_t zcl_identify_time</definition>
        <argsstring></argsstring>
        <name>zcl_identify_time</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>Private variable for tracking amount of &quot;Identification mode&quot; time left. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zcl_identify.c" line="49" column="1" bodyfile="src/zigbee/zcl_identify.c" bodystart="53" bodyend="-1"/>
        <referencedby refid="group__zcl__identify_1ga95b00d55b861c1ea6033c16794ae818d" compoundref="zcl__identify_8c" startline="65" endline="83">zcl_identify_isactive</referencedby>
      </memberdef>
      <memberdef kind="variable" id="group__zcl__identify_1ga467ad1e40ea8475b4e49865436883e94" prot="public" static="no" mutable="no">
        <type><ref refid="group__hal__dos_1ga09a1e304d66d35dd47daffee9731edaa" kindref="member">uint32_t</ref></type>
        <definition>uint32_t zcl_identify_end</definition>
        <argsstring></argsstring>
        <name>zcl_identify_end</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>Private variable for tracking value of xbee_seconds_timer() that &quot;Idenfication mode&quot; should end. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zcl_identify.c" line="50" column="1" bodyfile="src/zigbee/zcl_identify.c" bodystart="56" bodyend="-1"/>
        <referencedby refid="group__zcl__identify_1ga40470468c9c1fe4ebfb52612234710b0" compoundref="zcl__identify_8c" startline="104" endline="121">_zcl_identify_time_set</referencedby>
        <referencedby refid="group__zcl__identify_1ga95b00d55b861c1ea6033c16794ae818d" compoundref="zcl__identify_8c" startline="65" endline="83">zcl_identify_isactive</referencedby>
      </memberdef>
      <memberdef kind="variable" id="group__zcl__identify_1gaeb5c4c1de8a862c365c638878e5a96c8" prot="public" static="no" mutable="no">
        <type><ref refid="structzcl__attribute__full__t" kindref="compound">zcl_attribute_full_t</ref></type>
        <definition>zcl_attribute_full_t identify_time</definition>
        <argsstring></argsstring>
        <name>identify_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zcl_identify.c" line="148" column="1" bodyfile="src/zigbee/zcl_identify.c" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__zcl__identify_1ga2066d4a3853d4b0d8de8b162f829e10f" prot="public" static="no" mutable="no">
        <type><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref></type>
        <definition>uint16_t end_of_list</definition>
        <argsstring></argsstring>
        <name>end_of_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zcl_identify.c" line="149" column="1" bodyfile="src/zigbee/zcl_identify.c" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__zcl__identify_1ga794a6ffcf3d47884c65a8a2c9e60851b" prot="public" static="no" mutable="no">
        <type>const struct @3</type>
        <definition>const struct @3  zcl_identify_attr</definition>
        <argsstring></argsstring>
        <name>zcl_identify_attr</name>
        <initializer>=
{

	{ { <ref refid="group__zcl__identify_1ga7df877a02f273adc190aa24ad0aff4c9" kindref="member">ZCL_IDENTIFY_ATTR_IDENTIFY_TIME</ref>,
		<ref refid="group__zcl_1ga40104652d30fa17b7ea5dde9e8b788b8" kindref="member">ZCL_ATTRIB_FLAG_FULL</ref>,
		ZCL_TYPE_UNSIGNED_16BIT,
		&amp;<ref refid="group__zcl__identify_1ga2cb1b23d3ccb08ae200e797358694d51" kindref="member">zcl_identify_time</ref> },
		{ 0 }, { 0 },
		&amp;<ref refid="group__zcl__identify_1ga7cde47425d0a779f5aff87985ea01951" kindref="member">_zcl_identify_time_get</ref>, &amp;<ref refid="group__zcl__identify_1ga40470468c9c1fe4ebfb52612234710b0" kindref="member">_zcl_identify_time_set</ref> },
	<ref refid="group__zcl_1gab05da20cf1dfaef97e20dfca2fd26d14" kindref="member">ZCL_ATTRIBUTE_END_OF_LIST</ref>
}</initializer>
        <briefdescription>
<para>Standard attribute list for the Identify Server Cluster. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zcl_identify.c" line="160" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__zcl__identify_1gadebf533d91e359185eb3c0e1e7f044d7" prot="public" static="no" mutable="no">
        <type>const <ref refid="structzcl__attribute__tree__t" kindref="compound">zcl_attribute_tree_t</ref></type>
        <definition>const zcl_attribute_tree_t zcl_identify_attribute_tree[]</definition>
        <argsstring>[]</argsstring>
        <name>zcl_identify_attribute_tree</name>
        <initializer>=
		{ { ZCL_MFG_NONE, &amp;zcl_identify_attr.identify_time.base, NULL } }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zcl_identify.c" line="162" column="1" bodyfile="src/zigbee/zcl_identify.c" bodystart="162" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__zcl__identify_1ga95b00d55b861c1ea6033c16794ae818d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref></type>
        <definition>uint16_t zcl_identify_isactive</definition>
        <argsstring>(void)</argsstring>
        <name>zcl_identify_isactive</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Used by main program to see if a device is in &quot;Identification mode&quot;. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>&gt;0</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of seconds of &quot;Identification mode&quot; left. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Device is not in &quot;Identification mode&quot;. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zcl_identify.c" line="65" column="1" bodyfile="src/zigbee/zcl_identify.c" bodystart="65" bodyend="83"/>
        <references refid="group__zcl__identify_1ga467ad1e40ea8475b4e49865436883e94" compoundref="zcl__identify_8c" startline="56">zcl_identify_end</references>
        <references refid="group__zcl__identify_1ga2cb1b23d3ccb08ae200e797358694d51" compoundref="zcl__identify_8c" startline="53">zcl_identify_time</references>
        <referencedby refid="group__zcl__identify_1ga7cde47425d0a779f5aff87985ea01951" compoundref="zcl__identify_8c" startline="134" endline="142">_zcl_identify_time_get</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__zcl__identify_1ga40470468c9c1fe4ebfb52612234710b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _zcl_identify_time_set</definition>
        <argsstring>(const zcl_attribute_full_t FAR *attribute, zcl_attribute_write_rec_t *rec)</argsstring>
        <name>_zcl_identify_time_set</name>
        <param>
          <type>const <ref refid="structzcl__attribute__full__t" kindref="compound">zcl_attribute_full_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>attribute</declname>
        </param>
        <param>
          <type><ref refid="structzcl__attribute__write__rec__t" kindref="compound">zcl_attribute_write_rec_t</ref> *</type>
          <declname>rec</declname>
        </param>
        <briefdescription>
<para>Function registered to <ref refid="group__zcl__identify_1ga7df877a02f273adc190aa24ad0aff4c9" kindref="member">ZCL_IDENTIFY_ATTR_IDENTIFY_TIME</ref> attribute of Identify Cluster. </para>        </briefdescription>
        <detaileddescription>
<para>Responsible for updating the IdentifyTime attribute, and also for determining when identify mode should end.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">attribute</parametername>
</parameternamelist>
<parameterdescription>
<para>ignored; assumed to point to zcl_identify_time </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">rec</parametername>
</parameternamelist>
<parameterdescription>
<para>value from write request or NULL to update the time when identify mode should end (used by the Identify cluster command).</para></parameterdescription>
</parameteritem>
</parameterlist>
See <ref refid="group__zcl_1ga70fa1740c517a1e49c700cba7cf6b339" kindref="member">zcl_attribute_write_fn()</ref> for calling convention. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zcl_identify.c" line="86" column="1" bodyfile="src/zigbee/zcl_identify.c" bodystart="104" bodyend="121"/>
        <references refid="group__zcl_1gaa2585d779da0ab21273a8d92de9a0ebe" compoundref="zcl_8h" startline="693">zcl_attribute_write_rec_t::flags</references>
        <references refid="group__zcl_1ga2bb65a6c04a14957000feaa12de9769c" compoundref="zcl_8h" startline="697">ZCL_ATTR_WRITE_FLAG_ASSIGN</references>
        <references refid="group__zcl_1ga15bf36dadccd7a045bad7d6f0842e25a" compoundref="zigbee__zcl_8c" startline="652" endline="817">zcl_decode_attribute</references>
        <references refid="group__zcl__identify_1ga467ad1e40ea8475b4e49865436883e94" compoundref="zcl__identify_8c" startline="56">zcl_identify_end</references>
      </memberdef>
      <memberdef kind="function" id="group__zcl__identify_1ga7cde47425d0a779f5aff87985ea01951" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint_fast8_t</type>
        <definition>uint_fast8_t _zcl_identify_time_get</definition>
        <argsstring>(const zcl_attribute_full_t FAR *attribute)</argsstring>
        <name>_zcl_identify_time_get</name>
        <param>
          <type>const <ref refid="structzcl__attribute__full__t" kindref="compound">zcl_attribute_full_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>attribute</declname>
        </param>
        <briefdescription>
<para>Function registered to <ref refid="group__zcl__identify_1ga7df877a02f273adc190aa24ad0aff4c9" kindref="member">ZCL_IDENTIFY_ATTR_IDENTIFY_TIME</ref> attribute of Identify Cluster and called to refresh the IdentifyTime attribute. </para>        </briefdescription>
        <detaileddescription>
<internal><para>See <ref refid="group__zcl_1gace94cfc3f22379fa08a5b8de8c6977f6" kindref="member">zcl_attribute_update_fn()</ref> for calling convention. </para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zcl_identify.c" line="124" column="1" bodyfile="src/zigbee/zcl_identify.c" bodystart="134" bodyend="142"/>
        <references refid="group__hal_1gacddb73dac3fd1bdec26cd7dc0a652c00" compoundref="platform_8h" startline="399">XBEE_UNUSED_PARAMETER</references>
        <references refid="group__zcl__identify_1ga95b00d55b861c1ea6033c16794ae818d" compoundref="zcl__identify_8c" startline="65" endline="83">zcl_identify_isactive</references>
      </memberdef>
      <memberdef kind="function" id="group__zcl__identify_1ga94a1fe7c8892b55e0ffd3e2795139b1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int zcl_identify_command</definition>
        <argsstring>(const wpan_envelope_t FAR *envelope, void FAR *context)</argsstring>
        <name>zcl_identify_command</name>
        <param>
          <type>const <ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>envelope</declname>
        </param>
        <param>
          <type>void <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Handler for ZCL Identify Server Commands (Identify, IdentifyQuery). </para>        </briefdescription>
        <detaileddescription>
<para>Used in the #ZCL_CLUST_IDENTIFY cluster entry for an endpoint.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">envelope</parametername>
</parameternamelist>
<parameterdescription>
<para>envelope from received message </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">context</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to attribute list for cluster (typically passed in via endpoint dispatcher)</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>command was processed, including sending a possible Identify Query Response </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!0</parametername>
</parameternamelist>
<parameterdescription>
<para>error sending response or processing command </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/zigbee/zcl_identify.c" line="181" column="1" bodyfile="src/zigbee/zcl_identify.c" bodystart="181" bodyend="243"/>
        <references refid="group__zcl_1ga5226462a41663bc81a5d67c04f18868a" compoundref="zcl_8h" startline="882">zcl_command_t::frame_control</references>
        <references refid="group___s_x_a_1ga4233297bd31be5c273d4fb0758cc54d7" compoundref="sxa_8h" startline="70">PACKED_STRUCT</references>
        <references refid="group__zcl_1ga0bbd651dae138e104715e6e2de62084e" compoundref="zcl_8h" startline="261">ZCL_CMD_MATCH</references>
        <references refid="group__zcl_1gadeb35ab493fffec9ba1c33f658929136" compoundref="zigbee__zcl_8c" startline="1474" endline="1545">zcl_command_build</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Server code to implement the ZigBee Identify Cluster (ZCL Spec section 3.5). </para>    </briefdescription>
    <detaileddescription>
<para>Main program should call <ref refid="group__zcl__identify_1ga95b00d55b861c1ea6033c16794ae818d" kindref="member">zcl_identify_isactive()</ref> in its main loop and perform some sort of action (flash an LED or LCD backlight) to help an installer identify the device during network commissioning.</para><para>Use the macro <ref refid="group__zcl__identify_1gaeae5b3a460629b095247d160235ec586" kindref="member">ZCL_CLUST_ENTRY_IDENTIFY_SERVER</ref> to add an Identify Cluster Server to the cluster list of an endpoint.</para><para>Call <ref refid="group__zcl__identify_1ga95b00d55b861c1ea6033c16794ae818d" kindref="member">zcl_identify_isactive()</ref> in the main loop of your program to see how many seconds are left in &quot;Identification mode&quot;.</para><para><simplesect kind="note"><para>Maybe generalize the attribute read/write functions to use attribute-&gt;value (passed in) instead of referencing zcl_identify_time directly? Maybe not, makes it harder for other parts of the system to call <ref refid="group__zcl__identify_1ga40470468c9c1fe4ebfb52612234710b0" kindref="member">_zcl_identify_time_set()</ref> and <ref refid="group__zcl__identify_1ga7cde47425d0a779f5aff87985ea01951" kindref="member">_zcl_identify_time_get()</ref>. </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2010-2012<sp/>Digi<sp/>International<sp/>Inc.,</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>not<sp/>expressly<sp/>granted<sp/>are<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>Source<sp/>Code<sp/>Form<sp/>is<sp/>subject<sp/>to<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>Mozilla<sp/>Public</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>License,<sp/>v.<sp/>2.0.<sp/>If<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>MPL<sp/>was<sp/>not<sp/>distributed<sp/>with<sp/>this<sp/>file,</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>You<sp/>can<sp/>obtain<sp/>one<sp/>at<sp/>http://mozilla.org/MPL/2.0/.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>Digi<sp/>International<sp/>Inc.<sp/>11001<sp/>Bren<sp/>Road<sp/>East,<sp/>Minnetonka,<sp/>MN<sp/>55343</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>=======================================================================</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="comment">/***<sp/>BeginHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="platform_8h" kindref="compound">xbee/platform.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>XBEE_ZCL_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="byteorder_8h" kindref="compound">xbee/byteorder.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="zcl_8h" kindref="compound">zigbee/zcl.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="zcl__identify_8h" kindref="compound">zigbee/zcl_identify.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>zcl_identify_time,<sp/>zcl_identify_end,<sp/>zcl_identify_isactive<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/><ref refid="group__zcl__identify_1ga2cb1b23d3ccb08ae200e797358694d51" kindref="member">zcl_identify_time</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="group__hal__dos_1ga09a1e304d66d35dd47daffee9731edaa" kindref="member">uint32_t</ref><sp/><ref refid="group__zcl__identify_1ga467ad1e40ea8475b4e49865436883e94" kindref="member">zcl_identify_end</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight></codeline>
<codeline lineno="53" refid="group__zcl__identify_1ga2cb1b23d3ccb08ae200e797358694d51" refkind="member"><highlight class="normal"><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/><sp/><sp/><sp/><ref refid="group__zcl__identify_1ga2cb1b23d3ccb08ae200e797358694d51" kindref="member">zcl_identify_time</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="56" refid="group__zcl__identify_1ga467ad1e40ea8475b4e49865436883e94" refkind="member"><highlight class="normal"><ref refid="group__hal__dos_1ga09a1e304d66d35dd47daffee9731edaa" kindref="member">uint32_t</ref><sp/><sp/><sp/><sp/><ref refid="group__zcl__identify_1ga467ad1e40ea8475b4e49865436883e94" kindref="member">zcl_identify_end</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="group__zcl__identify_1ga95b00d55b861c1ea6033c16794ae818d" refkind="member"><highlight class="normal"><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/><ref refid="group__zcl__identify_1ga95b00d55b861c1ea6033c16794ae818d" kindref="member">zcl_identify_isactive</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="66"><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1gafd12020da5a235dfcf0c3c748fb5baed" kindref="member">int32_t</ref><sp/>delta;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__zcl__identify_1ga2cb1b23d3ccb08ae200e797358694d51" kindref="member">zcl_identify_time</ref>)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>delta<sp/>=<sp/>(<ref refid="group__hal__dos_1gafd12020da5a235dfcf0c3c748fb5baed" kindref="member">int32_t</ref>)(<ref refid="group__zcl__identify_1ga467ad1e40ea8475b4e49865436883e94" kindref="member">zcl_identify_end</ref><sp/>-<sp/>xbee_seconds_timer());</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(delta<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zcl__identify_1ga2cb1b23d3ccb08ae200e797358694d51" kindref="member">zcl_identify_time</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zcl__identify_1ga2cb1b23d3ccb08ae200e797358694d51" kindref="member">zcl_identify_time</ref><sp/>=<sp/>(<ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref>)<sp/>delta;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__zcl__identify_1ga2cb1b23d3ccb08ae200e797358694d51" kindref="member">zcl_identify_time</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>_zcl_identify_time_set<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__zcl__identify_1ga40470468c9c1fe4ebfb52612234710b0" kindref="member">_zcl_identify_time_set</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structzcl__attribute__full__t" kindref="compound">zcl_attribute_full_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*attribute,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><ref refid="structzcl__attribute__write__rec__t" kindref="compound">zcl_attribute_write_rec_t</ref><sp/>*rec);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight></codeline>
<codeline lineno="104" refid="group__zcl__identify_1ga40470468c9c1fe4ebfb52612234710b0" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__zcl__identify_1ga40470468c9c1fe4ebfb52612234710b0" kindref="member">_zcl_identify_time_set</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structzcl__attribute__full__t" kindref="compound">zcl_attribute_full_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*attribute,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><ref refid="structzcl__attribute__write__rec__t" kindref="compound">zcl_attribute_write_rec_t</ref><sp/>*rec)</highlight></codeline>
<codeline lineno="106"><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1ga2140805d08462d474b82ddc8d1c2f3e6" kindref="member">int16_t</ref><sp/>bytes_read<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rec)<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>a<sp/>Write<sp/>Attributes<sp/>Request</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bytes_read<sp/>=<sp/><ref refid="group__zcl_1ga15bf36dadccd7a045bad7d6f0842e25a" kindref="member">zcl_decode_attribute</ref>(<sp/>&amp;attribute-&gt;base,<sp/>rec);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>(rec-&gt;<ref refid="group__zcl_1gaa2585d779da0ab21273a8d92de9a0ebe" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="group__zcl_1ga2bb65a6c04a14957000feaa12de9769c" kindref="member">ZCL_ATTR_WRITE_FLAG_ASSIGN</ref>))</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bytes_read;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__zcl__identify_1ga467ad1e40ea8475b4e49865436883e94" kindref="member">zcl_identify_end</ref><sp/>=<sp/>xbee_seconds_timer()<sp/>+<sp/><ref refid="group__zcl__identify_1ga2cb1b23d3ccb08ae200e797358694d51" kindref="member">zcl_identify_time</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bytes_read;</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>_zcl_identify_time_get<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal">uint_fast8_t<sp/><ref refid="group__zcl__identify_1ga7cde47425d0a779f5aff87985ea01951" kindref="member">_zcl_identify_time_get</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structzcl__attribute__full__t" kindref="compound">zcl_attribute_full_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*attribute);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight></codeline>
<codeline lineno="134" refid="group__zcl__identify_1ga7cde47425d0a779f5aff87985ea01951" refkind="member"><highlight class="normal">uint_fast8_t<sp/><ref refid="group__zcl__identify_1ga7cde47425d0a779f5aff87985ea01951" kindref="member">_zcl_identify_time_get</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structzcl__attribute__full__t" kindref="compound">zcl_attribute_full_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*attribute)</highlight></codeline>
<codeline lineno="135"><highlight class="normal">{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>zcl_attribute_update_fn<sp/>API,<sp/>but<sp/>does<sp/>not<sp/>use<sp/>&apos;attribute&apos;<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>zcl_identify_time<sp/>variable<sp/>is<sp/>global<sp/>for<sp/>all<sp/>Identify<sp/>server<sp/>clusters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal_1gacddb73dac3fd1bdec26cd7dc0a652c00" kindref="member">XBEE_UNUSED_PARAMETER</ref>(<sp/>attribute);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__zcl__identify_1ga95b00d55b861c1ea6033c16794ae818d" kindref="member">zcl_identify_isactive</ref>();<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>updates<sp/>zcl_identify_time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ZCL_STATUS_SUCCESS;</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>zcl_identify_attribute_tree<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight></codeline>
<codeline lineno="147"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><ref refid="structzcl__attribute__full__t" kindref="compound">zcl_attribute_full_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>identify_time;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end_of_list;</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}<sp/><ref refid="group__zcl__identify_1ga794a6ffcf3d47884c65a8a2c9e60851b" kindref="member">zcl_identify_attr</ref><sp/>=</highlight></codeline>
<codeline lineno="151"><highlight class="normal">{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>ID,<sp/>Flags,<sp/>Type,<sp/>Address<sp/>to<sp/>data,<sp/>min,<sp/>max,<sp/>read,<sp/>write</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/>{<sp/>{<sp/><ref refid="group__zcl__identify_1ga7df877a02f273adc190aa24ad0aff4c9" kindref="member">ZCL_IDENTIFY_ATTR_IDENTIFY_TIME</ref>,</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zcl_1ga40104652d30fa17b7ea5dde9e8b788b8" kindref="member">ZCL_ATTRIB_FLAG_FULL</ref>,</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ZCL_TYPE_UNSIGNED_16BIT,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="group__zcl__identify_1ga2cb1b23d3ccb08ae200e797358694d51" kindref="member">zcl_identify_time</ref><sp/>},</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0<sp/>},<sp/>{<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="group__zcl__identify_1ga7cde47425d0a779f5aff87985ea01951" kindref="member">_zcl_identify_time_get</ref>,<sp/>&amp;<ref refid="group__zcl__identify_1ga40470468c9c1fe4ebfb52612234710b0" kindref="member">_zcl_identify_time_set</ref><sp/>},</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__zcl_1gab05da20cf1dfaef97e20dfca2fd26d14" kindref="member">ZCL_ATTRIBUTE_END_OF_LIST</ref></highlight></codeline>
<codeline lineno="160"><highlight class="normal">};</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structzcl__attribute__tree__t" kindref="compound">zcl_attribute_tree_t</ref><sp/>zcl_identify_attribute_tree[]<sp/>=</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>{<sp/>ZCL_MFG_NONE,<sp/>&amp;<ref refid="group__zcl__identify_1ga794a6ffcf3d47884c65a8a2c9e60851b" kindref="member">zcl_identify_attr</ref>.identify_time.base,<sp/>NULL<sp/>}<sp/>};</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>zcl_identify_command<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight></codeline>
<codeline lineno="181" refid="group__zcl__identify_1ga94a1fe7c8892b55e0ffd3e2795139b1d" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__zcl__identify_1ga94a1fe7c8892b55e0ffd3e2795139b1d" kindref="member">zcl_identify_command</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*envelope,</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*context)</highlight></codeline>
<codeline lineno="183"><highlight class="normal">{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><ref refid="structzcl__command__t" kindref="compound">zcl_command_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zcl;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>frame<sp/>is<sp/>client-to-server,<sp/>not<sp/>manufacturer-specific<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>cluster<sp/>command<sp/>(not<sp/>&quot;profile-wide&quot;).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__zcl_1gadeb35ab493fffec9ba1c33f658929136" kindref="member">zcl_command_build</ref>(<sp/>&amp;zcl,<sp/>envelope,<sp/>context)<sp/>==<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zcl_1ga0bbd651dae138e104715e6e2de62084e" kindref="member">ZCL_CMD_MATCH</ref>(<sp/>&amp;zcl.<ref refid="group__zcl_1ga5226462a41663bc81a5d67c04f18868a" kindref="member">frame_control</ref>,<sp/>GENERAL,<sp/>CLIENT_TO_SERVER,<sp/>CLUSTER))</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>commands<sp/>sent<sp/>to<sp/>the<sp/>Identify<sp/>Server<sp/>Cluster</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>use<sp/>the<sp/>stack<sp/>if<sp/>this<sp/>isn&apos;t<sp/>a<sp/>general<sp/>command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___s_x_a_1ga4233297bd31be5c273d4fb0758cc54d7" kindref="member">PACKED_STRUCT</ref><sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zcl_1gaeac1f6671916dd0ad92b271080ec272a" kindref="member">zcl_header_response_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeout;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>response;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>XBEE_ZCL_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>processing<sp/>%u-byte<sp/>IDENTIFY<sp/>command\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>envelope-&gt;length);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__util_1gaa321236a0cb6f4e0dad592fdf1b550d2" kindref="member">hex_dump</ref>(<sp/>envelope-&gt;payload,<sp/>envelope-&gt;length,<sp/><ref refid="group__hal_1ga696f6553e33cbd20eda34e220ec9939a" kindref="member">HEX_DUMP_FLAG_TAB</ref>);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(zcl.<ref refid="group__zcl_1ga1a5aaa930940857f68f245eeb89506b5" kindref="member">command</ref>)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__zcl__identify_1ga40368a52613d3ef210919d39a8e5d046" kindref="member">ZCL_IDENTIFY_CMD_IDENTIFY</ref>:</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(zcl.<ref refid="group__zcl_1ga0ff9f63e333676ba1359f505d02dd281" kindref="member">length</ref><sp/>&gt;=<sp/>2)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zcl__identify_1ga2cb1b23d3ccb08ae200e797358694d51" kindref="member">zcl_identify_time</ref><sp/>=<sp/><ref refid="group__util__byteorder_1ga684a5d26d1989cbd925e97292cc81c72" kindref="member">le16toh</ref>(</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xbee_get_unaligned16(<sp/>zcl.<ref refid="group__zcl_1gaf0e34793a3febabcdb61c020aecbf805" kindref="member">zcl_payload</ref>));</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zcl__identify_1ga40470468c9c1fe4ebfb52612234710b0" kindref="member">_zcl_identify_time_set</ref>(<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__zcl_1gab5c99acba0d864acd326bcab46d1416e" kindref="member">zcl_default_response</ref>(<sp/>&amp;zcl,<sp/>ZCL_STATUS_SUCCESS);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>XBEE_ZCL_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>bad<sp/>IDENTIFY<sp/>packet?<sp/><sp/>length<sp/>&lt;<sp/>2\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__zcl_1gab5c99acba0d864acd326bcab46d1416e" kindref="member">zcl_default_response</ref>(<sp/>&amp;zcl,<sp/>ZCL_STATUS_MALFORMED_COMMAND);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__zcl__identify_1ga47774d9c6e213ee27738493dcf6e3f23" kindref="member">ZCL_IDENTIFY_CMD_QUERY</ref>:</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ignore<sp/>payload<sp/>--<sp/>future<sp/>versions<sp/>of<sp/>this<sp/>command<sp/>may<sp/>have</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>parameters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zcl__identify_1ga7cde47425d0a779f5aff87985ea01951" kindref="member">_zcl_identify_time_get</ref>(<sp/>NULL);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__zcl__identify_1ga2cb1b23d3ccb08ae200e797358694d51" kindref="member">zcl_identify_time</ref>)</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response.header.command<sp/>=<sp/><ref refid="group__zcl__identify_1ga19fdbf2dca0a6d6fc36021c51d31214c" kindref="member">ZCL_IDENTIFY_CMD_QUERY_RESPONSE</ref>;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>=<sp/><ref refid="group__zcl_1ga592c970c1f0bda49f1c618d2895dbc6d" kindref="member">zcl_build_header</ref>(<sp/>&amp;response.header,<sp/>&amp;zcl);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response.timeout<sp/>=<sp/><ref refid="group__util__byteorder_1ga3ea73a6089f61223b225c46e2ba58a47" kindref="member">htole16</ref>(<sp/><ref refid="group__zcl__identify_1ga2cb1b23d3ccb08ae200e797358694d51" kindref="member">zcl_identify_time</ref>);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__zcl_1ga947f6103f6bbe716ddeacbaed65e3ce3" kindref="member">zcl_send_response</ref>(<sp/>&amp;zcl,<sp/>(<ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/>*)&amp;response<sp/>+<sp/>offset,</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(response)<sp/>-<sp/>offset);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__zcl_1gab5c99acba0d864acd326bcab46d1416e" kindref="member">zcl_default_response</ref>(<sp/>&amp;zcl,<sp/>ZCL_STATUS_SUCCESS);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Command<sp/>not<sp/>handled<sp/>by<sp/>this<sp/>function,<sp/>pass<sp/>to<sp/>General<sp/>Command<sp/>Handler.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__zcl_1gac3849121e93e777ce9a7510d24517b9b" kindref="member">zcl_general_command</ref>(<sp/>envelope,<sp/>context);</highlight></codeline>
<codeline lineno="243"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/zigbee/zcl_identify.c"/>
  </compounddef>
</doxygen>
