<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="types_8h" kind="file" language="C++">
    <compoundname>types.h</compoundname>
    <includes refid="platform_8h" local="yes">xbee/platform.h</includes>
    <includedby refid="wpan__aps_8c" local="yes">src/wpan/wpan_aps.c</includedby>
    <includedby refid="wpan__types_8c" local="yes">src/wpan/wpan_types.c</includedby>
    <includedby refid="xbee__scan_8c" local="yes">src/xbee/xbee_scan.c</includedby>
    <includedby refid="xbee__wpan_8c" local="yes">src/xbee/xbee_wpan.c</includedby>
    <includedby refid="aps_8h" local="yes">include/wpan/aps.h</includedby>
    <includedby refid="device_8h" local="yes">include/xbee/device.h</includedby>
    <includedby refid="discovery_8h" local="yes">include/xbee/discovery.h</includedby>
    <includedby refid="io_8h" local="yes">include/xbee/io.h</includedby>
    <includedby refid="scan_8h" local="yes">include/xbee/scan.h</includedby>
    <includedby refid="wpan_8h" local="yes">include/xbee/wpan.h</includedby>
    <includedby refid="zcl__commissioning_8h" local="yes">include/zigbee/zcl_commissioning.h</includedby>
    <includedby refid="zdo_8h" local="yes">include/zigbee/zdo.h</includedby>
    <incdepgraph>
      <node id="64">
        <label>errno.h</label>
      </node>
      <node id="66">
        <label>xbee/jslong_glue.h</label>
        <link refid="jslong__glue_8h_source"/>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>stddef.h</label>
      </node>
      <node id="62">
        <label>include/wpan/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>xbee/platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>xbee/jslong.h</label>
        <link refid="jslong_8h_source"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="74">
        <label>src/xbee/xbee_device.c</label>
        <link refid="xbee__device_8c"/>
      </node>
      <node id="78">
        <label>include/xbee/device.h</label>
        <link refid="device_8h"/>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
      </node>
      <node id="95">
        <label>src/xbee/xbee_gpm.c</label>
        <link refid="xbee__gpm_8c"/>
      </node>
      <node id="85">
        <label>include/xbee/io.h</label>
        <link refid="io_8h"/>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
      </node>
      <node id="107">
        <label>include/xbee/transparent_serial.h</label>
        <link refid="transparent__serial_8h"/>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
      </node>
      <node id="117">
        <label>src/zigbee/zcl_time.c</label>
        <link refid="zcl__time_8c"/>
      </node>
      <node id="87">
        <label>src/rabbit/xbee_sxa_socket.c</label>
        <link refid="xbee__sxa__socket_8c"/>
      </node>
      <node id="119">
        <label>src/zigbee/zcl_commissioning.c</label>
        <link refid="zcl__commissioning_8c"/>
      </node>
      <node id="93">
        <label>include/xbee/discovery.h</label>
        <link refid="discovery_8h"/>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>src/xbee/xbee_commissioning.c</label>
        <link refid="xbee__commissioning_8c"/>
      </node>
      <node id="76">
        <label>src/zigbee/zigbee_zcl.c</label>
        <link refid="zigbee__zcl_8c"/>
      </node>
      <node id="77">
        <label>src/zigbee/zigbee_zdo.c</label>
        <link refid="zigbee__zdo_8c"/>
      </node>
      <node id="94">
        <label>include/xbee/gpm.h</label>
        <link refid="gpm_8h"/>
        <childnode refid="95" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>src/xbee/xbee_io.c</label>
        <link refid="xbee__io_8c"/>
      </node>
      <node id="91">
        <label>src/xbee/xbee_firmware.c</label>
        <link refid="xbee__firmware_8c"/>
      </node>
      <node id="104">
        <label>src/xbee/xbee_ota_client.c</label>
        <link refid="xbee__ota__client_8c"/>
      </node>
      <node id="105">
        <label>include/xbee/ota_server.h</label>
        <link refid="ota__server_8h"/>
        <childnode refid="106" relation="include">
        </childnode>
      </node>
      <node id="111">
        <label>src/zigbee/zcl_client.c</label>
        <link refid="zcl__client_8c"/>
      </node>
      <node id="106">
        <label>src/xbee/xbee_ota_server.c</label>
        <link refid="xbee__ota__server_8c"/>
      </node>
      <node id="110">
        <label>src/zigbee/zcl_basic.c</label>
        <link refid="zcl__basic_8c"/>
      </node>
      <node id="116">
        <label>include/zigbee/zcl_client.h</label>
        <link refid="zcl__client_8h"/>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>include/wpan/aps.h</label>
        <link refid="aps_8h"/>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
      </node>
      <node id="101">
        <label>src/xbee/xbee_xmodem.c</label>
        <link refid="xbee__xmodem_8c"/>
      </node>
      <node id="99">
        <label>include/xbee/wpan.h</label>
        <link refid="wpan_8h"/>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
      </node>
      <node id="96">
        <label>include/xbee/route.h</label>
        <link refid="route_8h"/>
        <childnode refid="97" relation="include">
        </childnode>
      </node>
      <node id="120">
        <label>include/zigbee/zcl_identify.h</label>
        <link refid="zcl__identify_8h"/>
        <childnode refid="112" relation="include">
        </childnode>
      </node>
      <node id="109">
        <label>include/zigbee/zcl.h</label>
        <link refid="zcl_8h"/>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
      </node>
      <node id="118">
        <label>include/zigbee/zcl_commissioning.h</label>
        <link refid="zcl__commissioning_8h"/>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
      </node>
      <node id="88">
        <label>src/xbee/xbee_reg_descr.c</label>
        <link refid="xbee__reg__descr_8c"/>
      </node>
      <node id="71">
        <label>src/xbee/xbee_scan.c</label>
        <link refid="xbee__scan_8c"/>
      </node>
      <node id="68">
        <label>include/wpan/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>include/xbee/sxa.h</label>
        <link refid="sxa_8h"/>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>src/xbee/xbee_sxa.c</label>
        <link refid="xbee__sxa_8c"/>
      </node>
      <node id="72">
        <label>src/xbee/xbee_wpan.c</label>
        <link refid="xbee__wpan_8c"/>
      </node>
      <node id="80">
        <label>include/xbee/atcmd.h</label>
        <link refid="atcmd_8h"/>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
      </node>
      <node id="121">
        <label>include/zigbee/zcl_time.h</label>
        <link refid="zcl__time_8h"/>
        <childnode refid="117" relation="include">
        </childnode>
      </node>
      <node id="103">
        <label>include/xbee/ota_client.h</label>
        <link refid="ota__client_8h"/>
        <childnode refid="104" relation="include">
        </childnode>
      </node>
      <node id="89">
        <label>include/xbee/sxa_socket.h</label>
        <link refid="sxa__socket_8h"/>
      </node>
      <node id="90">
        <label>include/xbee/atmode.h</label>
        <link refid="atmode_8h"/>
        <childnode refid="91" relation="include">
        </childnode>
      </node>
      <node id="112">
        <label>src/zigbee/zcl_identify.c</label>
        <link refid="zcl__identify_8c"/>
      </node>
      <node id="69">
        <label>src/wpan/wpan_aps.c</label>
        <link refid="wpan__aps_8c"/>
      </node>
      <node id="122">
        <label>include/zigbee/zdo.h</label>
        <link refid="zdo_8h"/>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="100">
        <label>include/xbee/xmodem.h</label>
        <link refid="xmodem_8h"/>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
      </node>
      <node id="92">
        <label>include/xbee/commissioning.h</label>
        <link refid="commissioning_8h"/>
        <childnode refid="82" relation="include">
        </childnode>
      </node>
      <node id="97">
        <label>src/xbee/xbee_route.c</label>
        <link refid="xbee__route_8c"/>
      </node>
      <node id="70">
        <label>src/wpan/wpan_types.c</label>
        <link refid="wpan__types_8c"/>
      </node>
      <node id="102">
        <label>include/xbee/firmware.h</label>
        <link refid="firmware_8h"/>
        <childnode refid="91" relation="include">
        </childnode>
      </node>
      <node id="114">
        <label>include/zigbee/zcl_basic.h</label>
        <link refid="zcl__basic_8h"/>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
      </node>
      <node id="98">
        <label>include/xbee/scan.h</label>
        <link refid="scan_8h"/>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>src/zigbee/zcl_onoff.c</label>
        <link refid="zcl__onoff_8c"/>
      </node>
      <node id="81">
        <label>src/xbee/xbee_atcmd.c</label>
        <link refid="xbee__atcmd_8c"/>
      </node>
      <node id="108">
        <label>src/xbee/xbee_transparent_serial.c</label>
        <link refid="xbee__transparent__serial_8c"/>
      </node>
      <node id="113">
        <label>include/zigbee/zcl_bacnet.h</label>
        <link refid="zcl__bacnet_8h"/>
      </node>
      <node id="115">
        <label>include/zigbee/zcl_basic_attributes.h</label>
        <link refid="zcl__basic__attributes_8h"/>
      </node>
      <node id="83">
        <label>src/xbee/xbee_discovery.c</label>
        <link refid="xbee__discovery_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="unionaddr64" prot="public">addr64</innerclass>
    <innerclass refid="structwpan__address__t" prot="public">wpan_address_t</innerclass>
      <sectiondef kind="user-defined">
      <header>Reserved/Special WPAN network (16-bit) addresses</header>
      <memberdef kind="define" id="group__wpan__types_1ga6865088a83d5dbd67d9185fbe0d25063" prot="public" static="no">
        <name>WPAN_NET_ADDR_BCAST_ALL_NODES</name>
        <initializer>0xFFFF</initializer>
        <briefdescription>
<para>network broadcast address for all nodes </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/types.h" line="61" column="9" bodyfile="include/wpan/types.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__wpan__types_1ga08ec03f67d0d74ba6f98da543baee129" prot="public" static="no">
        <name>WPAN_NET_ADDR_BCAST_NOT_ASLEEP</name>
        <initializer>0xFFFD</initializer>
        <briefdescription>
<para>network broadcast address for non-sleeping devices </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/types.h" line="63" column="9" bodyfile="include/wpan/types.h" bodystart="63" bodyend="-1"/>
        <referencedby refid="group__zcl__client_1ga4c75937cc0fa5c70c63f30b59a4ddebc" compoundref="zcl__client_8c" startline="334" endline="402">zdo_send_match_desc</referencedby>
      </memberdef>
      <memberdef kind="define" id="group__wpan__types_1gabc1252917f345a50aa97f991bb7a3685" prot="public" static="no">
        <name>WPAN_NET_ADDR_BCAST_ROUTERS</name>
        <initializer>0xFFFC</initializer>
        <briefdescription>
<para>network broadcast address for all routers (and coordinators) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/types.h" line="65" column="9" bodyfile="include/wpan/types.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__wpan__types_1ga1674d7b825e528a482725d1c06b02c10" prot="public" static="no">
        <name>WPAN_NET_ADDR_UNDEFINED</name>
        <initializer>0xFFFE</initializer>
        <briefdescription>
<para>used to indicate 64-bit addressing (16-bit address is ignored) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/types.h" line="68" column="9" bodyfile="include/wpan/types.h" bodystart="68" bodyend="-1"/>
        <referencedby refid="group__xbee__ota__client_1ga88905a78517417dd42f6356038717d01" compoundref="xbee__ota__client_8c" startline="119" endline="154">_xbee_ota_xmodem_write</referencedby>
        <referencedby refid="group__xbee__ota__client_1ga4805b029d840b86133ef62d64866c6af" compoundref="xbee__ota__client_8c" startline="157" endline="211">xbee_ota_init</referencedby>
        <referencedby refid="group__zcl__client_1ga4c75937cc0fa5c70c63f30b59a4ddebc" compoundref="zcl__client_8c" startline="334" endline="402">zdo_send_match_desc</referencedby>
        <referencedby refid="group__zdo_1gae4b6736d215caf2a10790761ed52443d" compoundref="zigbee__zdo_8c" startline="110" endline="139">_zdo_envelope_create</referencedby>
        <referencedby refid="group__zdo_1gaa70aa4bcb14a98c69e7a54a9971ea194" compoundref="zigbee__zdo_8c" startline="526" endline="637">_zdo_simple_desc_respond</referencedby>
      </memberdef>
      <memberdef kind="define" id="group__wpan__types_1ga5158cbab6c4139bd77d1d3f80d9071b2" prot="public" static="no">
        <name>WPAN_NET_ADDR_COORDINATOR</name>
        <initializer>0x0000</initializer>
        <briefdescription>
<para>network coordinator always uses network address 0x0000 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/types.h" line="71" column="9" bodyfile="include/wpan/types.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Reserved/Special WPAN MAC (64-bit) addresses</header>
      <memberdef kind="define" id="group__wpan__types_1ga09e965ef6cfbfd48312d86bb011f125b" prot="public" static="no">
        <name>WPAN_IEEE_ADDR_UNDEFINED</name>
        <initializer>(&amp;<ref refid="group__wpan__types_1gaaa2d876b00a2f300e24f1077e17dcb76" kindref="member">_WPAN_IEEE_ADDR_UNDEFINED</ref>)</initializer>
        <briefdescription>
<para>Pointer to <computeroutput><ref refid="unionaddr64" kindref="compound">addr64</ref></computeroutput> representing an undefined IEEE address (all ones). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/types.h" line="79" column="9" bodyfile="include/wpan/types.h" bodystart="79" bodyend="-1"/>
        <referencedby refid="group__zdo_1ga4af5f8d70054f7883dbc1305e3a3f181" compoundref="zigbee__zdo_8c" startline="1134" endline="1173">zdo_send_ieee_addr_req</referencedby>
      </memberdef>
      <memberdef kind="define" id="group__wpan__types_1gaced36f5538c5bb2da4f60a90313f1674" prot="public" static="no">
        <name>WPAN_IEEE_ADDR_BROADCAST</name>
        <initializer>(&amp;<ref refid="group__wpan__types_1ga83c0da7da25848a435da46b80fb70933" kindref="member">_WPAN_IEEE_ADDR_BROADCAST</ref>)</initializer>
        <briefdescription>
<para>Pointer to <computeroutput><ref refid="unionaddr64" kindref="compound">addr64</ref></computeroutput> representing the broadcast IEEE address. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/types.h" line="83" column="9" bodyfile="include/wpan/types.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__wpan__types_1ga816199ef85ef801e07ae48350664034d" prot="public" static="no">
        <name>WPAN_IEEE_ADDR_COORDINATOR</name>
        <initializer>(&amp;<ref refid="group__wpan__types_1gac6bb0830c58428d2789507a23ab9fcdd" kindref="member">_WPAN_IEEE_ADDR_COORDINATOR</ref>)</initializer>
        <briefdescription>
<para>Pointer to <computeroutput><ref refid="unionaddr64" kindref="compound">addr64</ref></computeroutput> representing the coordinator&apos;s IEEE adddress (all zeros). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/types.h" line="88" column="9" bodyfile="include/wpan/types.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__wpan__types_1ga014f9d0857312b6a7f80ee10ecfd0935" prot="public" static="no">
        <name>WPAN_IEEE_ADDR_ALL_ZEROS</name>
        <initializer>(&amp;<ref refid="group__wpan__types_1gac6bb0830c58428d2789507a23ab9fcdd" kindref="member">_WPAN_IEEE_ADDR_COORDINATOR</ref>)</initializer>
        <briefdescription>
<para>Pointer to <computeroutput><ref refid="unionaddr64" kindref="compound">addr64</ref></computeroutput> of all zeros. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__wpan__types_1ga9795dea7f415ceb7502f39a78ebadfc1" kindref="member">addr64_is_zero</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/types.h" line="93" column="9" bodyfile="include/wpan/types.h" bodystart="93" bodyend="-1"/>
        <referencedby refid="group__zdo_1gae4b6736d215caf2a10790761ed52443d" compoundref="zigbee__zdo_8c" startline="110" endline="139">_zdo_envelope_create</referencedby>
        <referencedby refid="group__wpan__types_1ga500b175732df9779b3670e2ba1402530" compoundref="wpan__types_8c" startline="186" endline="229">addr64_parse</referencedby>
      </memberdef>
      <memberdef kind="variable" id="group__wpan__types_1gaaa2d876b00a2f300e24f1077e17dcb76" prot="public" static="no" mutable="no">
        <type>const <ref refid="unionaddr64" kindref="compound">addr64</ref></type>
        <definition>const addr64 _WPAN_IEEE_ADDR_UNDEFINED</definition>
        <argsstring></argsstring>
        <name>_WPAN_IEEE_ADDR_UNDEFINED</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<internal><para>address pointed to by macro <ref refid="group__wpan__types_1ga09e965ef6cfbfd48312d86bb011f125b" kindref="member">WPAN_IEEE_ADDR_UNDEFINED</ref> </para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/types.h" line="80" column="1" bodyfile="src/wpan/wpan_types.c" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__wpan__types_1ga83c0da7da25848a435da46b80fb70933" prot="public" static="no" mutable="no">
        <type>const <ref refid="unionaddr64" kindref="compound">addr64</ref></type>
        <definition>const addr64 _WPAN_IEEE_ADDR_BROADCAST</definition>
        <argsstring></argsstring>
        <name>_WPAN_IEEE_ADDR_BROADCAST</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<internal><para>address pointed to by macro <ref refid="group__wpan__types_1gaced36f5538c5bb2da4f60a90313f1674" kindref="member">WPAN_IEEE_ADDR_BROADCAST</ref> </para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/types.h" line="84" column="1" bodyfile="src/wpan/wpan_types.c" bodystart="36" bodyend="-1"/>
        <referencedby refid="group__zcl__client_1ga4c75937cc0fa5c70c63f30b59a4ddebc" compoundref="zcl__client_8c" startline="334" endline="402">zdo_send_match_desc</referencedby>
      </memberdef>
      <memberdef kind="variable" id="group__wpan__types_1gac6bb0830c58428d2789507a23ab9fcdd" prot="public" static="no" mutable="no">
        <type>const <ref refid="unionaddr64" kindref="compound">addr64</ref></type>
        <definition>const addr64 _WPAN_IEEE_ADDR_COORDINATOR</definition>
        <argsstring></argsstring>
        <name>_WPAN_IEEE_ADDR_COORDINATOR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<internal><para>address pointed to by macro <ref refid="group__wpan__types_1ga816199ef85ef801e07ae48350664034d" kindref="member">WPAN_IEEE_ADDR_COORDINATOR</ref> </para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/types.h" line="89" column="1" bodyfile="src/wpan/wpan_types.c" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__wpan__types_1ga806a2554dd5d8a154d23b13b9cf72141" prot="public" static="no">
        <name>ADDR64_FORMAT_SEPARATOR</name>
        <initializer>&apos;-&apos;</initializer>
        <briefdescription>
<para>Separator used by <ref refid="group__wpan__types_1ga448782f4aed0821758969b47221417ed" kindref="member">addr64_format()</ref>, defaults to &apos;-&apos; unless specified at compile time. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/types.h" line="44" column="10" bodyfile="include/wpan/types.h" bodystart="44" bodyend="-1"/>
        <referencedby refid="group__wpan__types_1ga448782f4aed0821758969b47221417ed" compoundref="wpan__types_8c" startline="77" endline="111">addr64_format</referencedby>
      </memberdef>
      <memberdef kind="define" id="group__wpan__types_1gac468b40b060897498f923923654c3d4a" prot="public" static="no">
        <name>ADDR64_STRING_LENGTH</name>
        <initializer>(8 * 2 + 7 + 1)</initializer>
        <briefdescription>
<para>Size of character buffer to pass to <ref refid="group__wpan__types_1ga448782f4aed0821758969b47221417ed" kindref="member">addr64_format()</ref> (8 2-character bytes, 7 separators and 1 null). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wpan/types.h" line="49" column="9" bodyfile="include/wpan/types.h" bodystart="49" bodyend="-1"/>
        <referencedby refid="group__zdo_1gad723bd899ccda9ec96f6226893c1335b" compoundref="zigbee__zdo_8c" startline="1083" endline="1130">_zdo_process_ieee_addr_resp</referencedby>
        <referencedby refid="group__wpan__aps_1ga2a4e8b3e2022e55e6607243a5feb25cd" compoundref="wpan__aps_8c" startline="823" endline="841">wpan_envelope_dump</referencedby>
        <referencedby refid="group__zdo_1ga40f076c190ab2390836687b8e1f705eb" compoundref="zigbee__zdo_8c" startline="1028" endline="1070">zdo_send_nwk_addr_req</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__wpan__types_1ga448782f4aed0821758969b47221417ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
        <definition>char FAR * addr64_format</definition>
        <argsstring>(char FAR *buffer, const addr64 FAR *address)</argsstring>
        <name>addr64_format</name>
        <param>
          <type>char <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const <ref refid="unionaddr64" kindref="compound">addr64</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>address</declname>
        </param>
        <briefdescription>
<para>Format a 64-bit address as a null-terminated, printable string (e.g., &quot;00-13-A2-01-23-45-67&quot;). </para>        </briefdescription>
        <detaileddescription>
<para>If the first two bytes are 0x00, assume a 48-bit MAC address and format as 00-40-9D-01-23-45.</para><para>To change the default separator (&apos;-&apos;), define ADDR64_FORMAT_SEPARATOR to any character. For example:</para><para>#define ADDR64_FORMAT_SEPARATOR &apos;:&apos;</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a buffer of at least <ref refid="group__wpan__types_1gac468b40b060897498f923923654c3d4a" kindref="member">ADDR64_STRING_LENGTH</ref> (8 2-character bytes + 7 separators + 1 null = 24) bytes.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">address</parametername>
</parameternamelist>
<parameterdescription>
<para>64-bit address to format.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><emphasis>address</emphasis> as a printable string (stored in <emphasis>buffer</emphasis>).</para></simplesect>
<xrefsect id="todo_1_todo000005"><xreftitle>Todo</xreftitle><xrefdescription><para>Add a parameter to indicate big or little endian and update code to work with either. (for little-endian, b starts at address-&gt;b + 8 and is decremented)</para></xrefdescription></xrefsect><verbatim>     add a parameter for other formats/flags
     - uppercase vs. lowercase hex
     - compact format (0013a200-405e0ef0)
     - format used by the Python framework (with [!]?)</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wpan/wpan_types.c" line="77" column="1" bodyfile="src/wpan/wpan_types.c" bodystart="77" bodyend="111"/>
        <references refid="group__wpan__types_1ga806a2554dd5d8a154d23b13b9cf72141" compoundref="types_8h" startline="44">ADDR64_FORMAT_SEPARATOR</references>
        <references refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" compoundref="platform_8h" startline="370">FAR</references>
        <referencedby refid="group__wpan__aps_1ga2a4e8b3e2022e55e6607243a5feb25cd" compoundref="wpan__aps_8c" startline="823" endline="841">wpan_envelope_dump</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__wpan__types_1ga2f0706c06dc9bdcb918b55635dcd9b6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__hal__dos_1ga04dd5074964518403bf944f2b240a5f8" kindref="member">bool_t</ref></type>
        <definition>bool_t addr64_equal</definition>
        <argsstring>(const addr64 FAR *addr1, const addr64 FAR *addr2)</argsstring>
        <name>addr64_equal</name>
        <param>
          <type>const <ref refid="unionaddr64" kindref="compound">addr64</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>addr1</declname>
        </param>
        <param>
          <type>const <ref refid="unionaddr64" kindref="compound">addr64</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>addr2</declname>
        </param>
        <briefdescription>
<para>Compare two 64-bit addresses for equality. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">addr1</parametername>
</parameternamelist>
<parameterdescription>
<para>address to compare </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">addr2</parametername>
</parameternamelist>
<parameterdescription>
<para>address to compare</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>TRUE</parametername>
</parameternamelist>
<parameterdescription>
<para><emphasis>addr1</emphasis> and <emphasis>addr2</emphasis> are not NULL and point to identical addresses </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FALSE</parametername>
</parameternamelist>
<parameterdescription>
<para>NULL parameter passed in, or addresses differ </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wpan/wpan_types.c" line="125" column="1" bodyfile="src/wpan/wpan_types.c" bodystart="125" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="group__wpan__types_1ga9795dea7f415ceb7502f39a78ebadfc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__hal__dos_1ga04dd5074964518403bf944f2b240a5f8" kindref="member">bool_t</ref></type>
        <definition>bool_t addr64_is_zero</definition>
        <argsstring>(const addr64 FAR *addr)</argsstring>
        <name>addr64_is_zero</name>
        <param>
          <type>const <ref refid="unionaddr64" kindref="compound">addr64</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
<para>Test a 64-bit address for zero. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">addr</parametername>
</parameternamelist>
<parameterdescription>
<para>address to test</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>TRUE</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>addr</computeroutput> is NULL or points to an all-zero address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FALSE</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>addr</computeroutput> points to a non-zero address</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__wpan__types_1ga014f9d0857312b6a7f80ee10ecfd0935" kindref="member">WPAN_IEEE_ADDR_ALL_ZEROS</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wpan/wpan_types.c" line="146" column="1" bodyfile="src/wpan/wpan_types.c" bodystart="146" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="group__wpan__types_1ga500b175732df9779b3670e2ba1402530" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int addr64_parse</definition>
        <argsstring>(addr64 *address_be, const char FAR *str)</argsstring>
        <name>addr64_parse</name>
        <param>
          <type><ref refid="unionaddr64" kindref="compound">addr64</ref> *</type>
          <declname>address_be</declname>
        </param>
        <param>
          <type>const char <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Parse a text string into a 64-bit IEEE address. </para>        </briefdescription>
        <detaileddescription>
<para>Converts a text string with eight 2-character hex values, with an optional separator between any two values. For example, the following formats are all valid:<itemizedlist>
<listitem><para>01-23-45-67-89-ab-cd-ef</para></listitem><listitem><para>01234567-89ABCDEF</para></listitem><listitem><para>01:23:45:67:89:aB:Cd:EF</para></listitem><listitem><para>0123 4567 89AB cdef</para></listitem></itemizedlist>
</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">address</parametername>
</parameternamelist>
<parameterdescription>
<para>converted address (stored big-endian) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">str</parametername>
</parameternamelist>
<parameterdescription>
<para>string to convert, starting with first hex character</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>invalid parameters passed to function; if <emphasis>address</emphasis> is not NULL, it will be set to all zeros </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>string converted </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wpan/wpan_types.c" line="186" column="1" bodyfile="src/wpan/wpan_types.c" bodystart="186" bodyend="229"/>
        <references refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" compoundref="platform_8h" startline="95">EINVAL</references>
        <references refid="group__hal_1ga519e5ae2049b59689a474a8c48fee353">hexstrtobyte</references>
        <references refid="group__wpan__types_1ga014f9d0857312b6a7f80ee10ecfd0935" compoundref="types_8h" startline="93">WPAN_IEEE_ADDR_ALL_ZEROS</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>WPAN datatypes and support functions, valid for ZigBee and DigiMesh. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2008-2012<sp/>Digi<sp/>International<sp/>Inc.,</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>not<sp/>expressly<sp/>granted<sp/>are<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>Source<sp/>Code<sp/>Form<sp/>is<sp/>subject<sp/>to<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>Mozilla<sp/>Public</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>License,<sp/>v.<sp/>2.0.<sp/>If<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>MPL<sp/>was<sp/>not<sp/>distributed<sp/>with<sp/>this<sp/>file,</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>You<sp/>can<sp/>obtain<sp/>one<sp/>at<sp/>http://mozilla.org/MPL/2.0/.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>Digi<sp/>International<sp/>Inc.<sp/>11001<sp/>Bren<sp/>Road<sp/>East,<sp/>Minnetonka,<sp/>MN<sp/>55343</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>=======================================================================</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="preprocessor">#ifndef<sp/>__WPAN_TYPES_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__WPAN_TYPES_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="platform_8h" kindref="compound">xbee/platform.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><ref refid="group__hal_1ga336bff4f4a6012aacc4468132bbd3d7f" kindref="member">XBEE_BEGIN_DECLS</ref></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="unionaddr64" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b[8];</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u[4];</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1ga09a1e304d66d35dd47daffee9731edaa" kindref="member">uint32_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l[2];</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}<sp/><ref refid="unionaddr64" kindref="compound">addr64</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ADDR64_FORMAT_SEPARATOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>ADDR64_FORMAT_SEPARATOR<sp/>&apos;-&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="group__wpan__types_1gac468b40b060897498f923923654c3d4a" refkind="member"><highlight class="preprocessor">#define<sp/>ADDR64_STRING_LENGTH<sp/>(8<sp/>*<sp/>2<sp/>+<sp/>7<sp/>+<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/>These<sp/>functions<sp/>are<sp/>documented<sp/>with<sp/>their<sp/>implementation<sp/>in<sp/>wpan_types.c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*<ref refid="group__wpan__types_1ga448782f4aed0821758969b47221417ed" kindref="member">addr64_format</ref>(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*buffer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unionaddr64" kindref="compound">addr64</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*address);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><ref refid="group__hal__dos_1ga04dd5074964518403bf944f2b240a5f8" kindref="member">bool_t</ref><sp/><ref refid="group__wpan__types_1ga2f0706c06dc9bdcb918b55635dcd9b6f" kindref="member">addr64_equal</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unionaddr64" kindref="compound">addr64</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*addr1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unionaddr64" kindref="compound">addr64</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*addr2);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><ref refid="group__hal__dos_1ga04dd5074964518403bf944f2b240a5f8" kindref="member">bool_t</ref><sp/><ref refid="group__wpan__types_1ga9795dea7f415ceb7502f39a78ebadfc1" kindref="member">addr64_is_zero</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unionaddr64" kindref="compound">addr64</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*addr);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__wpan__types_1ga500b175732df9779b3670e2ba1402530" kindref="member">addr64_parse</ref>(<sp/><ref refid="unionaddr64" kindref="compound">addr64</ref><sp/>*address,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*str);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="preprocessor">#define<sp/>WPAN_NET_ADDR_BCAST_ALL_NODES<sp/><sp/>0xFFFF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WPAN_NET_ADDR_BCAST_NOT_ASLEEP<sp/>0xFFFD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WPAN_NET_ADDR_BCAST_ROUTERS<sp/><sp/><sp/><sp/>0xFFFC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="group__wpan__types_1ga1674d7b825e528a482725d1c06b02c10" refkind="member"><highlight class="preprocessor">#define<sp/>WPAN_NET_ADDR_UNDEFINED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xFFFE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="group__wpan__types_1ga5158cbab6c4139bd77d1d3f80d9071b2" refkind="member"><highlight class="preprocessor">#define<sp/>WPAN_NET_ADDR_COORDINATOR<sp/><sp/><sp/><sp/><sp/><sp/>0x0000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"></codeline>
<codeline lineno="77"><highlight class="preprocessor">#define<sp/>WPAN_IEEE_ADDR_UNDEFINED<sp/>(&amp;_WPAN_IEEE_ADDR_UNDEFINED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unionaddr64" kindref="compound">addr64</ref><sp/><ref refid="group__wpan__types_1gaaa2d876b00a2f300e24f1077e17dcb76" kindref="member">_WPAN_IEEE_ADDR_UNDEFINED</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="group__wpan__types_1gaced36f5538c5bb2da4f60a90313f1674" refkind="member"><highlight class="preprocessor">#define<sp/>WPAN_IEEE_ADDR_BROADCAST<sp/>(&amp;_WPAN_IEEE_ADDR_BROADCAST)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unionaddr64" kindref="compound">addr64</ref><sp/><ref refid="group__wpan__types_1ga83c0da7da25848a435da46b80fb70933" kindref="member">_WPAN_IEEE_ADDR_BROADCAST</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="group__wpan__types_1ga816199ef85ef801e07ae48350664034d" refkind="member"><highlight class="preprocessor">#define<sp/>WPAN_IEEE_ADDR_COORDINATOR<sp/>(&amp;_WPAN_IEEE_ADDR_COORDINATOR)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unionaddr64" kindref="compound">addr64</ref><sp/><ref refid="group__wpan__types_1gac6bb0830c58428d2789507a23ab9fcdd" kindref="member">_WPAN_IEEE_ADDR_COORDINATOR</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="group__wpan__types_1ga014f9d0857312b6a7f80ee10ecfd0935" refkind="member"><highlight class="preprocessor">#define<sp/>WPAN_IEEE_ADDR_ALL_ZEROS<sp/>(&amp;_WPAN_IEEE_ADDR_COORDINATOR)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"></codeline>
<codeline lineno="98" refid="structwpan__address__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_wpan_address_t<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><ref refid="unionaddr64" kindref="compound">addr64</ref><sp/><sp/><sp/><sp/><sp/><sp/>ieee;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1ga5a8b2dc9e45a9ee81a94ef304fb62505" kindref="member">uint16_t</ref><sp/><sp/><sp/><sp/>network;</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}<sp/><ref refid="structwpan__address__t" kindref="compound">wpan_address_t</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><ref refid="group__hal_1ga8d7f5a691878e9ffb7da396899581062" kindref="member">XBEE_END_DECLS</ref></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>compiling<sp/>in<sp/>Dynamic<sp/>C,<sp/>automatically<sp/>#use<sp/>the<sp/>appropriate<sp/>C<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__DC__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#use<sp/>&quot;wpan_types.c&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>#ifdef<sp/>__WPAN_TYPES_H</highlight></codeline>
    </programlisting>
    <location file="include/wpan/types.h"/>
  </compounddef>
</doxygen>
