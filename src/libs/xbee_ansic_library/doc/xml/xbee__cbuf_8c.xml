<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="xbee__cbuf_8c" kind="file" language="C++">
    <compoundname>xbee_cbuf.c</compoundname>
    <includes refid="cbuf_8h" local="yes">xbee/cbuf.h</includes>
    <incdepgraph>
      <node id="1318">
        <label>errno.h</label>
      </node>
      <node id="1320">
        <label>xbee/jslong_glue.h</label>
        <link refid="jslong__glue_8h_source"/>
        <childnode refid="1321" relation="include">
        </childnode>
      </node>
      <node id="1319">
        <label>stddef.h</label>
      </node>
      <node id="1317">
        <label>xbee/platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="1318" relation="include">
        </childnode>
        <childnode refid="1319" relation="include">
        </childnode>
        <childnode refid="1320" relation="include">
        </childnode>
      </node>
      <node id="1315">
        <label>src/xbee/xbee_cbuf.c</label>
        <link refid="xbee__cbuf_8c"/>
        <childnode refid="1316" relation="include">
        </childnode>
      </node>
      <node id="1316">
        <label>xbee/cbuf.h</label>
        <link refid="cbuf_8h"/>
        <childnode refid="1317" relation="include">
        </childnode>
      </node>
      <node id="1321">
        <label>xbee/jslong.h</label>
        <link refid="jslong_8h_source"/>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__util__cbuf_1gabf58cafa9f3e989b433a14c23a94cebb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int xbee_cbuf_init</definition>
        <argsstring>(xbee_cbuf_t FAR *cbuf, uint_fast8_t datasize)</argsstring>
        <name>xbee_cbuf_init</name>
        <param>
          <type><ref refid="structxbee__cbuf__t" kindref="compound">xbee_cbuf_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>cbuf</declname>
        </param>
        <param>
          <type>uint_fast8_t</type>
          <declname>datasize</declname>
        </param>
        <briefdescription>
<para>Initialize the fields of the circular buffer. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>You must initialize the <ref refid="structxbee__cbuf__t" kindref="compound">xbee_cbuf_t</ref> structure before using it with any other xbee_cbuf_xxx() functions. If you have ISRs pushing data into the buffer, don&apos;t enable them until AFTER you&apos;ve called xbee_cbuf_init.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">cbuf</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of buffer to use for the circular buffer. This buffer must be (datasize + CBUF_OVEREAD) bytes long to hold the locks, head, tail, size and buffered bytes.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">datasize</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum number of bytes to store in the circular buffer. This size must be at least 3, no more than 255, and a power of 2 minus 1 (2^n - 1).</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>invalid parameter </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/xbee/xbee_cbuf.c" line="31" column="1" bodyfile="src/xbee/xbee_cbuf.c" bodystart="31" bodyend="42"/>
        <references refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" compoundref="platform_8h" startline="95">EINVAL</references>
        <referencedby refid="group__xbee__ota__client_1ga4805b029d840b86133ef62d64866c6af" compoundref="xbee__ota__client_8c" startline="157" endline="211">xbee_ota_init</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__util__cbuf_1gaab9462b172fea45fc3e5ce2b3a5cca10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int xbee_cbuf_putch</definition>
        <argsstring>(xbee_cbuf_t FAR *cbuf, uint_fast8_t ch)</argsstring>
        <name>xbee_cbuf_putch</name>
        <param>
          <type><ref refid="structxbee__cbuf__t" kindref="compound">xbee_cbuf_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>cbuf</declname>
        </param>
        <param>
          <type>uint_fast8_t</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
<para>Append a single byte to the circular buffer (if not full). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">cbuf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to circular buffer.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch</parametername>
</parameternamelist>
<parameterdescription>
<para>Byte to append.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer is full </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>the byte was appended</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__util__cbuf_1gaf78d1608008ebde71b57a6bf34e6a3e1" kindref="member">xbee_cbuf_getch</ref>, <ref refid="group__util__cbuf_1ga98b2d80239319b2a9875772c28a7630a" kindref="member">xbee_cbuf_get</ref>, <ref refid="group__util__cbuf_1gad3d314f23c6c7c6fc31c9b65ce61eee1" kindref="member">xbee_cbuf_put</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/xbee/xbee_cbuf.c" line="46" column="1" bodyfile="src/xbee/xbee_cbuf.c" bodystart="46" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="group__util__cbuf_1gaf78d1608008ebde71b57a6bf34e6a3e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int xbee_cbuf_getch</definition>
        <argsstring>(xbee_cbuf_t FAR *cbuf)</argsstring>
        <name>xbee_cbuf_getch</name>
        <param>
          <type><ref refid="structxbee__cbuf__t" kindref="compound">xbee_cbuf_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>cbuf</declname>
        </param>
        <briefdescription>
<para>Remove and return the first byte of the circular buffer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cbuf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to circular buffer.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer is empty </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>0-255</parametername>
</parameternamelist>
<parameterdescription>
<para>byte removed from the head of the buffer</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__util__cbuf_1gaab9462b172fea45fc3e5ce2b3a5cca10" kindref="member">xbee_cbuf_putch</ref>, <ref refid="group__util__cbuf_1ga98b2d80239319b2a9875772c28a7630a" kindref="member">xbee_cbuf_get</ref>, <ref refid="group__util__cbuf_1gad3d314f23c6c7c6fc31c9b65ce61eee1" kindref="member">xbee_cbuf_put</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/xbee/xbee_cbuf.c" line="63" column="1" bodyfile="src/xbee/xbee_cbuf.c" bodystart="63" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="group__util__cbuf_1gaf3ac1a430fe9dbe3498e96c3b96bb0f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint_fast8_t</type>
        <definition>uint_fast8_t xbee_cbuf_used</definition>
        <argsstring>(xbee_cbuf_t FAR *cbuf)</argsstring>
        <name>xbee_cbuf_used</name>
        <param>
          <type><ref refid="structxbee__cbuf__t" kindref="compound">xbee_cbuf_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>cbuf</declname>
        </param>
        <briefdescription>
<para>Returns the number of bytes stored in the circular buffer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cbuf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to circular buffer.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0-255</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes stored in the circular buffer.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__util__cbuf_1gaa3f9edea3274c2d62f09768c38fe6a1d" kindref="member">xbee_cbuf_length</ref>, <ref refid="group__util__cbuf_1ga9a2eeedf642bdf31dba98aacdc5a7d75" kindref="member">xbee_cbuf_free</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/xbee/xbee_cbuf.c" line="81" column="1" bodyfile="src/xbee/xbee_cbuf.c" bodystart="81" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="group__util__cbuf_1ga9a2eeedf642bdf31dba98aacdc5a7d75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint_fast8_t</type>
        <definition>uint_fast8_t xbee_cbuf_free</definition>
        <argsstring>(xbee_cbuf_t FAR *cbuf)</argsstring>
        <name>xbee_cbuf_free</name>
        <param>
          <type><ref refid="structxbee__cbuf__t" kindref="compound">xbee_cbuf_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>cbuf</declname>
        </param>
        <briefdescription>
<para>Returns the number of additional bytes that can be stored in the circular buffer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cbuf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to circular buffer.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0-255</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of unused bytes in the circular buffer.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__util__cbuf_1gaa3f9edea3274c2d62f09768c38fe6a1d" kindref="member">xbee_cbuf_length</ref>, <ref refid="group__util__cbuf_1ga9a2eeedf642bdf31dba98aacdc5a7d75" kindref="member">xbee_cbuf_free</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/xbee/xbee_cbuf.c" line="88" column="1" bodyfile="src/xbee/xbee_cbuf.c" bodystart="88" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="group__util__cbuf_1gaf0cf797a0e4ee8c9e518e0d8b9554b10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xbee_cbuf_flush</definition>
        <argsstring>(xbee_cbuf_t FAR *cbuf)</argsstring>
        <name>xbee_cbuf_flush</name>
        <param>
          <type><ref refid="structxbee__cbuf__t" kindref="compound">xbee_cbuf_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>cbuf</declname>
        </param>
        <briefdescription>
<para>Flush the contents of the circular buffer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">cbuf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to circular buffer. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/xbee/xbee_cbuf.c" line="95" column="1" bodyfile="src/xbee/xbee_cbuf.c" bodystart="95" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="group__util__cbuf_1gad3d314f23c6c7c6fc31c9b65ce61eee1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint_fast8_t</type>
        <definition>uint_fast8_t xbee_cbuf_put</definition>
        <argsstring>(xbee_cbuf_t FAR *cbuf, const void FAR *buffer, uint_fast8_t length)</argsstring>
        <name>xbee_cbuf_put</name>
        <param>
          <type><ref refid="structxbee__cbuf__t" kindref="compound">xbee_cbuf_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>cbuf</declname>
        </param>
        <param>
          <type>const void <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>uint_fast8_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Append multiple bytes to the end of a circular buffer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">cbuf</parametername>
</parameternamelist>
<parameterdescription>
<para>circular buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>data to copy into circular buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes to copy</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0-255</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes copied (may be less than length if buffer is full) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/xbee/xbee_cbuf.c" line="102" column="1" bodyfile="src/xbee/xbee_cbuf.c" bodystart="102" bodyend="127"/>
        <references refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" compoundref="platform_8h" startline="370">FAR</references>
      </memberdef>
      <memberdef kind="function" id="group__util__cbuf_1ga98b2d80239319b2a9875772c28a7630a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint_fast8_t</type>
        <definition>uint_fast8_t xbee_cbuf_get</definition>
        <argsstring>(xbee_cbuf_t *cbuf, void FAR *buffer, uint_fast8_t length)</argsstring>
        <name>xbee_cbuf_get</name>
        <param>
          <type><ref refid="structxbee__cbuf__t" kindref="compound">xbee_cbuf_t</ref> *</type>
          <declname>cbuf</declname>
        </param>
        <param>
          <type>void <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>uint_fast8_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Read (and remove) multiple bytes from circular buffer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">cbuf</parametername>
</parameternamelist>
<parameterdescription>
<para>circular buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>destination to copy data from circular buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes to copy</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0-255</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes copied (may be less than length if buffer is empty) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/xbee/xbee_cbuf.c" line="131" column="1" bodyfile="src/xbee/xbee_cbuf.c" bodystart="131" bodyend="154"/>
        <references refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" compoundref="platform_8h" startline="370">FAR</references>
        <referencedby refid="group__xbee__ota__client_1ga1e29a78ac03e3450859847d4a5e3b73b" compoundref="xbee__ota__client_8c" startline="90" endline="103">_xbee_ota_xmodem_read</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Circular buffer data type used by the OTA (Over-The-Air) firmware update client and transparent serial cluster. </para>    </briefdescription>
    <detaileddescription>
<para>Write to tail, read from head. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2010-2012<sp/>Digi<sp/>International<sp/>Inc.,</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>not<sp/>expressly<sp/>granted<sp/>are<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>Source<sp/>Code<sp/>Form<sp/>is<sp/>subject<sp/>to<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>Mozilla<sp/>Public</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>License,<sp/>v.<sp/>2.0.<sp/>If<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>MPL<sp/>was<sp/>not<sp/>distributed<sp/>with<sp/>this<sp/>file,</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>You<sp/>can<sp/>obtain<sp/>one<sp/>at<sp/>http://mozilla.org/MPL/2.0/.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>Digi<sp/>International<sp/>Inc.<sp/>11001<sp/>Bren<sp/>Road<sp/>East,<sp/>Minnetonka,<sp/>MN<sp/>55343</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>=======================================================================</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="comment">/***<sp/>BeginHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cbuf_8h" kindref="compound">xbee/cbuf.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Functions<sp/>are<sp/>documented<sp/>in<sp/>xbee/cbuf.h<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>xbee_cbuf_init<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="group__util__cbuf_1gabf58cafa9f3e989b433a14c23a94cebb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__util__cbuf_1gabf58cafa9f3e989b433a14c23a94cebb" kindref="member">xbee_cbuf_init</ref>(<sp/><ref refid="structxbee__cbuf__t" kindref="compound">xbee_cbuf_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*cbuf,<sp/>uint_fast8_t<sp/>datasize)</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>cbuf<sp/>||<sp/>(datasize<sp/>&lt;<sp/>3)<sp/>||<sp/>(datasize<sp/>&amp;<sp/>(datasize<sp/>+<sp/>1)))</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/>cbuf-&gt;mask<sp/>=<sp/>datasize;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/>cbuf-&gt;lock<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/>cbuf-&gt;head<sp/>=<sp/>cbuf-&gt;tail<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>xbee_cbuf_putch<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="group__util__cbuf_1gaab9462b172fea45fc3e5ce2b3a5cca10" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__util__cbuf_1gaab9462b172fea45fc3e5ce2b3a5cca10" kindref="member">xbee_cbuf_putch</ref>(<sp/><ref refid="structxbee__cbuf__t" kindref="compound">xbee_cbuf_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*cbuf,<sp/>uint_fast8_t<sp/>ch)</highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/>t;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/>t<sp/>=<sp/>cbuf-&gt;tail;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/>cbuf-&gt;data[t]<sp/>=<sp/>ch;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/>t<sp/>=<sp/>(t<sp/>+<sp/>1)<sp/>&amp;<sp/>cbuf-&gt;mask;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/>if<sp/>(t<sp/>==<sp/>cbuf-&gt;head)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>buffer<sp/>is<sp/>full</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/>cbuf-&gt;tail<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>xbee_cbuf_getch<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="group__util__cbuf_1gaf78d1608008ebde71b57a6bf34e6a3e1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__util__cbuf_1gaf78d1608008ebde71b57a6bf34e6a3e1" kindref="member">xbee_cbuf_getch</ref>(<sp/><ref refid="structxbee__cbuf__t" kindref="compound">xbee_cbuf_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*cbuf)</highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><sp/>h;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref><sp/><sp/>retval;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/>h<sp/>=<sp/>cbuf-&gt;head;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h<sp/>==<sp/>cbuf-&gt;tail)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>buffer<sp/>is<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/>retval<sp/>=<sp/>cbuf-&gt;data[h];</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/>cbuf-&gt;head<sp/>=<sp/>(h<sp/>+<sp/>1)<sp/>&amp;<sp/>cbuf-&gt;mask;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>xbee_cbuf_used<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="group__util__cbuf_1gaf3ac1a430fe9dbe3498e96c3b96bb0f7" refkind="member"><highlight class="normal">uint_fast8_t<sp/><ref refid="group__util__cbuf_1gaf3ac1a430fe9dbe3498e96c3b96bb0f7" kindref="member">xbee_cbuf_used</ref>(<sp/><ref refid="structxbee__cbuf__t" kindref="compound">xbee_cbuf_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*cbuf)</highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(cbuf-&gt;tail<sp/>-<sp/>cbuf-&gt;head)<sp/>&amp;<sp/>cbuf-&gt;mask;</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>xbee_cbuf_free<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="group__util__cbuf_1ga9a2eeedf642bdf31dba98aacdc5a7d75" refkind="member"><highlight class="normal">uint_fast8_t<sp/><ref refid="group__util__cbuf_1ga9a2eeedf642bdf31dba98aacdc5a7d75" kindref="member">xbee_cbuf_free</ref>(<sp/><ref refid="structxbee__cbuf__t" kindref="compound">xbee_cbuf_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*cbuf)</highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(cbuf-&gt;head<sp/>-<sp/>cbuf-&gt;tail<sp/>-<sp/>1)<sp/>&amp;<sp/>cbuf-&gt;mask;</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>xbee_cbuf_flush<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="group__util__cbuf_1gaf0cf797a0e4ee8c9e518e0d8b9554b10" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__util__cbuf_1gaf0cf797a0e4ee8c9e518e0d8b9554b10" kindref="member">xbee_cbuf_flush</ref>(<sp/><ref refid="structxbee__cbuf__t" kindref="compound">xbee_cbuf_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*cbuf)</highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/>cbuf-&gt;head<sp/>=<sp/>cbuf-&gt;tail;</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>xbee_cbuf_put<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="group__util__cbuf_1gad3d314f23c6c7c6fc31c9b65ce61eee1" refkind="member"><highlight class="normal">uint_fast8_t<sp/><ref refid="group__util__cbuf_1gad3d314f23c6c7c6fc31c9b65ce61eee1" kindref="member">xbee_cbuf_put</ref>(<sp/><ref refid="structxbee__cbuf__t" kindref="compound">xbee_cbuf_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*cbuf,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*buffer,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint_fast8_t<sp/><ref refid="group__zdo_1gab2b3adeb2a67e656ff030b56727fd0ac" kindref="member">length</ref>)</highlight></codeline>
<codeline lineno="104"><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>optimize<sp/>by<sp/>using<sp/>two<sp/>memcpy<sp/>calls</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/>uint_fast8_t<sp/>copy;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/>uint_fast8_t<sp/>stop;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/>uint_fast8_t<sp/>mask<sp/>=<sp/>cbuf-&gt;mask;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/>stop<sp/>=<sp/>(cbuf-&gt;head<sp/>-<sp/>1)<sp/>&amp;<sp/>mask;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>tail<sp/>==<sp/>stop,<sp/>buffer<sp/>is<sp/>full</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(copy<sp/>=<sp/>length;<sp/>copy<sp/>&amp;&amp;<sp/>cbuf-&gt;tail<sp/>!=<sp/>stop;<sp/>--copy)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cbuf-&gt;data[cbuf-&gt;tail]<sp/>=<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)buffer;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffer<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)buffer<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cbuf-&gt;tail<sp/>=<sp/>(cbuf-&gt;tail<sp/>+<sp/>1)<sp/>&amp;<sp/>mask;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>XBEE_CBUF_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(length<sp/>!=<sp/>copy)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>%u<sp/>bytes<sp/>in\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>length<sp/>-<sp/>copy);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>length<sp/>-<sp/>copy;</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>xbee_cbuf_get<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="group__util__cbuf_1ga98b2d80239319b2a9875772c28a7630a" refkind="member"><highlight class="normal">uint_fast8_t<sp/><ref refid="group__util__cbuf_1ga98b2d80239319b2a9875772c28a7630a" kindref="member">xbee_cbuf_get</ref>(<sp/><ref refid="structxbee__cbuf__t" kindref="compound">xbee_cbuf_t</ref><sp/>*cbuf,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*buffer,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint_fast8_t<sp/><ref refid="group__zdo_1gab2b3adeb2a67e656ff030b56727fd0ac" kindref="member">length</ref>)</highlight></codeline>
<codeline lineno="133"><highlight class="normal">{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>optimize<sp/>by<sp/>using<sp/>two<sp/>memcpy<sp/>calls</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/>uint_fast8_t<sp/>copy;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/>uint_fast8_t<sp/>mask<sp/>=<sp/>cbuf-&gt;mask;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>head<sp/>==<sp/>tail,<sp/>buffer<sp/>is<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(copy<sp/>=<sp/>length;<sp/>copy<sp/>&amp;&amp;<sp/>cbuf-&gt;head<sp/>!=<sp/>cbuf-&gt;tail;<sp/>--copy)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)buffer<sp/>=<sp/>cbuf-&gt;data[cbuf-&gt;head];</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffer<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)buffer<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cbuf-&gt;head<sp/>=<sp/>(cbuf-&gt;head<sp/>+<sp/>1)<sp/>&amp;<sp/>mask;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>XBEE_CBUF_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(length<sp/>!=<sp/>copy)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>%u<sp/>bytes<sp/>out\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>length<sp/>-<sp/>copy);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>length<sp/>-<sp/>copy;</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/xbee/xbee_cbuf.c"/>
  </compounddef>
</doxygen>
