<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="xbee__ota__client_8c" kind="file" language="C++">
    <compoundname>xbee_ota_client.c</compoundname>
    <includes local="no">string.h</includes>
    <includes refid="platform_8h" local="yes">xbee/platform.h</includes>
    <includes refid="ota__client_8h" local="yes">xbee/ota_client.h</includes>
    <includes refid="cbuf_8h" local="yes">xbee/cbuf.h</includes>
    <incdepgraph>
      <node id="1429">
        <label>xbee/device.h</label>
        <link refid="device_8h"/>
        <childnode refid="1422" relation="include">
        </childnode>
        <childnode refid="1430" relation="include">
        </childnode>
        <childnode refid="1431" relation="include">
        </childnode>
        <childnode refid="1432" relation="include">
        </childnode>
      </node>
      <node id="1434">
        <label>xbee/transparent_serial.h</label>
        <link refid="transparent__serial_8h"/>
        <childnode refid="1422" relation="include">
        </childnode>
        <childnode refid="1432" relation="include">
        </childnode>
      </node>
      <node id="1423">
        <label>errno.h</label>
      </node>
      <node id="1425">
        <label>xbee/jslong_glue.h</label>
        <link refid="jslong__glue_8h_source"/>
        <childnode refid="1426" relation="include">
        </childnode>
      </node>
      <node id="1420">
        <label>src/xbee/xbee_ota_client.c</label>
        <link refid="xbee__ota__client_8c"/>
        <childnode refid="1421" relation="include">
        </childnode>
        <childnode refid="1422" relation="include">
        </childnode>
        <childnode refid="1427" relation="include">
        </childnode>
        <childnode refid="1433" relation="include">
        </childnode>
      </node>
      <node id="1424">
        <label>stddef.h</label>
      </node>
      <node id="1432">
        <label>wpan/aps.h</label>
        <link refid="aps_8h"/>
        <childnode refid="1431" relation="include">
        </childnode>
      </node>
      <node id="1421">
        <label>string.h</label>
      </node>
      <node id="1431">
        <label>wpan/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="1422" relation="include">
        </childnode>
      </node>
      <node id="1422">
        <label>xbee/platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="1423" relation="include">
        </childnode>
        <childnode refid="1424" relation="include">
        </childnode>
        <childnode refid="1425" relation="include">
        </childnode>
      </node>
      <node id="1430">
        <label>xbee/serial.h</label>
        <link refid="serial_8h"/>
        <childnode refid="1422" relation="include">
        </childnode>
      </node>
      <node id="1427">
        <label>xbee/ota_client.h</label>
        <link refid="ota__client_8h"/>
        <childnode refid="1422" relation="include">
        </childnode>
        <childnode refid="1428" relation="include">
        </childnode>
        <childnode refid="1432" relation="include">
        </childnode>
        <childnode refid="1433" relation="include">
        </childnode>
        <childnode refid="1434" relation="include">
        </childnode>
      </node>
      <node id="1433">
        <label>xbee/cbuf.h</label>
        <link refid="cbuf_8h"/>
        <childnode refid="1422" relation="include">
        </childnode>
      </node>
      <node id="1428">
        <label>xbee/xmodem.h</label>
        <link refid="xmodem_8h"/>
        <childnode refid="1422" relation="include">
        </childnode>
        <childnode refid="1429" relation="include">
        </childnode>
      </node>
      <node id="1426">
        <label>xbee/jslong.h</label>
        <link refid="jslong_8h_source"/>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__xbee__ota__client_1ga8d196639e5234b3a56eb5c00ae730261" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _xbee_ota_transparent_rx</definition>
        <argsstring>(const wpan_envelope_t FAR *envelope, void FAR *context)</argsstring>
        <name>_xbee_ota_transparent_rx</name>
        <param>
          <type>const <ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref> <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>envelope</declname>
        </param>
        <param>
          <type>void <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Cluster handler for &quot;Digi Transparent Serial&quot; cluster. </para>        </briefdescription>
        <detaileddescription>
<internal><para>Used in the cluster table of <ref refid="group__wpan__aps_1ga83cb85a2a1e374554f9ad735c9c06e7b" kindref="member">WPAN_ENDPOINT_DIGI_DATA</ref> (0xE8) for cluster DIGI_CLUST_SERIAL (0x0011).</para><para>This is a preliminary API and WILL change in a future release. This version is dedicated to processing responses in OTA (over-the-air) firmware updates and has not been generalized for other uses.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">envelope</parametername>
</parameternamelist>
<parameterdescription>
<para>information about the frame (addresses, endpoint, profile, cluster, etc.) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">context</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structxbee__ota__t" kindref="compound">xbee_ota_t</ref> structure</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>handled data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!0</parametername>
</parameternamelist>
<parameterdescription>
<para>some sort of error processing data</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__wpan__aps_1ga8575b0db762a5fbb858d4994c9b657e3" kindref="member">wpan_aps_handler_fn()</ref> </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/xbee/xbee_ota_client.c" line="47" column="1" bodyfile="src/xbee/xbee_ota_client.c" bodystart="47" bodyend="73"/>
        <references refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" compoundref="platform_8h" startline="370">FAR</references>
      </memberdef>
      <memberdef kind="function" id="group__xbee__ota__client_1ga1e29a78ac03e3450859847d4a5e3b73b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _xbee_ota_xmodem_read</definition>
        <argsstring>(void FAR *context, void FAR *buffer, int16_t bytes)</argsstring>
        <name>_xbee_ota_xmodem_read</name>
        <param>
          <type>void <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>void <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="group__hal__dos_1ga2140805d08462d474b82ddc8d1c2f3e6" kindref="member">int16_t</ref></type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<internal><para>Function assigned to the <computeroutput>stream.read</computeroutput> function pointer of an <ref refid="structxbee__xmodem__state__t" kindref="compound">xbee_xmodem_state_t</ref> object. Reads data from the target specified in the <ref refid="structxbee__ota__t" kindref="compound">xbee_ota_t</ref> structure.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">context</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structxbee__ota__t" kindref="compound">xbee_ota_t</ref> structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer to store read data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum number of bytes to write to <computeroutput>buffer</computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__util__xmodem_1ga25f49dbd4c2f9e274a32217a709d6382" kindref="member">xbee_xmodem_read_fn()</ref> </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/xbee/xbee_ota_client.c" line="90" column="1" bodyfile="src/xbee/xbee_ota_client.c" bodystart="90" bodyend="103"/>
        <references refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" compoundref="platform_8h" startline="95">EINVAL</references>
        <references refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" compoundref="platform_8h" startline="370">FAR</references>
        <references refid="group__util__cbuf_1ga98b2d80239319b2a9875772c28a7630a" compoundref="xbee__cbuf_8c" startline="131" endline="154">xbee_cbuf_get</references>
      </memberdef>
      <memberdef kind="function" id="group__xbee__ota__client_1ga88905a78517417dd42f6356038717d01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _xbee_ota_xmodem_write</definition>
        <argsstring>(void FAR *context, const void FAR *buffer, int16_t bytes)</argsstring>
        <name>_xbee_ota_xmodem_write</name>
        <param>
          <type>void <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const void <ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="group__hal__dos_1ga2140805d08462d474b82ddc8d1c2f3e6" kindref="member">int16_t</ref></type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<internal><para>Function assigned to the <computeroutput>stream.write</computeroutput> function pointer of an <ref refid="structxbee__xmodem__state__t" kindref="compound">xbee_xmodem_state_t</ref> object. Sends data to the target specified in the <ref refid="structxbee__ota__t" kindref="compound">xbee_ota_t</ref> structure.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">context</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structxbee__ota__t" kindref="compound">xbee_ota_t</ref> structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>source of data to send </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes to send</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of bytes sent to target.</para></simplesect>
<simplesect kind="see"><para><ref refid="group__util__xmodem_1ga57f329cc7f4e1b18f5baddb888221d7f" kindref="member">xbee_xmodem_write_fn()</ref> </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/xbee/xbee_ota_client.c" line="119" column="1" bodyfile="src/xbee/xbee_ota_client.c" bodystart="119" bodyend="154"/>
        <references refid="group__wpan__aps_1ga7f9a38312b9025348d42a4ed0042ce37" compoundref="aps_8h" startline="42">wpan_envelope_t::dev</references>
        <references refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" compoundref="platform_8h" startline="95">EINVAL</references>
        <references refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" compoundref="platform_8h" startline="370">FAR</references>
        <references refid="group__wpan__aps_1ga1892eba2086d12ac2b09005aeb09ea3b" compoundref="aps_8h" startline="62">wpan_envelope_t::length</references>
        <references refid="group__wpan__aps_1ga8737375e27cb391ff381fff10dc0c132" compoundref="aps_8h" startline="61">wpan_envelope_t::payload</references>
        <references refid="group__wpan__aps_1ga1eafd87038a2134da7a1f72e6801d23b" compoundref="aps_8h" startline="237">WPAN_CLUST_FLAG_ENCRYPT</references>
        <references refid="group__wpan__aps_1ga95e2bb4e4c546191c059f54179064fc3" compoundref="wpan__aps_8c" startline="712" endline="723">wpan_envelope_create</references>
        <references refid="group__wpan__types_1ga1674d7b825e528a482725d1c06b02c10" compoundref="types_8h" startline="68">WPAN_NET_ADDR_UNDEFINED</references>
        <references refid="group__xbee__ota__client_1ga2febaa0d599fc4f6fd94fbcf232f8d09" compoundref="ota__client_8h" startline="41">XBEE_OTA_FLAG_APS_ENCRYPT</references>
        <references refid="group__xbee__transparent_1gafbf9e5ccdb17be373012bd690a76e570" compoundref="xbee__transparent__serial_8c" startline="32" endline="41">xbee_transparent_serial</references>
      </memberdef>
      <memberdef kind="function" id="group__xbee__ota__client_1ga4805b029d840b86133ef62d64866c6af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int xbee_ota_init</definition>
        <argsstring>(xbee_ota_t *ota, wpan_dev_t *dev, const addr64 *target)</argsstring>
        <name>xbee_ota_init</name>
        <param>
          <type><ref refid="structxbee__ota__t" kindref="compound">xbee_ota_t</ref> *</type>
          <declname>ota</declname>
        </param>
        <param>
          <type><ref refid="structwpan__dev__t" kindref="compound">wpan_dev_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>const <ref refid="unionaddr64" kindref="compound">addr64</ref> *</type>
          <declname>target</declname>
        </param>
        <briefdescription>
<para>Initialize an <ref refid="structxbee__ota__t" kindref="compound">xbee_ota_t</ref> structure to send firmware updates to <computeroutput>target</computeroutput> using <computeroutput>dev</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>Calls xbee_xmodem_tx_init and xbee_xmodem_set_stream (therefore unnecessary to do so in main program).</para><para>Note that when performing OTA updates, you MUST use XBEE_XMODEM_FLAG_64 (64-byte xmodem blocks) if calling xbee_xmodem_tx_init directly.</para><para>Sends frames to the target to have it start the update cycle.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">ota</parametername>
</parameternamelist>
<parameterdescription>
<para>state-tracking structure for sending update </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>device to use for sending update </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">target</parametername>
</parameternamelist>
<parameterdescription>
<para>64-bit address of target device</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>successfully initialized </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>invalid parameter passed in </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/xbee/xbee_ota_client.c" line="157" column="1" bodyfile="src/xbee/xbee_ota_client.c" bodystart="157" bodyend="211"/>
        <references refid="group__xbee__ota__client_1gaa86751bccf68cd96c559cd1947e455c9" compoundref="ota__client_8h" startline="44">xbee_ota_t::cbuf</references>
        <references refid="group__wpan__aps_1ga262a92f94287e77cb56350951893bae2" compoundref="aps_8h" startline="46">wpan_envelope_t::cluster_id</references>
        <references refid="group__wpan__aps_1ga0992896b3999455a300e8ba25c368ae8" compoundref="aps_8h" startline="50">wpan_envelope_t::dest_endpoint</references>
        <references refid="group__xbee__ota__client_1gaa7262b389539547f7405189cd4bf274c" compoundref="ota__client_8h" startline="37">xbee_ota_t::dev</references>
        <references refid="group__wpan__aps_1gga1227ab13b41d82d9c9c9080662f74cf7aedb825ada66b8c7bbfbeaee6d9dfba0a" compoundref="aps_8h" startline="141">DIGI_CLUST_PROG_XBEE_OTA_UPD</references>
        <references refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" compoundref="platform_8h" startline="95">EINVAL</references>
        <references refid="group__xbee__ota__client_1ga1e87af3c18a2fd36c61faf89949bdc3f" compoundref="ota__client_8h" startline="39">xbee_ota_t::flags</references>
        <references refid="group__wpan__aps_1ga5ca7f19e5697de2baf0e2147a41a5792" compoundref="aps_8h" startline="45">wpan_envelope_t::profile_id</references>
        <references refid="group__wpan__aps_1ga9781a5a281ee97f7f67d8ebe2c4f54db" compoundref="aps_8h" startline="49">wpan_envelope_t::source_endpoint</references>
        <references refid="group__xbee__ota__client_1gaef649f9dfe9109ac17db3fda73c61036" compoundref="ota__client_8h" startline="38">xbee_ota_t::target</references>
        <references refid="group__wpan__aps_1ga1eafd87038a2134da7a1f72e6801d23b" compoundref="aps_8h" startline="237">WPAN_CLUST_FLAG_ENCRYPT</references>
        <references refid="group__wpan__aps_1ga83cb85a2a1e374554f9ad735c9c06e7b" compoundref="aps_8h" startline="118">WPAN_ENDPOINT_DIGI_DATA</references>
        <references refid="group__wpan__aps_1ga95e2bb4e4c546191c059f54179064fc3" compoundref="wpan__aps_8c" startline="712" endline="723">wpan_envelope_create</references>
        <references refid="group__wpan__types_1ga1674d7b825e528a482725d1c06b02c10" compoundref="types_8h" startline="68">WPAN_NET_ADDR_UNDEFINED</references>
        <references refid="group__wpan__aps_1gaa90d7d1301c7de503f39113eb83e93e5" compoundref="aps_8h" startline="86">WPAN_PROFILE_DIGI</references>
        <references refid="group__util__cbuf_1gabf58cafa9f3e989b433a14c23a94cebb" compoundref="xbee__cbuf_8c" startline="31" endline="42">xbee_cbuf_init</references>
        <references refid="group__xbee__ota__client_1ga2febaa0d599fc4f6fd94fbcf232f8d09" compoundref="ota__client_8h" startline="41">XBEE_OTA_FLAG_APS_ENCRYPT</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Support code for over-the-air (OTA) firmware updates of application code on Programmable XBee target. </para>    </briefdescription>
    <detaileddescription>
<para>Preliminary API may change in future releases. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2010-2012<sp/>Digi<sp/>International<sp/>Inc.,</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>not<sp/>expressly<sp/>granted<sp/>are<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>Source<sp/>Code<sp/>Form<sp/>is<sp/>subject<sp/>to<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>Mozilla<sp/>Public</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>License,<sp/>v.<sp/>2.0.<sp/>If<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>MPL<sp/>was<sp/>not<sp/>distributed<sp/>with<sp/>this<sp/>file,</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>You<sp/>can<sp/>obtain<sp/>one<sp/>at<sp/>http://mozilla.org/MPL/2.0/.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>Digi<sp/>International<sp/>Inc.<sp/>11001<sp/>Bren<sp/>Road<sp/>East,<sp/>Minnetonka,<sp/>MN<sp/>55343</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>=======================================================================</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="comment">/***<sp/>BeginHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="platform_8h" kindref="compound">xbee/platform.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ota__client_8h" kindref="compound">xbee/ota_client.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cbuf_8h" kindref="compound">xbee/cbuf.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>_xbee_ota_transparent_rx<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/><sp/><sp/>Thoughts<sp/>on<sp/>generalizing<sp/>this<sp/>function...</highlight></codeline>
<codeline lineno="35"><highlight class="comment"></highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/><sp/><sp/>There<sp/>could<sp/>be<sp/>a<sp/>table<sp/>of<sp/>ieee<sp/>addresses<sp/>and<sp/>associated<sp/>functions<sp/>to<sp/>pass</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/><sp/><sp/>payloads<sp/>to.<sp/><sp/>The<sp/>last<sp/>entry<sp/>of<sp/>the<sp/>table<sp/>would<sp/>be<sp/>a<sp/>&quot;catchall&quot;<sp/>for</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/><sp/><sp/>paylaods<sp/>from<sp/>devices<sp/>not<sp/>in<sp/>the<sp/>table.</highlight></codeline>
<codeline lineno="39"><highlight class="comment"></highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/><sp/><sp/>&quot;context&quot;<sp/>of<sp/>this<sp/>function<sp/>would<sp/>be<sp/>the<sp/>table.<sp/><sp/>Functions<sp/>that<sp/>get<sp/>the</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/><sp/><sp/>payloads<sp/>would<sp/>just<sp/>accept<sp/>the<sp/>envelope<sp/>parameter.</highlight></codeline>
<codeline lineno="42"><highlight class="comment"></highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/><sp/><sp/>Maybe<sp/>better<sp/>to<sp/>just<sp/>have<sp/>a<sp/>list<sp/>of<sp/>functions<sp/>that<sp/>can<sp/>see<sp/>all<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/><sp/><sp/>payloads?</highlight></codeline>
<codeline lineno="45"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>documented<sp/>in<sp/>xbee/ota_client.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="group__xbee__ota__client_1ga8d196639e5234b3a56eb5c00ae730261" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__xbee__ota__client_1ga8d196639e5234b3a56eb5c00ae730261" kindref="member">_xbee_ota_transparent_rx</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*envelope,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*context)</highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><ref refid="structxbee__ota__t" kindref="compound">xbee_ota_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*ota<sp/>=<sp/>context;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>XBEE_OTA_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>got<sp/>%u-byte<sp/>transparent<sp/>data:\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>envelope-&gt;length);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__util_1gaa321236a0cb6f4e0dad592fdf1b550d2" kindref="member">hex_dump</ref>(<sp/>envelope-&gt;payload,<sp/>envelope-&gt;length,<sp/><ref refid="group__hal_1ga696f6553e33cbd20eda34e220ec9939a" kindref="member">HEX_DUMP_FLAG_TAB</ref>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>flag<sp/>in<sp/>xbee_ota_t<sp/>to<sp/>ignore<sp/>data<sp/>until<sp/>we&apos;re<sp/>actually<sp/>doing<sp/>update?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(memcmp(<sp/>&amp;ota-&gt;target,<sp/>&amp;envelope-&gt;ieee_address,<sp/>8)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__util__cbuf_1gad3d314f23c6c7c6fc31c9b65ce61eee1" kindref="member">xbee_cbuf_put</ref>(<sp/>&amp;ota-&gt;rxbuf.cbuf,<sp/>envelope-&gt;payload,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="group__hal__dos_1gae1affc9ca37cfb624959c866a73f83c2" kindref="member">uint8_t</ref>)<sp/>envelope-&gt;length);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>XBEE_OTA_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>ignoring<sp/>transparent<sp/>serial<sp/>data<sp/>from<sp/>wrong<sp/>address\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>BeginHeader<sp/>xbee_ota_init<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>EndHeader<sp/>*/</highlight></codeline>
<codeline lineno="90" refid="group__xbee__ota__client_1ga1e29a78ac03e3450859847d4a5e3b73b" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__xbee__ota__client_1ga1e29a78ac03e3450859847d4a5e3b73b" kindref="member">_xbee_ota_xmodem_read</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*context,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*buffer,<sp/><ref refid="group__hal__dos_1ga2140805d08462d474b82ddc8d1c2f3e6" kindref="member">int16_t</ref><sp/>bytes)</highlight></codeline>
<codeline lineno="91"><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Function<sp/>must<sp/>follow<sp/>prototype<sp/>of<sp/>xbee_xmodem_read_fn,<sp/>so<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>parameter<sp/>is<sp/>always<sp/>a<sp/>void<sp/>pointer.<sp/><sp/>Cast<sp/>it<sp/>to<sp/>the<sp/>correct<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><ref refid="structxbee__ota__t" kindref="compound">xbee_ota_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*ota<sp/>=<sp/>context;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(context<sp/>==<sp/>NULL<sp/>||<sp/>buffer<sp/>==<sp/>NULL<sp/>||<sp/>bytes<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__util__cbuf_1ga98b2d80239319b2a9875772c28a7630a" kindref="member">xbee_cbuf_get</ref>(<sp/>&amp;ota-&gt;rxbuf.cbuf,<sp/>buffer,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(bytes<sp/>&gt;<sp/>255)<sp/>?<sp/>255<sp/>:<sp/>(uint_fast8_t)<sp/>bytes);</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="group__xbee__ota__client_1ga88905a78517417dd42f6356038717d01" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__xbee__ota__client_1ga88905a78517417dd42f6356038717d01" kindref="member">_xbee_ota_xmodem_write</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*context,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*buffer,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__hal__dos_1ga2140805d08462d474b82ddc8d1c2f3e6" kindref="member">int16_t</ref><sp/>bytes)</highlight></codeline>
<codeline lineno="121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Function<sp/>must<sp/>follow<sp/>prototype<sp/>of<sp/>xbee_xmodem_write_fn,<sp/>so<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>parameter<sp/>is<sp/>always<sp/>a<sp/>void<sp/>pointer.<sp/><sp/>Cast<sp/>it<sp/>to<sp/>the<sp/>correct<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><ref refid="structxbee__ota__t" kindref="compound">xbee_ota_t</ref><sp/><ref refid="group__hal_1gaef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*ota<sp/>=<sp/>context;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref><sp/><sp/><sp/>envelope;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(context<sp/>==<sp/>NULL<sp/>||<sp/>buffer<sp/>==<sp/>NULL<sp/>||<sp/>bytes<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__wpan__aps_1ga95e2bb4e4c546191c059f54179064fc3" kindref="member">wpan_envelope_create</ref>(<sp/>&amp;envelope,<sp/>ota-&gt;<ref refid="group__wpan__aps_1ga7f9a38312b9025348d42a4ed0042ce37" kindref="member">dev</ref>,<sp/>&amp;ota-&gt;target,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wpan__types_1ga1674d7b825e528a482725d1c06b02c10" kindref="member">WPAN_NET_ADDR_UNDEFINED</ref>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/>envelope.<ref refid="group__wpan__aps_1ga8737375e27cb391ff381fff10dc0c132" kindref="member">payload</ref><sp/>=<sp/>buffer;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/>envelope.<ref refid="group__wpan__aps_1ga1892eba2086d12ac2b09005aeb09ea3b" kindref="member">length</ref><sp/>=<sp/>bytes;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/>envelope.options<sp/>=<sp/>(ota-&gt;flags<sp/>&amp;<sp/><ref refid="group__xbee__ota__client_1ga2febaa0d599fc4f6fd94fbcf232f8d09" kindref="member">XBEE_OTA_FLAG_APS_ENCRYPT</ref>)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/><ref refid="group__wpan__aps_1ga1eafd87038a2134da7a1f72e6801d23b" kindref="member">WPAN_CLUST_FLAG_ENCRYPT</ref><sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__xbee__transparent_1gafbf9e5ccdb17be373012bd690a76e570" kindref="member">xbee_transparent_serial</ref>(<sp/>&amp;envelope))</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>error<sp/>on<sp/>send,<sp/>try<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>XBEE_OTA_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>%s<sp/>failed\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/></highlight><highlight class="stringliteral">&quot;xbee_transparent_serial&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>successfully<sp/>sent<sp/>packet<sp/>of<sp/>&lt;bytes&gt;<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>XBEE_OTA_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf<sp/>(</highlight><highlight class="stringliteral">&quot;%s:<sp/>sent<sp/>%u<sp/>bytes\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>bytes);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bytes;</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="comment">//<sp/>documented<sp/>in<sp/>xbee/ota_client.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="group__xbee__ota__client_1ga4805b029d840b86133ef62d64866c6af" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__xbee__ota__client_1ga4805b029d840b86133ef62d64866c6af" kindref="member">xbee_ota_init</ref>(<sp/><ref refid="structxbee__ota__t" kindref="compound">xbee_ota_t</ref><sp/>*ota,<sp/><ref refid="structwpan__dev__t" kindref="compound">wpan_dev_t</ref><sp/>*dev,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unionaddr64" kindref="compound">addr64</ref><sp/>*target)</highlight></codeline>
<codeline lineno="158"><highlight class="normal">{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><ref refid="structwpan__envelope__t" kindref="compound">wpan_envelope_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>envelope;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ota<sp/>==<sp/>NULL<sp/>||<sp/>dev<sp/>==<sp/>NULL<sp/>||<sp/>target<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__hal_1ga2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/>ota-&gt;<ref refid="group__xbee__ota__client_1gaa7262b389539547f7405189cd4bf274c" kindref="member">dev</ref><sp/>=<sp/>dev;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/>ota-&gt;<ref refid="group__xbee__ota__client_1gaef649f9dfe9109ac17db3fda73c61036" kindref="member">target</ref><sp/>=<sp/>*target;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__util__cbuf_1gabf58cafa9f3e989b433a14c23a94cebb" kindref="member">xbee_cbuf_init</ref>(<sp/>&amp;ota-&gt;rxbuf.<ref refid="group__xbee__ota__client_1gaa86751bccf68cd96c559cd1947e455c9" kindref="member">cbuf</ref>,<sp/>255);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__wpan__aps_1ga95e2bb4e4c546191c059f54179064fc3" kindref="member">wpan_envelope_create</ref>(<sp/>&amp;envelope,<sp/>dev,<sp/>target,<sp/><ref refid="group__wpan__types_1ga1674d7b825e528a482725d1c06b02c10" kindref="member">WPAN_NET_ADDR_UNDEFINED</ref>);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/>envelope.<ref refid="group__wpan__aps_1ga5ca7f19e5697de2baf0e2147a41a5792" kindref="member">profile_id</ref><sp/>=<sp/><ref refid="group__wpan__aps_1gaa90d7d1301c7de503f39113eb83e93e5" kindref="member">WPAN_PROFILE_DIGI</ref>;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/>envelope.<ref refid="group__wpan__aps_1ga9781a5a281ee97f7f67d8ebe2c4f54db" kindref="member">source_endpoint</ref><sp/>=<sp/><ref refid="group__wpan__aps_1ga83cb85a2a1e374554f9ad735c9c06e7b" kindref="member">WPAN_ENDPOINT_DIGI_DATA</ref>;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/>envelope.<ref refid="group__wpan__aps_1ga0992896b3999455a300e8ba25c368ae8" kindref="member">dest_endpoint</ref><sp/>=<sp/><ref refid="group__wpan__aps_1ga83cb85a2a1e374554f9ad735c9c06e7b" kindref="member">WPAN_ENDPOINT_DIGI_DATA</ref>;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/>envelope.<ref refid="group__wpan__aps_1ga262a92f94287e77cb56350951893bae2" kindref="member">cluster_id</ref><sp/>=<sp/><ref refid="group__wpan__aps_1gga1227ab13b41d82d9c9c9080662f74cf7aedb825ada66b8c7bbfbeaee6d9dfba0a" kindref="member">DIGI_CLUST_PROG_XBEE_OTA_UPD</ref>;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/>envelope.options<sp/>=<sp/>(ota-&gt;<ref refid="group__xbee__ota__client_1ga1e87af3c18a2fd36c61faf89949bdc3f" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="group__xbee__ota__client_1ga2febaa0d599fc4f6fd94fbcf232f8d09" kindref="member">XBEE_OTA_FLAG_APS_ENCRYPT</ref>)<sp/>?</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wpan__aps_1ga1eafd87038a2134da7a1f72e6801d23b" kindref="member">WPAN_CLUST_FLAG_ENCRYPT</ref><sp/>:<sp/>WPAN_SEND_FLAG_NONE;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ota-&gt;<ref refid="group__xbee__ota__client_1ga67b236f1ec1fbada8e400218c6e5c1f7" kindref="member">auth_length</ref>)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>envelope.<ref refid="group__wpan__aps_1ga1892eba2086d12ac2b09005aeb09ea3b" kindref="member">length</ref><sp/>=<sp/>ota-&gt;<ref refid="group__xbee__ota__client_1ga67b236f1ec1fbada8e400218c6e5c1f7" kindref="member">auth_length</ref>;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>envelope.<ref refid="group__wpan__aps_1ga8737375e27cb391ff381fff10dc0c132" kindref="member">payload</ref><sp/>=<sp/>ota-&gt;<ref refid="group__xbee__ota__client_1ga93137186f6fec6ed6ba4db70db04ca1f" kindref="member">auth_data</ref>;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>payload<sp/>must<sp/>be<sp/>at<sp/>least<sp/>one<sp/>byte<sp/>(default<sp/>to<sp/>&apos;\0&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>envelope.<ref refid="group__wpan__aps_1ga1892eba2086d12ac2b09005aeb09ea3b" kindref="member">length</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>envelope.<ref refid="group__wpan__aps_1ga8737375e27cb391ff381fff10dc0c132" kindref="member">payload</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tell<sp/>app<sp/>to<sp/>start<sp/>receiving<sp/>firmware<sp/>update</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="group__wpan__aps_1ga06f1e9e86b74ef807ded44b79b13e283" kindref="member">wpan_envelope_send</ref>(<sp/>&amp;envelope);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tell<sp/>bootloader<sp/>to<sp/>start<sp/>receiving<sp/>in<sp/>case<sp/>app<sp/>isn&apos;t<sp/>running.<sp/><sp/>Better<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>this<sp/>second,<sp/>in<sp/>case<sp/>application<sp/>on<sp/>target<sp/>is<sp/>using<sp/>Transparent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Serial<sp/>for<sp/>something<sp/>else.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/>envelope.<ref refid="group__wpan__aps_1ga8737375e27cb391ff381fff10dc0c132" kindref="member">payload</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;F&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/>envelope.<ref refid="group__wpan__aps_1ga1892eba2086d12ac2b09005aeb09ea3b" kindref="member">length</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/>envelope.<ref refid="group__wpan__aps_1ga262a92f94287e77cb56350951893bae2" kindref="member">cluster_id</ref><sp/>=<sp/><ref refid="group__wpan__aps_1gga1227ab13b41d82d9c9c9080662f74cf7a8208e143b452d11140e487d7d29eb38f" kindref="member">DIGI_CLUST_SERIAL</ref>;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__wpan__aps_1ga06f1e9e86b74ef807ded44b79b13e283" kindref="member">wpan_envelope_send</ref>(<sp/>&amp;envelope);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__util__xmodem_1gabc8da474bce7043eef3537bd492c5123" kindref="member">xbee_xmodem_tx_init</ref>(<sp/>&amp;ota-&gt;<ref refid="group__xbee__ota__client_1ga198adacee7500d0135a88d6ecc591bf5" kindref="member">xbxm</ref>,<sp/><ref refid="group__util__xmodem_1ga9c55ba56c6cba75308ee8b0b8594a6c4" kindref="member">XBEE_XMODEM_FLAG_64</ref>);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__util__xmodem_1ga3153bea635e130326e96720fe354852d" kindref="member">xbee_xmodem_set_stream</ref>(<sp/>&amp;ota-&gt;<ref refid="group__xbee__ota__client_1ga198adacee7500d0135a88d6ecc591bf5" kindref="member">xbxm</ref>,<sp/><ref refid="group__xbee__ota__client_1ga1e29a78ac03e3450859847d4a5e3b73b" kindref="member">_xbee_ota_xmodem_read</ref>,</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__xbee__ota__client_1ga88905a78517417dd42f6356038717d01" kindref="member">_xbee_ota_xmodem_write</ref>,<sp/>ota);</highlight></codeline>
<codeline lineno="211"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/xbee/xbee_ota_client.c"/>
  </compounddef>
</doxygen>
